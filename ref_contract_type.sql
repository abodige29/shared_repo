DROP TABLE IF EXISTS REF_CONTRACT_TYPE_PW;

/* PRE WORK INSERT: 
 * insert into temporary prework table REF_CONTRACT_TYPE_PW
*/

CREATE LOCAL TEMPORARY TABLE REF_CONTRACT_TYPE_PW ON COMMIT PRESERVE ROWS AS 
SELECT
	REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
	, CONTRACT_TYPE_CDE
	, CONTRACT_TYPE_DESC
	, BEGIN_DT
	, BEGIN_DTM
	, ROW_PROCESS_DTM
	, LOGICAL_DELETE_IND
	, CHECK_SUM
	, CURRENT_ROW_IND
	, END_DT
	, END_DTM
	, SOURCE_SYSTEM_ID
	, RESTRICTED_ROW_IND
	FROM(
		SELECT
		UUID_GEN(PREHASH_VALUE(CLEAN_STRING(CONTRACT_TYPE_CDE)))::UUID	AS	REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
		, CONTRACT_TYPE_CDE 											AS	CONTRACT_TYPE_CDE
		, CONTRACT_TYPE_DESC											AS	CONTRACT_TYPE_DESC
		, BEGIN_DT														AS	BEGIN_DT
		, BEGIN_DTM														AS	BEGIN_DTM
		, ROW_PROCESS_DTM												AS	ROW_PROCESS_DTM
		, LOGICAL_DELETE_IND											AS	LOGICAL_DELETE_IND
		, UUID_GEN(PREHASH_VALUE(CONTRACT_TYPE_DESC))::UUID				AS	CHECK_SUM
		, CURRENT_ROW_IND												AS	CURRENT_ROW_IND
		, END_DT														AS	END_DT
		, END_DTM														AS	END_DTM
		, SOURCE_SYSTEM_ID												AS	SOURCE_SYSTEM_ID
		, RESTRICTED_ROW_IND											AS	RESTRICTED_ROW_IND
		, ROW_NUMBER() OVER(PARTITION BY CONTRACT_TYPE_CDE ORDER BY BEGIN_DTM desc) AS RANKING
	
		FROM(
			SELECT DISTINCT 
				contract_type_cde	 											AS	CONTRACT_TYPE_CDE
				, contract_type_desc											AS	CONTRACT_TYPE_DESC
				, lst_mod_ts::DATE 												AS	BEGIN_DT
				, lst_mod_ts::TIMESTAMP(6) 										AS	BEGIN_DTM
				, CURRENT_TIMESTAMP 											AS	ROW_PROCESS_DTM
				, 'F'::BOOLEAN 													AS	LOGICAL_DELETE_IND
				, 'T'::BOOLEAN 													AS	CURRENT_ROW_IND
				, '9999-12-31'::DATE 											AS	END_DT
				, '9999-12-31'::TIMESTAMP(6) 									AS	END_DTM
				, CLEAN_STRING('209') 											AS	SOURCE_SYSTEM_ID
				, 'F'::BOOLEAN 													AS	RESTRICTED_ROW_IND
			FROM (
				SELECT DISTINCT 
					CLEAN_STRING(TRNSLT_FLD_VAL) AS contract_type_cde
					, CLEAN_STRING(COALESCE(VA_LNG_DESC,'NA')) AS contract_type_desc
					, lst_mod_ts
				FROM edw_ref.src_data_trnslt
					WHERE 
					UPPER(BTRIM(SRC_FLD_NM)) = 'SELLING_AGMT_TYPE'
					AND
					UPPER(BTRIM(TRNSLT_FLD_NM)) = 'SELLING AGREEMENT'
					AND UPPER(BTRIM(SRC_CDE)) IN ('TERSUN')
				) T1
			)Q_1
		)Q_2
		WHERE RANKING = 1;

commit;

TRUNCATE TABLE EDW_WORK.REF_CONTRACT_TYPE;

commit;

/** WORK- Apply Inserts Logic:
 * this script is used to load the records that don't have a record in target
*/

INSERT INTO EDW_WORK.REF_CONTRACT_TYPE(
	REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
	, CONTRACT_TYPE_CDE
	, CONTRACT_TYPE_DESC
	, BEGIN_DT
	, BEGIN_DTM
	, ROW_PROCESS_DTM
	, LOGICAL_DELETE_IND
	, CHECK_SUM
	, CURRENT_ROW_IND
	, END_DT
	, END_DTM
	, SOURCE_SYSTEM_ID
	, RESTRICTED_ROW_IND
	)	
	SELECT 
	DISTINCT 
		SRC.REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
		, SRC.CONTRACT_TYPE_CDE						AS	CONTRACT_TYPE_CDE
		, SRC.CONTRACT_TYPE_DESC					AS	CONTRACT_TYPE_DESC
		, '0001-01-01'::DATE 						AS	BEGIN_DT
		, '0001-01-01'::TIMESTAMP(6) 				AS	BEGIN_DTM
		, SRC.ROW_PROCESS_DTM						AS	ROW_PROCESS_DTM
		, SRC.LOGICAL_DELETE_IND
		, SRC.CHECK_SUM								AS	CHECK_SUM
		, SRC.CURRENT_ROW_IND
		, SRC.END_DT								AS	END_DT
		, SRC.END_DTM								AS	END_DTM
		, SRC.SOURCE_SYSTEM_ID						AS	SOURCE_SYSTEM_ID
		, SRC.RESTRICTED_ROW_IND					AS	RESTRICTED_ROW_IND
		
	FROM REF_CONTRACT_TYPE_PW AS SRC
		WHERE SRC.REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
			NOT IN (SELECT DISTINCT REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID 
				FROM EDW_REF.REF_CONTRACT_TYPE)	;
			
commit;
			

/*  WORK UPDATE:
 * This script finds records where the new record from the source has a different check_sum than the current target record. 
 * The current record in the target will be ended since the source record will be inserted in the next step.
 * */ 	
			
INSERT INTO EDW_WORK.REF_CONTRACT_TYPE(
	REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
	, CONTRACT_TYPE_CDE
	, CONTRACT_TYPE_DESC
	, BEGIN_DT
	, BEGIN_DTM
	, ROW_PROCESS_DTM
	, LOGICAL_DELETE_IND
	, CHECK_SUM
	, CURRENT_ROW_IND
	, END_DT
	, END_DTM
	, SOURCE_SYSTEM_ID
	, RESTRICTED_ROW_IND
	)				
SELECT 
	DISTINCT
	TGT.REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID		AS	REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
	, TGT.CONTRACT_TYPE_CDE							AS	CONTRACT_TYPE_CDE
	, TGT.CONTRACT_TYPE_DESC						AS	CONTRACT_TYPE_DESC
	, TGT.BEGIN_DT				 					AS  BEGIN_DT
	, TGT.BEGIN_DTM 		 						AS  BEGIN_DTM
	, CURRENT_TIMESTAMP(6)							AS  ROW_PROCESS_DTM
	, TGT.LOGICAL_DELETE_IND 						AS  LOGICAL_DELETE_IND
	, TGT.CHECK_SUM									AS  CHECK_SUM
	, 'F'::BOOLEAN									AS  CURRENT_ROW_IND
	, SRC.BEGIN_DT - INTERVAL '1' DAY				AS  END_DT
	, SRC.BEGIN_DTM  - INTERVAL '1' SECOND			AS  END_DTM
	, TGT.SOURCE_SYSTEM_ID 							AS  SOURCE_SYSTEM_ID
	, TGT.RESTRICTED_ROW_IND 						AS  RESTRICTED_ROW_IND
	
FROM 
	EDW_REF.REF_CONTRACT_TYPE TGT
JOIN
	REF_CONTRACT_TYPE_PW SRC
ON 
	SRC.REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID = TGT.REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
	AND TGT.CURRENT_ROW_IND = TRUE
	
WHERE 
	(TGT.CHECK_SUM <> SRC.CHECK_SUM) 
	AND TGT.SOURCE_SYSTEM_ID NOT IN ('207');

commit;


/** WORK UPDATE:
 * UPDATE PREVIOUSLY PRESENT TARGET VALUES
*/

INSERT INTO EDW_WORK.REF_CONTRACT_TYPE(
	REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
	, CONTRACT_TYPE_CDE
	, CONTRACT_TYPE_DESC
	, BEGIN_DT
	, BEGIN_DTM
	, ROW_PROCESS_DTM
	, LOGICAL_DELETE_IND
	, CHECK_SUM
	, CURRENT_ROW_IND
	, END_DT
	, END_DTM
	, SOURCE_SYSTEM_ID
	, RESTRICTED_ROW_IND
	)	
SELECT
	REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
	, CONTRACT_TYPE_CDE
	, CONTRACT_TYPE_DESC
	, BEGIN_DT
	, BEGIN_DTM
	, ROW_PROCESS_DTM
	, LOGICAL_DELETE_IND
	, CHECK_SUM
	, CURRENT_ROW_IND
	, END_DT
	, END_DTM
	, SOURCE_SYSTEM_ID
	, RESTRICTED_ROW_IND
FROM 
	(
	SELECT
	DISTINCT
	SRC.REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
	, SRC.CONTRACT_TYPE_CDE								AS	CONTRACT_TYPE_CDE
	, SRC.CONTRACT_TYPE_DESC							AS	CONTRACT_TYPE_DESC
	, SRC.BEGIN_DT				 						AS 	BEGIN_DT
	, SRC.BEGIN_DTM 		 							AS 	BEGIN_DTM
	, CURRENT_TIMESTAMP									AS	ROW_PROCESS_DTM
	, SRC.LOGICAL_DELETE_IND 							AS	LOGICAL_DELETE_IND
	, SRC.CHECK_SUM										AS 	CHECK_SUM
	, SRC.CURRENT_ROW_IND								AS	CURRENT_ROW_IND
	, SRC.END_DT										AS	END_DT
	, SRC.END_DTM										AS	END_DTM
	, SRC.SOURCE_SYSTEM_ID 								AS	SOURCE_SYSTEM_ID	
	, SRC.RESTRICTED_ROW_IND 							AS	RESTRICTED_ROW_IND
	
FROM 
	REF_CONTRACT_TYPE_PW SRC
	LEFT JOIN 
	EDW_REF.REF_CONTRACT_TYPE TGT
	ON
	SRC.REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID = TGT.REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
	AND TGT.CURRENT_ROW_IND = TRUE
	WHERE
	(--handle when there isn't a current record in target but there are historical records and a delta coming through
		(
		TGT.ROW_SID IS NULL AND SRC.REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID 
		IN (SELECT DISTINCT REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID FROM EDW_REF.REF_CONTRACT_TYPE)
		) 
		OR
		(
		TGT.ROW_SID IS NOT NULL AND (TGT.CHECK_SUM <> SRC.CHECK_SUM) 
		)
	)
	AND TGT.SOURCE_SYSTEM_ID NOT IN ('207')
	)Q_1;


/**TARGET TABLE:
 *  Delete records being updated in target
 * */

DELETE FROM
    EDW_REF.REF_CONTRACT_TYPE
WHERE
    (COALESCE(	REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID::VARCHAR, ''))
IN
    (SELECT COALESCE(	REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID::VARCHAR, '')
     FROM EDW_WORK.REF_CONTRACT_TYPE)
      AND CURRENT_ROW_IND = TRUE;
     
     
/* TARGET TABLE - INSERT WORK TABLE RECORDS *  
 * This script inserts records from work table into target table */

INSERT INTO EDW_REF.REF_CONTRACT_TYPE(
	REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
	, CONTRACT_TYPE_CDE
	, CONTRACT_TYPE_DESC
	, BEGIN_DT
	, BEGIN_DTM
	, ROW_PROCESS_DTM
	, LOGICAL_DELETE_IND
	, CHECK_SUM
	, CURRENT_ROW_IND
	, END_DT
	, END_DTM
	, SOURCE_SYSTEM_ID
	, RESTRICTED_ROW_IND
	)	
SELECT
	SRC.REF_CONTRACT_TYPE_NATURAL_KEY_HASH_UUID
	, SRC.CONTRACT_TYPE_CDE
	, SRC.CONTRACT_TYPE_DESC
	, SRC.BEGIN_DT
	, SRC.BEGIN_DTM
	, SRC.ROW_PROCESS_DTM
	, SRC.LOGICAL_DELETE_IND
	, SRC.CHECK_SUM
	, SRC.CURRENT_ROW_IND
	, SRC.END_DT
	, SRC.END_DTM
	, SRC.SOURCE_SYSTEM_ID
	, SRC.RESTRICTED_ROW_IND
FROM EDW_WORK.REF_CONTRACT_TYPE SRC;

commit;