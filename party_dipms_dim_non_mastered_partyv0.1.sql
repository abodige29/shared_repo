/*
    FileName: party_dipms_dim_non_mastered_party.sql
    Author: mma2156
    SUBJECT AREA : Party
    Table_Name :dim_non_mastered_party
    SOURCE: dipms
    Teradata Source Code: 77                       
    Create Date:2022-03-07
        
    ===============================================================================================================
    Version/JIRA Story#     Created By     Last_Modified_Date   Description
    ---------------------------------------------------------------------------------------------------------------
    		               Party-Tier2         15/03           First Version Tier-2 
    ------------------------------------------------------------------------------------------------------------------
*/ 

SELECT ANALYZE_STATISTICS('PROD_NBR_VW_TERSUN.NB_APPL_PRTY_VW');

DROP TABLE IF EXISTS  TEMP_PRTY_VW1;

CREATE LOCAL TEMPORARY TABLE TEMP_PRTY_VW1 ON COMMIT PRESERVE ROWS AS
SELECT * FROM EDW_WORK.PARTY_WINRISK_DIM_NON_MASTERED_PARTY WHERE 1<>1;

INSERT /*DIRECT*/ INTO TEMP_PRTY_VW1(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,MARITAL_STATUS_CDE,
GOVERNMENT_ID,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,SOURCE_MARITAL_STATUS_CDE)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE                                               -- rownumber to remove row level duplicates
FROM(
SELECT 
UUID_GEN(DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID, --UUID GENERATED ON DECRYPTED VALUES
PARTY_ID,
FIRST_NM,
NULL AS MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
-1 AS AUDIT_ID,                                          -- default this to -1
FALSE AS LOGICAL_DELETE_IND,
CASE WHEN END_DT = '9999-12-31' THEN TRUE ELSE FALSE END AS CURRENT_ROW_IND,                                        -- logic as per mapping doc
END_DT,
END_DTM,
'342' AS SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
-1 AS UPDATE_AUDIT_ID,                                   -- default this to -1
SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER (PARTITION BY DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,GOVERNMENT_ID, 
PARTY_ID,FIRST_NM, LAST_NM, FULL_NM, BIRTH_DT,GENDER_CDE,SENSITIVE_PARTY_IND , SOURCE_GENDER_CDE ORDER BY BEGIN_DT,END_DT) AS RNK
FROM (
SELECT 
CLEAN_STRING(VOLTAGEACCESS(SYS_PRTY_ID,'sorparty')) AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(CLEAN_STRING(VOLTAGEACCESS(SYS_PRTY_ID,'sorparty')),'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(CLEAN_STRING(VOLTAGEACCESS(FRST_NM,'name')),'name')  AS FIRST_NM,
VOLTAGEPROTECT(CLEAN_STRING(VOLTAGEACCESS(LST_NM,'name')),'name') AS LAST_NM,
VOLTAGEPROTECT(CLEAN_STRING(VOLTAGEACCESS(ENTY_NM,'name')),'name') AS FULL_NM,
VOLTAGEPROTECTDATE(VOLTAGEACCESSDATE(DOB,'dob_date'),'dob_date') AS BIRTH_DT,                                               -- voltage protect?
CLEAN_STRING(GNDR_CD) AS GENDER_CDE,
(CASE WHEN SNS='Y' THEN TRUE ELSE FALSE END) AS SENSITIVE_PARTY_IND ,
CLEAN_STRING(SRC_GNDR) AS SOURCE_GENDER_CDE,
CLEAN_STRING(MARI_STUS_CD) AS MARITAL_STATUS_CDE,
CLEAN_STRING(SRC_MARI_STUS_CD) AS SOURCE_MARITAL_STATUS_CDE,
VOLTAGEPROTECT(CLEAN_STRING(VOLTAGEACCESS(GOVT_ID,'ssn_char')),'ssn_char') AS GOVERNMENT_ID,
PRTY_DATA_FR_DT ::DATE AS BEGIN_DT,
PRTY_DATA_FR_DT ::TIMESTAMP(6) AS BEGIN_DTM,
PRTY_DATA_TO_DT ::DATE END_DT,
PRTY_DATA_TO_DT ::TIMESTAMP(6) AS END_DTM,
(CASE WHEN CLEAN_STRING(SRC_DEL_IND)='Y' THEN TRUE ELSE FALSE END) AS SOURCE_DELETE_IND
FROM PROD_NBR_VW_TERSUN.NB_APPL_PRTY_VW WHERE SRC_SYS_ID = 77
)Q_1)Q_2
WHERE RNK=1;

DROP TABLE IF EXISTS TEMP_PRTY_VW2;

CREATE LOCAL TEMPORARY TABLE TEMP_PRTY_VW2 ON COMMIT PRESERVE ROWS AS 
SELECT *,ROW_NUMBER() OVER (PARTITION BY DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID ORDER BY BEGIN_DT,END_DT)
AS RW_NUM FROM TEMP_PRTY_VW1 ORDER BY DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID;

DROP TABLE IF EXISTS TEMP_PRTY_VW;

CREATE LOCAL TEMPORARY TABLE TEMP_PRTY_VW ON COMMIT PRESERVE ROWS AS 
SELECT * FROM EDW_WORK.PARTY_WINRISK_DIM_NON_MASTERED_PARTY WHERE 1<>1;

INSERT /*DIRECT*/ INTO TEMP_PRTY_VW(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
A.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
A.PARTY_ID,
A.FIRST_NM,
A.MIDDLE_NM,
A.LAST_NM,
A.FULL_NM,
A.BIRTH_DT,
A.GENDER_CDE,
A.SENSITIVE_PARTY_IND,
A.SOURCE_GENDER_CDE,
A.MARITAL_STATUS_CDE,
A.SOURCE_MARITAL_STATUS_CDE,
A.GOVERNMENT_ID,
A.BEGIN_DT,
A.BEGIN_DTM,
A.ROW_PROCESS_DTM,
A.AUDIT_ID,
A.LOGICAL_DELETE_IND,
A.CHECK_SUM,
CASE WHEN A.RW_NUM<B.RW_NUM AND A.RW_NUM=B.RW_NUM-1 THEN FALSE ELSE A.CURRENT_ROW_IND END AS CURRENT_ROW_IND,
CASE WHEN A.RW_NUM<B.RW_NUM AND A.RW_NUM=B.RW_NUM-1 AND A.END_DT>B.BEGIN_DT - INTERVAL '1' DAY THEN 
B.BEGIN_DT- INTERVAL '1' DAY ELSE A.END_DT END AS END_DT,
CASE WHEN A.RW_NUM<B.RW_NUM AND A.RW_NUM=B.RW_NUM-1 AND A.END_DTM>B.BEGIN_DTM- INTERVAL '1' SECOND THEN               -- DTM column??
B.BEGIN_DTM-INTERVAL '1' SECOND ELSE A.END_DTM END AS END_DTM,
A.SOURCE_SYSTEM_ID,
A.RESTRICTED_ROW_IND,
A.UPDATE_AUDIT_ID,
A.SOURCE_DELETE_IND,
A.PARTY_TYPE_CDE 
FROM TEMP_PRTY_VW2 A 
LEFT JOIN
TEMP_PRTY_VW2 B
ON A.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID=B.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID
AND A.RW_NUM=B.RW_NUM-1;

SELECT ANALYZE_STATISTICS('PROD_NBR_VW_TERSUN.NB_PRTY_BENE_VW');

DROP TABLE IF EXISTS TEMP_BENE_VW1;

CREATE LOCAL TEMPORARY TABLE TEMP_BENE_VW1 ON COMMIT PRESERVE ROWS AS 
SELECT * FROM  EDW_WORK.PARTY_WINRISK_DIM_NON_MASTERED_PARTY  WHERE 1<>1;


INSERT /*DIRECT*/ INTO TEMP_BENE_VW1(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,MARITAL_STATUS_CDE
,SOURCE_GENDER_CDE)::uuid AS CHECK_SUM,           
CURRENT_ROW_IND, 
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE                                            -- add rownumber to remove row level duplicates
FROM (
SELECT 
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,  --UUID GENERATED ON DECRYPTED VALUES
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,                                                                          ----- encryption
VOLTAGEPROTECT(FIRST_NM ,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
NULL AS FULL_NM,
NULL AS BIRTH_DT,
NULL AS GENDER_CDE,
NULL AS SENSITIVE_PARTY_IND,
NULL AS SOURCE_GENDER_CDE,
NULL AS MARITAL_STATUS_CDE,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6)  AS ROW_PROCESS_DTM,
-1 AS AUDIT_ID,                                    -- default it to -1
FALSE AS LOGICAL_DELETE_IND,
CASE WHEN END_DT  = '9999-12-31' THEN TRUE ELSE FALSE END AS CURRENT_ROW_IND,                                  -- change the logic according to mapping doc
END_DT,
END_DTM,
'342' AS SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
-1 AS UPDATE_AUDIT_ID,                             -- default it to -1  
FALSE AS SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER (PARTITION BY FIRST_NM,LAST_NM,PARTY_ID ORDER BY BEGIN_DT,END_DT) AS RNK
FROM(
SELECT 
CLEAN_STRING(VOLTAGEACCESS(SRC.FRST_NM,'name'))AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(SRC.LST_NM,'name')) AS LAST_NM,
SRC.BENE_FR_DT::DATE AS BEGIN_DT,
SRC.BENE_FR_DT::TIMESTAMP(6) AS BEGIN_DTM,
SRC.BENE_TO_DT::DATE AS END_DT,
SRC.BENE_TO_DT::TIMESTAMP(6) AS END_DTM,
CLEAN_STRING(APPL.HLDG_KEY) || SRC.BENE_ID || COALESCE (FIRST_NM,'')|| COALESCE (LAST_NM,'')  AS PARTY_ID         -- decryption
FROM 
PROD_NBR_VW_TERSUN.NB_PRTY_BENE_VW SRC 
LEFT JOIN 
(SELECT DISTINCT HLDG_KEY,APPL_ID FROM PROD_NBR_VW_TERSUN.NB_APPL_VW)APPL 
ON SRC.APPL_ID = APPL.APPL_ID 
WHERE SRC_SYS_ID = 77)Q_1
)Q_2
WHERE RNK=1;



DROP TABLE IF EXISTS TEMP_BENE_VW2;

CREATE LOCAL TEMPORARY TABLE TEMP_BENE_VW2 ON COMMIT PRESERVE ROWS AS 
SELECT *,ROW_NUMBER() OVER (PARTITION BY DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID ORDER BY BEGIN_DT,END_DT)
AS RW_NUM FROM TEMP_BENE_VW1 ORDER BY DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID;

DROP TABLE IF EXISTS TEMP_BENE_VW;

CREATE LOCAL TEMPORARY TABLE TEMP_BENE_VW ON COMMIT PRESERVE ROWS AS 
SELECT * FROM  EDW_WORK.PARTY_WINRISK_DIM_NON_MASTERED_PARTY  WHERE 1<>1;

INSERT /*DIRECT*/ INTO TEMP_BENE_VW (
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
A.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
A.PARTY_ID,
A.FIRST_NM,
A.MIDDLE_NM,
A.LAST_NM,
A.FULL_NM,
A.BIRTH_DT,
A.GENDER_CDE,
A.SENSITIVE_PARTY_IND,
A.SOURCE_GENDER_CDE,
A.MARITAL_STATUS_CDE,
A.BEGIN_DT,
A.BEGIN_DTM,
A.ROW_PROCESS_DTM,
A.AUDIT_ID,
A.LOGICAL_DELETE_IND,
A.CHECK_SUM,
CASE WHEN A.RW_NUM<B.RW_NUM AND A.RW_NUM=B.RW_NUM-1 THEN FALSE ELSE A.CURRENT_ROW_IND END AS CURRENT_ROW_IND,
CASE WHEN A.RW_NUM<B.RW_NUM AND A.RW_NUM=B.RW_NUM-1 AND A.END_DT>B.BEGIN_DT - INTERVAL '1' DAY THEN 
B.BEGIN_DT- INTERVAL '1' DAY ELSE A.END_DT END AS END_DT,
CASE WHEN A.RW_NUM<B.RW_NUM AND A.RW_NUM=B.RW_NUM-1 AND A.END_DTM>B.BEGIN_DTM- INTERVAL '1' SECOND THEN                 --- dtm column 
B.BEGIN_DTM-INTERVAL '1' SECOND ELSE A.END_DTM END AS END_DTM,
A.SOURCE_SYSTEM_ID,
A.RESTRICTED_ROW_IND,
A.UPDATE_AUDIT_ID,
A.SOURCE_DELETE_IND,
A.PARTY_TYPE_CDE
FROM TEMP_BENE_VW2 A
LEFT JOIN TEMP_BENE_VW2 B
ON A.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID=B.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID
AND A.RW_NUM=B.RW_NUM-1;

SELECT ANALYZE_STATISTICS('PROD_NBR_VW_TERSUN.NB_PRTY_CASE_OWN_VW');

DROP TABLE IF EXISTS TEMP_OWN_VW1;

CREATE LOCAL TEMPORARY TABLE TEMP_OWN_VW1 ON COMMIT PRESERVE ROWS AS 
SELECT * FROM EDW_WORK.PARTY_WINRISK_DIM_NON_MASTERED_PARTY WHERE 1<>1; 

INSERT /*DIRECT*/ INTO TEMP_OWN_VW1(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,MARITAL_STATUS_CDE,
SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,SOURCE_LOGIN_ID)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE                                                                -- add rownumber and remove duplicates
FROM(
SELECT
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,  --UUID GENERATED ON DECRYPTED VALUES
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(FIRST_NM,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
NULL AS FULL_NM,
NULL AS BIRTH_DT,
NULL AS GENDER_CDE,
NULL AS SENSITIVE_PARTY_IND,
NULL AS SOURCE_GENDER_CDE,
NULL AS MARITAL_STATUS_CDE,
VOLTAGEPROTECT(SOURCE_LOGIN_ID,'account_char') AS SOURCE_LOGIN_ID,
'0001-01-01'::DATE AS BEGIN_DT,
'0001-01-01'::TIMESTAMP(6) AS BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS  ROW_PROCESS_DTM,
-1 AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
'999-12-31'::DATE AS END_DT,
'999-12-31'::TIMESTAMP(6) AS END_DTM,
'342' AS SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
-1 AS UPDATE_AUDIT_ID,
FALSE AS SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE 
FROM (
SELECT DISTINCT
CLEAN_STRING(VOLTAGEACCESS(FRST_NM,'name')) AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(LST_NM,'name')) AS LAST_NM,
CLEAN_STRING(VOLTAGEACCESS(LOG_IN_ID,'account_char')) AS SOURCE_LOGIN_ID,
COALESCE(FIRST_NM,'') || COALESCE(LAST_NM,'') || COALESCE(SOURCE_LOGIN_ID,'') AS PARTY_ID                          -- decrypted values
FROM prod_nbr_vw_tersun.NB_PRTY_CASE_OWN_VW WHERE SRC_SYS_ID = 77
)Q_1
)Q_2;
