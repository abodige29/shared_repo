/*
    FileName: party_rel_advisor_nb_agreement.sql
    Author: mma2216
    SUBJECT AREA : Party
    Table_Name :party_rel_advisor_nb_agreement
    SOURCE: AWF
    Teradata Source Code: 82                       
    Create Date:2022-02-08
        
    ===============================================================================================================
    Version/JIRA Story#     Created By     Last_Modified_Date   Description
    ---------------------------------------------------------------------------------------------------------------
    JIRA 3464               Party-Tier2         02/08           First Version Tier-2 
    ------------------------------------------------------------------------------------------------------------------
    */	
DROP TABLE IF EXISTS TEMP_1;
--loading NB_APPL_VW data into temp table-
CREATE LOCAL TEMPORARY TABLE TEMP_1 ON COMMIT PRESERVE ROWS AS
/*DIRECT*/ 
SELECT appl_id, hldg_key, hldg_key_pfx, hldg_key_sfx, carr_admin_sys_cd
FROM (
SELECT appl_id, 
clean_string(hldg_key) as hldg_key, 
clean_string(hldg_key_pfx) as hldg_key_pfx, 
clean_string(hldg_key_sfx) as hldg_key_sfx, 
coalesce(clean_string(carr_admin_sys_cd),'Unk') as carr_admin_sys_cd,
row_number() over(partition by appl_id order by appl_data_fr_dt desc) as rnk
FROM prod_nbr_vw_tersun.NB_APPL_VW
)dedup
WHERE RNK=1
ORDER BY appl_id;

SELECT ANALYZE_STATISTICS('TEMP_1');

--loading PARTY_MASTER_OF_MASTERS_XREF data into temp table
DROP TABLE IF EXISTS TEMP_2;
CREATE LOCAL TEMPORARY TABLE TEMP_2 ON COMMIT PRESERVE ROWS AS 
/*DIRECT*/
SELECT DISTINCT DIM_PARTY_NATURAL_KEY_HASH_UUID, VOLTAGEACCESS(SOR_PARTY_ID,'sorparty') AS SOR_PARTY_ID
FROM EDW_VW.PARTY_MASTER_OF_MASTERS_XREF_VW
WHERE CURRENT_ROW_IND
AND LOGICAL_DELETE_IND = FALSE
AND PARTY_ID_TYPE_CDE = 'Agency'
ORDER BY SOR_PARTY_ID;


SELECT ANALYZE_STATISTICS('TEMP_2');


--loading PARTY_MASTER_OF_MASTERS_XREF data into temp table
DROP TABLE IF EXISTS TEMP_3;
CREATE LOCAL TEMPORARY TABLE TEMP_3 ON COMMIT PRESERVE ROWS AS 
/* +DIRECT */
SELECT DISTINCT DIM_PARTY_NATURAL_KEY_HASH_UUID, VOLTAGEACCESS(SOR_PARTY_ID,'sorparty') AS SOR_PARTY_ID
FROM EDW_vw.PARTY_MASTER_OF_MASTERS_XREF_vw 
WHERE CURRENT_ROW_IND
AND LOGICAL_DELETE_IND = FALSE
AND PARTY_ID_TYPE_CDE = 'Bp_id'
ORDER BY SOR_PARTY_ID;

SELECT ANALYZE_STATISTICS('TEMP_3');

DROP TABLE IF EXISTS TEMP_PRE_WORK;
CREATE LOCAL TEMPORARY TABLE TEMP_PRE_WORK ON COMMIT PRESERVE ROWS AS 
SELECT * FROM EDW_VW.REL_ADVISOR_NB_AGREEMENT_VW WHERE 1<>1;

--MOVING THE DATA INTO THE PREWORK
INSERT /* +DIRECT */INTO TEMP_PRE_WORK
(
DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
DIM_PARTY_NATURAL_KEY_HASH_UUID,
REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID,
DISTRIBUTOR_DIM_PARTY_NATURAL_KEY_HASH_UUID,
ADVISOR_FIRST_YEAR_COMMISSION_PRC,
ADVISOR_RENEWAL_COMMISSION_PRC,
SOURCE_BP_ID,
SOURCE_SCARAB_ID,
ANNUAL_COMMISSION_AMT,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
--ROW_SID,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
SOURCE_PARTY_SUB_ROLE_CDE,
BUSINESS_PARTNER_COMMISSION_SPLIT_ID)
SELECT 
       DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
       DIM_PARTY_NATURAL_KEY_HASH_UUID,
       REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
       REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
       AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID,
       DISTRIBUTOR_DIM_PARTY_NATURAL_KEY_HASH_UUID,
       ADVISOR_FIRST_YEAR_COMMISSION_PRC,
       ADVISOR_RENEWAL_COMMISSION_PRC,
       SOURCE_BP_ID,
       SOURCE_SCARAB_ID,
       ANNUAL_COMMISSION_AMT,
       BEGIN_DT,
       BEGIN_DTM,
       ROW_PROCESS_DTM,
       AUDIT_ID,
       LOGICAL_DELETE_IND,
       CHECK_SUM,
       CURRENT_ROW_IND,
       END_DT,
       END_DTM,
       SOURCE_SYSTEM_ID,
       RESTRICTED_ROW_IND,
       --ROW_SID,
       UPDATE_AUDIT_ID,
       SOURCE_DELETE_IND,
       SOURCE_PARTY_SUB_ROLE_CDE,
       BUSINESS_PARTNER_COMMISSION_SPLIT_ID
       FROM 
(
       SELECT 
    DIM_PARTY_NATURAL_KEY_HASH_UUID, 
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, 
    REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
    REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID, 
    AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID, 
    DISTRIBUTOR_DIM_PARTY_NATURAL_KEY_HASH_UUID, 
    ADVISOR_FIRST_YEAR_COMMISSION_PRC, 
    ADVISOR_RENEWAL_COMMISSION_PRC, 
    SOURCE_BP_ID,
    SOURCE_SCARAB_ID,
    ANNUAL_COMMISSION_AMT,
    BEGIN_DT, 
    BEGIN_DTM, 
    ROW_PROCESS_DTM, 
    AUDIT_ID, 
    LOGICAL_DELETE_IND, 
    UUID_GEN(SOURCE_DELETE_IND, AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID::VARCHAR, DISTRIBUTOR_DIM_PARTY_NATURAL_KEY_HASH_UUID::VARCHAR, ADVISOR_FIRST_YEAR_COMMISSION_PRC,          
             ADVISOR_RENEWAL_COMMISSION_PRC, BUSINESS_PARTNER_COMMISSION_SPLIT_ID,ANNUAL_COMMISSION_AMT, SOURCE_PARTY_SUB_ROLE_CDE,
              SOURCE_BP_ID, SOURCE_SCARAB_ID)::UUID AS CHECK_SUM, 
    CURRENT_ROW_IND, 
    END_DT, 
    END_DTM, 
    SOURCE_SYSTEM_ID, 
    RESTRICTED_ROW_IND,  
    UPDATE_AUDIT_ID, 
    SOURCE_DELETE_IND,
    BUSINESS_PARTNER_COMMISSION_SPLIT_ID,
    SOURCE_PARTY_SUB_ROLE_CDE,
    ROW_NUMBER() OVER(PARTITION BY DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, DIM_PARTY_NATURAL_KEY_HASH_UUID, REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
                                   REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID, AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID, DISTRIBUTOR_DIM_PARTY_NATURAL_KEY_HASH_UUID, 
                                   ADVISOR_FIRST_YEAR_COMMISSION_PRC, ADVISOR_RENEWAL_COMMISSION_PRC, SOURCE_BP_ID, SOURCE_SCARAB_ID,
                                   BUSINESS_PARTNER_COMMISSION_SPLIT_ID, SOURCE_PARTY_SUB_ROLE_CDE
                      ORDER BY BEGIN_DT DESC, END_DT DESC ) AS RNK
FROM
(      
       SELECT 
    CASE WHEN (CARR_ADMIN_SYS_CD, HLDG_KEY_PFX, HLDG_KEY, HLDG_KEY_SFX) IS NULL 
         THEN UUID_GEN(NULL)::UUID 
        ELSE UUID_GEN(CARR_ADMIN_SYS_CD, 'Appl', HLDG_KEY_PFX, HLDG_KEY, HLDG_KEY_SFX)::UUID
              END                                                                                                                                            AS DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, 
    CASE WHEN DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL 
                THEN UUID_GEN(NULL)::UUID 
                ELSE DIM_PARTY_NATURAL_KEY_HASH_UUID 
                END                                                                                                                                    AS DIM_PARTY_NATURAL_KEY_HASH_UUID,
           UUID_GEN(CLEAN_STRING('Agt'))::UUID                                                                                  AS REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
    CASE WHEN AGT_TYP_CD IS NULL 
         THEN UUID_GEN(NULL)::UUID 
         WHEN AGT_TYP_CD='0'
         THEN UUID_GEN('Unk')::UUID 
         ELSE UUID_GEN(AGT_TYP_CD)::UUID
         END AS REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
    CASE WHEN AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL
         THEN UUID_GEN(NULL)::UUID 
         ELSE AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID 
         END AS AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID,
    UUID_GEN(NULL)::UUID   AS DISTRIBUTOR_DIM_PARTY_NATURAL_KEY_HASH_UUID,
    FRST_YR_COMM AS ADVISOR_FIRST_YEAR_COMMISSION_PRC,
    REN_COMM     AS ADVISOR_RENEWAL_COMMISSION_PRC,
    BP_ID        AS SOURCE_BP_ID,
    SCARAB_ID    AS SOURCE_SCARAB_ID,
    ANNL_COMM    AS ANNUAL_COMMISSION_AMT,
    BP_COMM_SPLT_FR_DT::DATE         AS BEGIN_DT,
    BP_COMM_SPLT_FR_DT::TIMESTAMP(6) AS BEGIN_DTM, 
    CURRENT_TIMESTAMP(6)             AS ROW_PROCESS_DTM,
    :audit_id   AS AUDIT_ID,
    FALSE       AS LOGICAL_DELETE_IND,
    CASE WHEN BP_COMM_SPLT_TO_DT::DATE = '9999-12-31'::DATE THEN TRUE ELSE FALSE END AS CURRENT_ROW_IND,
    BP_COMM_SPLT_TO_DT::DATE          AS END_DT,
    BP_COMM_SPLT_TO_DT::TIMESTAMP(6)  AS END_DTM,
    '341'       AS SOURCE_SYSTEM_ID,
    FALSE       AS RESTRICTED_ROW_IND,
    :audit_id   AS UPDATE_AUDIT_ID,
    CASE WHEN SRC_DEL_IND='Y' THEN TRUE ELSE FALSE END AS SOURCE_DELETE_IND,
    BP_COMM_SPLT_ID AS BUSINESS_PARTNER_COMMISSION_SPLIT_ID ,
       SRC_AGT_TYP     AS SOURCE_PARTY_SUB_ROLE_CDE  
       FROM 
(
SELECT 
    appl.CARR_ADMIN_SYS_CD      AS CARR_ADMIN_SYS_CD,
    appl.HLDG_KEY_PFX           AS HLDG_KEY_PFX,
    LPAD(appl.HLDG_KEY,20,'0')  AS HLDG_KEY,
    appl.HLDG_KEY_SFX           AS HLDG_KEY_SFX,
    src.FRST_YR_COMM::NUMERIC(9,6) AS FRST_YR_COMM,
    src.REN_COMM::NUMERIC(9,6)     AS REN_COMM,
    CLEAN_STRING(src.AGT_TYP_CD)   AS AGT_TYP_CD,
    CLEAN_STRING(src.SRC_AGT_TYP)  AS SRC_AGT_TYP,
    src.BP_ID                      AS BP_ID,
    src.SCARAB_ID                  AS SCARAB_ID,
    src.BP_COMM_SPLT_FR_DT,
    src.BP_COMM_SPLT_TO_DT,
    CLEAN_STRING(src.SRC_DEL_IND)  AS SRC_DEL_IND,
    CLEAN_STRING(src.BP_COMM_SPLT_ID) AS BP_COMM_SPLT_ID,
    xref.DIM_PARTY_NATURAL_KEY_HASH_UUID AS DIM_PARTY_NATURAL_KEY_HASH_UUID,
       agy_xref.DIM_PARTY_NATURAL_KEY_HASH_UUID AS AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID
    FROM prod_nbr_vw_tersun.NB_BP_COMM_SPLT_VW src
LEFT JOIN TEMP_1 appl
ON src.APPL_ID = appl.APPL_ID
LEFT JOIN TEMP_2 agy_xref
ON LPAD(VOLTAGEACCESS(src.PRNT_SEL_AGY,'sorparty'),10,'0') = agy_xref.SOR_PARTY_ID
LEFT JOIN TEMP_3 xref
ON LPAD(VOLTAGEACCESS(src.BP_ID,'sorparty'),10,'0') = xref.SOR_PARTY_ID
WHERE src.SRC_SYS_ID = '82'
)SOURCE_DATASET
)CLEANSED_DATASET
)DEDUP 
WHERE RNK=1;

SELECT ANALYZE_STATISTICS('TEMP_PRE_WORK');


--CREATING THE TEMP_TABLE FROM THE PREWORK 
DROP TABLE IF EXISTS TEMP_4;
CREATE LOCAL TEMPORARY TABLE TEMP_4 ON COMMIT PRESERVE ROWS AS 
SELECT *, ROW_NUMBER() OVER(PARTITION BY DIM_PARTY_NATURAL_KEY_HASH_UUID, DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, 
            REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID, REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID ORDER BY END_DTM DESC, BEGIN_DTM DESC) AS RW_NUM 
FROM TEMP_PRE_WORK
ORDER BY DIM_PARTY_NATURAL_KEY_HASH_UUID, 
DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, 
REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
BEGIN_DTM,
END_DTM; 

SELECT ANALYZE_STATISTICS('TEMP_4');

TRUNCATE TABLE EDW_WORK.PARTY_AWF_REL_ADVISOR_NB_AGREEMENT;
INSERT INTO EDW_WORK.PARTY_AWF_REL_ADVISOR_NB_AGREEMENT
(DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
DIM_PARTY_NATURAL_KEY_HASH_UUID,
REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID,
DISTRIBUTOR_DIM_PARTY_NATURAL_KEY_HASH_UUID,
ADVISOR_FIRST_YEAR_COMMISSION_PRC,
ADVISOR_RENEWAL_COMMISSION_PRC,
SOURCE_BP_ID,
SOURCE_SCARAB_ID,
ANNUAL_COMMISSION_AMT,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
--OW_SID,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
SOURCE_PARTY_SUB_ROLE_CDE,
BUSINESS_PARTNER_COMMISSION_SPLIT_ID )
SELECT 
DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
DIM_PARTY_NATURAL_KEY_HASH_UUID,
REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID,
DISTRIBUTOR_DIM_PARTY_NATURAL_KEY_HASH_UUID,
ADVISOR_FIRST_YEAR_COMMISSION_PRC,
ADVISOR_RENEWAL_COMMISSION_PRC,
SOURCE_BP_ID,
SOURCE_SCARAB_ID,
ANNUAL_COMMISSION_AMT,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
--ROW_SID,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
SOURCE_PARTY_SUB_ROLE_CDE,
BUSINESS_PARTNER_COMMISSION_SPLIT_ID 
FROM (
SELECT
    A.DIM_PARTY_NATURAL_KEY_HASH_UUID, 
    A.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, 
    A.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID, 
    A.AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID,
    A.REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID, 
    A.DISTRIBUTOR_DIM_PARTY_NATURAL_KEY_HASH_UUID, 
    A.ADVISOR_FIRST_YEAR_COMMISSION_PRC, 
    A.ADVISOR_RENEWAL_COMMISSION_PRC, 
    A.SOURCE_BP_ID,
    A.SOURCE_SCARAB_ID,
    A.ANNUAL_COMMISSION_AMT,
    A.BEGIN_DT, 
    A.BEGIN_DTM, 
    A.ROW_PROCESS_DTM, 
    A.AUDIT_ID, 
    A.LOGICAL_DELETE_IND, 
    A.CHECK_SUM, 
    CASE WHEN A.RW_NUM > B.RW_NUM AND B.RW_NUM = A.RW_NUM-1 AND A.CURRENT_ROW_IND=TRUE THEN FALSE ELSE A.CURRENT_ROW_IND END AS CURRENT_ROW_IND,
    CASE WHEN A.RW_NUM>B.RW_NUM AND B.RW_NUM=A.RW_NUM-1 AND A.CURRENT_ROW_IND=TRUE THEN B.BEGIN_DT - INTERVAL '1' DAY 
         WHEN A.RW_NUM=1 AND A.CURRENT_ROW_IND=TRUE AND A.END_DT<>'9999-12-31' THEN '9999-12-31'::DATE
         ELSE A.END_DT END AS END_DT,
    CASE WHEN A.RW_NUM>B.RW_NUM AND B.RW_NUM=A.RW_NUM-1 AND A.CURRENT_ROW_IND=TRUE THEN B.BEGIN_DTM - INTERVAL '1' SECOND 
         WHEN A.RW_NUM=1 AND A.CURRENT_ROW_IND=TRUE AND A.END_DT<>'9999-12-31' THEN '9999-12-31'::TIMESTAMP(6)
         ELSE A.END_DTM END AS END_DTM, 
    A.SOURCE_SYSTEM_ID, 
    A.RESTRICTED_ROW_IND,  
    A.UPDATE_AUDIT_ID, 
    A.SOURCE_DELETE_IND,
    A.BUSINESS_PARTNER_COMMISSION_SPLIT_ID,
    A.SOURCE_PARTY_SUB_ROLE_CDE
FROM TEMP_4 A 
LEFT JOIN TEMP_4 B 
ON A.DIM_PARTY_NATURAL_KEY_HASH_UUID = B.DIM_PARTY_NATURAL_KEY_HASH_UUID
AND A.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID = B.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID
AND A.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID = B.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID
AND A.REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID = B.REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID
AND A.RW_NUM = B.RW_NUM+1
)A;

COMMIT; 

DELETE FROM EDW.REL_ADVISOR_NB_AGREEMENT WHERE SOURCE_SYSTEM_ID IN ('341','82');

COMMIT;

---MOVING THE DATA INTO TARGET TABLE
INSERT INTO EDW.REL_ADVISOR_NB_AGREEMENT
(
    DIM_PARTY_NATURAL_KEY_HASH_UUID, 
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, 
    REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID, 
    REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID, 
    AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID, 
    DISTRIBUTOR_DIM_PARTY_NATURAL_KEY_HASH_UUID, 
    ADVISOR_FIRST_YEAR_COMMISSION_PRC, 
    ADVISOR_RENEWAL_COMMISSION_PRC, 
    SOURCE_BP_ID,
    SOURCE_SCARAB_ID,
    ANNUAL_COMMISSION_AMT,
    BEGIN_DT, 
    BEGIN_DTM, 
    ROW_PROCESS_DTM, 
    AUDIT_ID, 
    LOGICAL_DELETE_IND, 
    CHECK_SUM, 
    CURRENT_ROW_IND, 
    END_DT, 
    END_DTM, 
    SOURCE_SYSTEM_ID, 
    RESTRICTED_ROW_IND,  
    UPDATE_AUDIT_ID, 
    SOURCE_DELETE_IND,
    BUSINESS_PARTNER_COMMISSION_SPLIT_ID,
    SOURCE_PARTY_SUB_ROLE_CDE
) 
SELECT 
    DIM_PARTY_NATURAL_KEY_HASH_UUID, 
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, 
    REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID, 
    REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID, 
    AGENCY_DIM_PARTY_NATURAL_KEY_HASH_UUID, 
    DISTRIBUTOR_DIM_PARTY_NATURAL_KEY_HASH_UUID, 
    ADVISOR_FIRST_YEAR_COMMISSION_PRC, 
    ADVISOR_RENEWAL_COMMISSION_PRC, 
    SOURCE_BP_ID,
    SOURCE_SCARAB_ID,
    ANNUAL_COMMISSION_AMT,
    BEGIN_DT, 
    BEGIN_DTM, 
    ROW_PROCESS_DTM, 
    AUDIT_ID, 
    LOGICAL_DELETE_IND, 
    CHECK_SUM, 
    CURRENT_ROW_IND, 
    END_DT, 
    END_DTM, 
    SOURCE_SYSTEM_ID, 
    RESTRICTED_ROW_IND,  
    UPDATE_AUDIT_ID, 
    SOURCE_DELETE_IND,
    BUSINESS_PARTNER_COMMISSION_SPLIT_ID,
    SOURCE_PARTY_SUB_ROLE_CDE
FROM EDW_WORK.PARTY_AWF_REL_ADVISOR_NB_AGREEMENT;

DROP TABLE IF EXISTS EDW_WORK.party_rel_advisor_nb_agreement

----DDL

       drop table if exists edw_work.party_awf_rel_advisor_nb_agreement;
       CREATE TABLE edw_work.party_awf_rel_advisor_nb_agreement
       (
           dim_agreement_natural_key_hash_uuid uuid NOT NULL,
           dim_party_natural_key_hash_uuid uuid NOT NULL,
           ref_party_role_natural_key_hash_uuid uuid NOT NULL,
           ref_party_sub_role_natural_key_hash_uuid uuid NOT NULL,
           agency_dim_party_natural_key_hash_uuid uuid,
           distributor_dim_party_natural_key_hash_uuid uuid,
           advisor_first_year_commission_prc numeric(9,6),
           advisor_renewal_commission_prc numeric(9,6),
           business_partner_commission_split_id varchar(50),
           source_party_sub_role_cde varchar(50),
           annual_commission_amt numeric(17,4),
           source_bp_id varchar(50),
           source_scarab_id varchar(50),
           begin_dt date NOT NULL DEFAULT '0001-01-01'::date,
           begin_dtm timestamp(6) NOT NULL,
           row_process_dtm timestamp(6) NOT NULL,
           audit_id int NOT NULL DEFAULT 0,
           logical_delete_ind boolean NOT NULL DEFAULT false,
           check_sum uuid NOT NULL,
           current_row_ind boolean NOT NULL DEFAULT true,
           end_dt date NOT NULL DEFAULT '9999-12-31'::date,
           end_dtm timestamp(6) NOT NULL,
           source_system_id varchar(50) NOT NULL,
           restricted_row_ind boolean NOT NULL DEFAULT false,
           row_sid int,
           update_audit_id int NOT NULL DEFAULT 0,
           source_delete_ind boolean NOT NULL
       );
