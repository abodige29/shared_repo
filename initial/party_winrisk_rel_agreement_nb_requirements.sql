/*
    FileName: party_winrisk_rel_agreement_nb_requirements.sql
    Author: MM69917	
    Subject Area : Party
    Source: TPP
    Create Date:2021-11-22
       
    ===============================================================================================================
    Version/JIRA Story#     Created By     Last_Modified_Date   Description
    ---------------------------------------------------------------------------------------------------------------
    TERSUN-3702             Party-Tier2    07/06                      
    ------------------------------------------------------------------------------------------------------------------
*/

SELECT ANALYZE_STATISTICS('PROD_NBR_VW_TERSUN.NB_REQ_VW');
SELECT ANALYZE_STATISTICS('PROD_NBR_VW_TERSUN.NB_APPL_VW');

CREATE LOCAL TEMPORARY TABLE VT_NB_APPL ON COMMIT PRESERVE ROWS AS 
/* +DIRECT */
SELECT appl_id, hldg_key, hldg_key_pfx, hldg_key_sfx, carr_admin_sys_cd, cas_id 
FROM (
SELECT appl_id, 
clean_string(hldg_key) as hldg_key, 
clean_string(hldg_key_pfx) as hldg_key_pfx, 
clean_string(hldg_key_sfx) as hldg_key_sfx, 
clean_string(carr_admin_sys_cd) as carr_admin_sys_cd,
cas_id as cas_id,
row_number() over(partition by appl_id order by appl_data_fr_dt desc) as rnk
FROM prod_nbr_vw_tersun.NB_APPL_VW WHERE SRC_SYS_ID='36'
)dedup
WHERE RNK=1
ORDER BY appl_id;

CREATE LOCAL TEMPORARY TABLE VT_SRC ON COMMIT PRESERVE ROWS AS 
/* +DIRECT */
SELECT 
APPL_ID AS APPL_ID,
CASE WHEN CLEAN_STRING(src.REQ_CD) = 'Fnlsutvl' THEN 'Fnlsutvld'
     WHEN CLEAN_STRING(src.REQ_CD) = 'Dighlthp' THEN 'Dighlthpro'
     WHEN CLEAN_STRING(src.REQ_CD) = 'Intsutvl' THEN 'Intsutvld'
     WHEN CLEAN_STRING(src.REQ_CD) = 'Sulreplr' THEN 'Sulreplrew'
     WHEN CLEAN_STRING(src.REQ_CD) IS NULL THEN 'Unk'
     ELSE CLEAN_STRING(src.REQ_CD) END AS REQ_CD, 
CLEAN_STRING(src.CAS_REQ_ID)      AS CAS_REQ_ID,
CLEAN_STRING(src.REQ_COLL_METH)   AS REQ_COLL_METH,
CLEAN_STRING(src.REQ_CTG)         AS REQ_CTG,
CLEAN_STRING(VOLTAGEACCESS(src.REQ_CMNT,'freeform'))        AS REQ_CMNT,
CLEAN_STRING(src.REQ_STUS_CD)     AS REQ_STUS_CD,
CLEAN_STRING(src.SRC_REQ_STUS_CD) AS SRC_REQ_STUS_CD,
src.REQ_ORDR_DT::DATE             AS REQ_ORDR_DT, 
CLEAN_STRING(src.SRC_WRKBNCH_COLL_ID)   AS SRC_WRKBNCH_COLL_ID,
CLEAN_STRING(src.WRKBNCH_COLL_METH)     AS WRKBNCH_COLL_METH,
CLEAN_STRING(src.PHY_NM)          AS PHY_NM,  -- PII 
CLEAN_STRING(src.SRC_REQ_ID)      AS SRC_REQ_ID, 
src.REQ_STUS_DT::DATE             AS REQ_STUS_DT,
CLEAN_STRING(src.SRC_REQ_CTG)     AS SRC_REQ_CTG,
src.REQ_FR_DT                     AS REQ_FR_DT,
src.REQ_TO_DT                     AS REQ_TO_DT,
CLEAN_STRING(src.SRC_DEL_IND)     AS SRC_DEL_IND  
FROM prod_nbr_vw_tersun.NB_REQ_VW src
WHERE src_sys_id ='36'; --13mins

CREATE LOCAL TEMPORARY TABLE VT_FINAL_SRC ON COMMIT PRESERVE ROWS AS 
/* +DIRECT */
SELECT 
LPAD(appl.HLDG_KEY,20,'0')  AS HLDG_KEY,
appl.HLDG_KEY_PFX           AS HLDG_KEY_PFX,
appl.HLDG_KEY_SFX           AS HLDG_KEY_SFX,
COALESCE(appl.CARR_ADMIN_SYS_CD,'Unk')   AS CARR_ADMIN_SYS_CD,
appl.CAS_ID::VARCHAR(50)    AS CAS_ID,
src.REQ_CD             AS REQ_CD,
src.CAS_REQ_ID         AS CAS_REQ_ID,
src.REQ_COLL_METH      AS REQ_COLL_METH,
src.REQ_CTG            AS REQ_CTG,
SUBSTRING(src.REQ_CMNT,1,500)           AS REQ_CMNT,
src.REQ_STUS_CD        AS REQ_STUS_CD,
src.SRC_REQ_STUS_CD    AS SRC_REQ_STUS_CD,
src.REQ_ORDR_DT        AS REQ_ORDR_DT, 
src.SRC_WRKBNCH_COLL_ID   AS SRC_WRKBNCH_COLL_ID,
src.WRKBNCH_COLL_METH     AS WRKBNCH_COLL_METH,
src.PHY_NM                AS PHY_NM,  -- PII 
src.SRC_REQ_ID            AS SRC_REQ_ID, 
src.REQ_STUS_DT           AS REQ_STUS_DT,
src.SRC_REQ_CTG           AS SRC_REQ_CTG,
src.REQ_FR_DT             AS REQ_FR_DT,
src.REQ_TO_DT             AS REQ_TO_DT,
src.SRC_DEL_IND           AS SRC_DEL_IND 
FROM VT_SRC src
LEFT JOIN VT_NB_APPL appl 
ON src.APPL_ID = appl.APPL_ID;

COMMIT;

CREATE LOCAL TEMPORARY TABLE VT_PRE_WORK ON COMMIT PRESERVE ROWS AS 
SELECT * FROM EDW_vw.REL_AGREEMENT_NB_REQUIREMENT_vw 
WHERE 1<>1;

INSERT /* +DIRECT */  INTO VT_PRE_WORK
(
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    REF_REQUIREMENT_TYPE_NATURAL_KEY_HASH_UUID,
    REQUIREMENT_CASE_ID,
    COLLECTION_METHORD_CDE,
    REQUIREMENT_CATEGORY_CDE,
    REQUIREMENT_COMMENT_TXT,
    REQUIREMENT_STATUS_CDE,
    SOURCE_REQUIREMENT_STATUS_CDE,
    REQUIREMENT_ORDER_DT,
    WORKBENCH_COLLECTION_ID,
    WORKBENCH_COLLECTION_METHORD_CDE,
    PHYSICIAN_FULL_NM,
    SOURCE_REQUIREMENT_CDE,
    REQUIREMENT_STATUS_DT,
    SOURCE_REQUIREMENT_CATEGORY, 
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    AUDIT_ID,
    LOGICAL_DELETE_IND,
    CHECK_SUM,
    CURRENT_ROW_IND,
    END_DT,
    END_DTM,
    SOURCE_SYSTEM_ID,
    RESTRICTED_ROW_IND,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND
)
SELECT 
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    REF_REQUIREMENT_TYPE_NATURAL_KEY_HASH_UUID,
    REQUIREMENT_CASE_ID,
    COLLECTION_METHORD_CDE,
    REQUIREMENT_CATEGORY_CDE,
    REQUIREMENT_COMMENT_TXT,
    REQUIREMENT_STATUS_CDE,
    SOURCE_REQUIREMENT_STATUS_CDE,
    REQUIREMENT_ORDER_DT,
    WORKBENCH_COLLECTION_ID,
    WORKBENCH_COLLECTION_METHORD_CDE,
    PHYSICIAN_FULL_NM,
    SOURCE_REQUIREMENT_CDE,
    REQUIREMENT_STATUS_DT,
    SOURCE_REQUIREMENT_CATEGORY, 
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    AUDIT_ID,
    LOGICAL_DELETE_IND,
    CHECK_SUM,
    CURRENT_ROW_IND,
    END_DT,
    END_DTM,
    SOURCE_SYSTEM_ID,
    RESTRICTED_ROW_IND,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND
FROM 
(
SELECT 
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    REF_REQUIREMENT_TYPE_NATURAL_KEY_HASH_UUID,
    REQUIREMENT_CASE_ID,
    COLLECTION_METHORD_CDE,
    REQUIREMENT_CATEGORY_CDE,
    REQUIREMENT_COMMENT_TXT,
    REQUIREMENT_STATUS_CDE,
    SOURCE_REQUIREMENT_STATUS_CDE,
    REQUIREMENT_ORDER_DT,
    WORKBENCH_COLLECTION_ID,
    WORKBENCH_COLLECTION_METHORD_CDE,
    PHYSICIAN_FULL_NM,
    SOURCE_REQUIREMENT_CDE,
    REQUIREMENT_STATUS_DT,
    SOURCE_REQUIREMENT_CATEGORY, 
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    AUDIT_ID,
    LOGICAL_DELETE_IND,
    UUID_GEN(SOURCE_DELETE_IND, COLLECTION_METHORD_CDE, REQUIREMENT_CATEGORY_CDE,REQUIREMENT_COMMENT_TXT,REQUIREMENT_STATUS_CDE, SOURCE_REQUIREMENT_STATUS_CDE, 
             REQUIREMENT_ORDER_DT, WORKBENCH_COLLECTION_ID, WORKBENCH_COLLECTION_METHORD_CDE, PHYSICIAN_FULL_NM, SOURCE_REQUIREMENT_CDE, REQUIREMENT_STATUS_DT,
             SOURCE_REQUIREMENT_CATEGORY )::UUID AS CHECK_SUM,
    CURRENT_ROW_IND,
    END_DT,
    END_DTM,
    SOURCE_SYSTEM_ID,
    RESTRICTED_ROW_IND,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND,
    ROW_NUMBER() OVER (PARTITION BY DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, REF_REQUIREMENT_TYPE_NATURAL_KEY_HASH_UUID, REQUIREMENT_CASE_ID, COLLECTION_METHORD_CDE, 
                                    REQUIREMENT_CATEGORY_CDE, REQUIREMENT_COMMENT_TXT,REQUIREMENT_STATUS_CDE, SOURCE_REQUIREMENT_STATUS_CDE, REQUIREMENT_ORDER_DT,
                                    WORKBENCH_COLLECTION_ID, WORKBENCH_COLLECTION_METHORD_CDE, PHYSICIAN_FULL_NM, SOURCE_REQUIREMENT_CDE, REQUIREMENT_STATUS_DT,
                                    SOURCE_REQUIREMENT_CATEGORY
                       ORDER BY BEGIN_DT DESC, END_DT DESC) AS RNK 
FROM
(
SELECT 
    CASE WHEN (CARR_ADMIN_SYS_CD, HLDG_KEY_PFX, HLDG_KEY, HLDG_KEY_SFX) IS NULL 
         THEN UUID_GEN(NULL)::UUID 
         ELSE UUID_GEN(CARR_ADMIN_SYS_CD, 'Appl', HLDG_KEY_PFX, HLDG_KEY, HLDG_KEY_SFX, '0')::UUID 
         END AS DIM_AGREEMENT_NATURAL_KEY_HASH_UUID, 
    UUID_GEN(REQ_CD)::UUID     AS REF_REQUIREMENT_TYPE_NATURAL_KEY_HASH_UUID,
    CAS_REQ_ID                 AS REQUIREMENT_CASE_ID,
    REQ_COLL_METH              AS COLLECTION_METHORD_CDE,
    REQ_CTG                    AS REQUIREMENT_CATEGORY_CDE,
    VOLTAGEPROTECT(REQ_CMNT,'freeform')  AS REQUIREMENT_COMMENT_TXT,
    REQ_STUS_CD                AS REQUIREMENT_STATUS_CDE,
    SRC_REQ_STUS_CD            AS SOURCE_REQUIREMENT_STATUS_CDE,
    REQ_ORDR_DT                AS REQUIREMENT_ORDER_DT,
    SRC_WRKBNCH_COLL_ID        AS WORKBENCH_COLLECTION_ID,
    WRKBNCH_COLL_METH          AS WORKBENCH_COLLECTION_METHORD_CDE,
    VOLTAGEPROTECT(PHY_NM,'name')        AS PHYSICIAN_FULL_NM,
    SRC_REQ_ID                 AS SOURCE_REQUIREMENT_CDE,
    REQ_STUS_DT                AS REQUIREMENT_STATUS_DT,
    SRC_REQ_CTG                AS SOURCE_REQUIREMENT_CATEGORY,
    REQ_FR_DT::DATE            AS BEGIN_DT,
    REQ_FR_DT::TIMESTAMP(6)    AS BEGIN_DTM,
    CURRENT_TIMESTAMP(6)       AS ROW_PROCESS_DTM,
    :audit_id                  AS AUDIT_ID,
    FALSE::BOOLEAN             AS LOGICAL_DELETE_IND,
    CASE WHEN REQ_TO_DT::DATE='12-31-9999' THEN TRUE ELSE FALSE END AS CURRENT_ROW_IND,
    REQ_TO_DT::DATE            AS END_DT,
    REQ_TO_DT::TIMESTAMP(6)    AS END_DTM,
    '324'                      AS SOURCE_SYSTEM_ID,
    FALSE::BOOLEAN             AS RESTRICTED_ROW_IND,
    :audit_id                  AS UPDATE_AUDIT_ID,
    CASE WHEN SRC_DEL_IND='Y' THEN TRUE ELSE FALSE END AS SOURCE_DELETE_IND
FROM VT_FINAL_SRC
)CLEANSED_DATASET
)DEDUP 
WHERE RNK=1;

commit;

TRUNCATE TABLE EDW_WORK.PARTY_WINRISK_REL_AGREEMENT_NB_REQUIREMENT;

INSERT INTO EDW_WORK.PARTY_WINRISK_REL_AGREEMENT_NB_REQUIREMENT
(
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    REF_REQUIREMENT_TYPE_NATURAL_KEY_HASH_UUID,
    REQUIREMENT_CASE_ID,
    COLLECTION_METHORD_CDE,
    REQUIREMENT_CATEGORY_CDE,
    REQUIREMENT_COMMENT_TXT,
    REQUIREMENT_STATUS_CDE,
    SOURCE_REQUIREMENT_STATUS_CDE,
    REQUIREMENT_ORDER_DT,
    WORKBENCH_COLLECTION_ID,
    WORKBENCH_COLLECTION_METHORD_CDE,
    PHYSICIAN_FULL_NM,
    SOURCE_REQUIREMENT_CDE,
    REQUIREMENT_STATUS_DT,
    SOURCE_REQUIREMENT_CATEGORY, 
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    AUDIT_ID,
    LOGICAL_DELETE_IND,
    CHECK_SUM,
    CURRENT_ROW_IND,
    END_DT,
    END_DTM,
    SOURCE_SYSTEM_ID,
    RESTRICTED_ROW_IND,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND
)
SELECT 
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    REF_REQUIREMENT_TYPE_NATURAL_KEY_HASH_UUID,
    REQUIREMENT_CASE_ID,
    COLLECTION_METHORD_CDE,
    REQUIREMENT_CATEGORY_CDE,
    REQUIREMENT_COMMENT_TXT,
    REQUIREMENT_STATUS_CDE,
    SOURCE_REQUIREMENT_STATUS_CDE,
    REQUIREMENT_ORDER_DT,
    WORKBENCH_COLLECTION_ID,
    WORKBENCH_COLLECTION_METHORD_CDE,
    PHYSICIAN_FULL_NM,
    SOURCE_REQUIREMENT_CDE,
    REQUIREMENT_STATUS_DT,
    SOURCE_REQUIREMENT_CATEGORY, 
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    AUDIT_ID,
    LOGICAL_DELETE_IND,
    CHECK_SUM,
    lead(False::boolean,1,True::boolean) over( partition by dim_agreement_natural_key_hash_uuid,ref_requirement_type_natural_key_hash_uuid,
    requirement_case_id order by begin_dtm)::boolean current_row_ind ,
    lead(begin_dt - interval '1' day,1,'12-31-9999'::date) over( partition by dim_agreement_natural_key_hash_uuid,ref_requirement_type_natural_key_hash_uuid,
    requirement_case_id order by begin_dtm)::date end_dt ,
    lead(begin_dtm - interval '1' second,1,'12-31-9999'::timestamp(6)) over( partition by dim_agreement_natural_key_hash_uuid,ref_requirement_type_natural_key_hash_uuid,
    requirement_case_id order by begin_dtm)::timestamp(6) end_dtm ,
    SOURCE_SYSTEM_ID,
    RESTRICTED_ROW_IND,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND
FROM VT_PRE_WORK;

commit;

DELETE FROM EDW.REL_AGREEMENT_NB_REQUIREMENT WHERE SOURCE_SYSTEM_ID IN ('324','36');

commit;

INSERT INTO EDW.REL_AGREEMENT_NB_REQUIREMENT 
(
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    REF_REQUIREMENT_TYPE_NATURAL_KEY_HASH_UUID,
    REQUIREMENT_CASE_ID,
    COLLECTION_METHORD_CDE,
    REQUIREMENT_CATEGORY_CDE,
    REQUIREMENT_COMMENT_TXT,
    REQUIREMENT_STATUS_CDE,
    SOURCE_REQUIREMENT_STATUS_CDE,
    REQUIREMENT_ORDER_DT,
    WORKBENCH_COLLECTION_ID,
    WORKBENCH_COLLECTION_METHORD_CDE,
    PHYSICIAN_FULL_NM,
    SOURCE_REQUIREMENT_CDE,
    REQUIREMENT_STATUS_DT,
    SOURCE_REQUIREMENT_CATEGORY, 
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    AUDIT_ID,
    LOGICAL_DELETE_IND,
    CHECK_SUM,
    CURRENT_ROW_IND,
    END_DT,
    END_DTM,
    SOURCE_SYSTEM_ID,
    RESTRICTED_ROW_IND,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND
)
SELECT 
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,
    REF_REQUIREMENT_TYPE_NATURAL_KEY_HASH_UUID,
    REQUIREMENT_CASE_ID,
    COLLECTION_METHORD_CDE,
    REQUIREMENT_CATEGORY_CDE,
    REQUIREMENT_COMMENT_TXT,
    REQUIREMENT_STATUS_CDE,
    SOURCE_REQUIREMENT_STATUS_CDE,
    REQUIREMENT_ORDER_DT,
    WORKBENCH_COLLECTION_ID,
    WORKBENCH_COLLECTION_METHORD_CDE,
    PHYSICIAN_FULL_NM,
    SOURCE_REQUIREMENT_CDE,
    REQUIREMENT_STATUS_DT,
    SOURCE_REQUIREMENT_CATEGORY, 
    BEGIN_DT,
    BEGIN_DTM,
    ROW_PROCESS_DTM,
    AUDIT_ID,
    LOGICAL_DELETE_IND,
    CHECK_SUM,
    CURRENT_ROW_IND,
    END_DT,
    END_DTM,
    SOURCE_SYSTEM_ID,
    RESTRICTED_ROW_IND,
    UPDATE_AUDIT_ID,
    SOURCE_DELETE_IND
FROM EDW_WORK.PARTY_WINRISK_REL_AGREEMENT_NB_REQUIREMENT;

COMMIT;