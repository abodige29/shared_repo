/*
    FileName: ecdm_rel_contact_preference.sql
    Author: MM69917
    Subject Area : Party
    Source: REP_ID
    Create Date:2021-07-09
        
    ===============================================================================================================
    Version/JIRA Story#     Created By     Last_Modified_Date   Description
    -----------------------------------------------------------------------------------------------------------------
    TERSUN-3245                 Party-Tier2    05/20                Phone_nr changes      
    ------------------------------------------------------------------------------------------------------------------
*/

TRUNCATE TABLE EDW_WORK.ECDM_REL_CONTACT_PREFERENCE;
TRUNCATE TABLE EDW_STAGING.ECDM_REL_CONTACT_PREFERENCE_PRE_WORK;

SELECT ANALYZE_STATISTICS('EDW_STAGING.ECDM_C_B_PARTY_PREFERENCE_OUT');

SELECT ANALYZE_STATISTICS('EDW_STAGING.ECDM_C_B_PHONE_OUT_SNAPSHOT');

SELECT ANALYZE_STATISTICS('EDW_STAGING.ECDM_C_B_ADDR_OUT_SNAPSHOT');  

SELECT ANALYZE_STATISTICS('EDW_STAGING.ECDM_C_B_PARTY_PREFERENCE_OUT_SNAPSHOT');


------------ CREATING TEMP TABLE FROM SOURCE STAGING TABLES FOR PRE_WORK INSERTS-------------------

DROP TABLE IF EXISTS TEMP_REL_CONTACT_PREFERENCE_1;

CREATE LOCAL TEMPORARY TABLE TEMP_REL_CONTACT_PREFERENCE_1 ON COMMIT PRESERVE ROWS AS
/*+DIRECT*/
SELECT             
   BTRIM(VOLTAGEACCESS(SRC.MEMBER_ID,'sorparty'))                      AS MEMBER_ID
  ,COALESCE(CLEAN_STRING(SDT_1.ROLE_TP),CLEAN_STRING(SRC.ROLE_TP),CLEAN_STRING('UN') )            AS ROLE_TP
  ,COALESCE(CLEAN_STRING(SDT_2.PREFERENCE_TYPE_CDE)
            ,CLEAN_STRING(SRC.PREF_TP),CLEAN_STRING('UNK') 
		    )                                                                                     AS PREFERENCE_TYPE_CDE
  ,CLEAN_STRING(SRC.CARR_ADMN_SYS_CD)                                                             AS CARR_ADMN_SYS_CD
  ,CLEAN_STRING(SRC.HLDG_KEY_PFX)                                                                 AS HLDG_KEY_PFX
  ,CASE WHEN CLEAN_STRING(SRC.CARR_ADMN_SYS_CD)= 'Sg' 
               and COALESCE(CLEAN_STRING(SRC.HLDG_KEY_PFX),'NA') NOT IN  ('Mca', 'Psa') 
                  THEN UUID_GEN(CLEAN_STRING(VOLTAGEACCESS(SRC.AGRMNT_NUM,'ssn_char'))) 
         ELSE CLEAN_STRING(VOLTAGEACCESS(SRC.AGRMNT_NUM,'ssn_char'))    END  AS AGRMNT_NUM
  ,CLEAN_STRING(SRC.HLDG_KEY_SFX)                                                                 AS HLDG_KEY_SFX
  ,CASE WHEN CLEAN_STRING(SRC.HLDG_KEY_SFX) in ('Mca') 
          THEN CLEAN_STRING('MCA')
		 ELSE CLEAN_STRING('IPA') END                                                             AS AGREEMENT_TYPE_CDE
  --,CLEAN_STRING('IPA') AS AGREEMENT_TYPE_CDE
  ,COALESCE(CLEAN_STRING(SDT_3.PREFERENCE_SUBTYPE_CDE)
           ,CLEAN_STRING(SRC.PREF_SUB_TP)
		   ,CLEAN_STRING('UNK') 
		    )                                                                                     AS PREFERENCE_SUBTYPE_CDE
  ,CLEAN_STRING(SRC.PREF_SUB_SUB_TP)                 											  AS PREFERENCE_SUB_SUBTYPE_CDE
  ,COALESCE(CLEAN_STRING(SDT_4.CHOICE_PREFERRED_CDE)
           ,CLEAN_STRING(SRC.CHOICE_CD)
		   ,CLEAN_STRING('UNK') 
		    ) 																					  AS CHOICE_PREFERRED_CDE
  ,CLEAN_STRING(SRC.CHOICE_DESC)                                                                  AS CHOICE_DESC
  ,SRC.CHOICE_DT::DATE                                                                            AS CHOICE_DT
  ,COALESCE(CLEAN_STRING(SDT_5.CHOICE_CDE),CLEAN_STRING(SRC.CHOICE_IND),CLEAN_STRING('UNK') )     AS CHOICE_CDE
  ,SRC.CHOICE_NUMBER                                                                              AS CHOICE_NR
  ,CLEAN_STRING(SRC.REFERRAL_SRC_CD)                                                              AS CHANGE_SOURCE_CDE
  ,COALESCE(CLEAN_STRING(SDT_6.CHANGE_REASON_CDE)
           ,CLEAN_STRING(SRC.REASON_CD),CLEAN_STRING('UNK') )                                     AS CHANGE_REASON_CDE
  ,CLEAN_STRING(SNPSHT_ADDR.ADDRESS_STREET_1_TXT)                       AS ADDRESS_STREET_1_TXT
  ,CLEAN_STRING(SNPSHT_ADDR.ADDRESS_STREET_2_TXT)                       AS ADDRESS_STREET_2_TXT
  ,CLEAN_STRING(SNPSHT_ADDR.ADDRESS_STREET_3_TXT)                       AS ADDRESS_STREET_3_TXT
  ,CLEAN_STRING(SNPSHT_ADDR.ADDRESS_STREET_4_TXT)                      AS ADDRESS_STREET_4_TXT
  ,CLEAN_STRING(SNPSHT_ADDR.CITY_NM)                                       AS CITY_NM
  ,CLEAN_STRING(SNPSHT_ADDR.STATE_CDE)                                    AS STATE_CDE
  ,CLEAN_STRING(SNPSHT_ADDR.ZIP_CDE)                                    AS ZIP_CDE
  ,CLEAN_STRING(SNPSHT_ADDR.ZIP_6_9_CDE)                                AS ZIP_6_9_CDE
  ,CLEAN_STRING(SNPSHT_ADDR.ZIP_10_13_CDE)                              AS ZIP_10_13_CDE
  ,CLEAN_STRING(SNPSHT_ADDR.COUNTRY_CDE)                                                          AS COUNTRY_CDE                                                    
  ,CLEAN_STRING(VOLTAGEACCESS(SNPSHT_PHONE.TEL_CTRY_CD_NR,'phone_char'))        AS TEL_CTRY_CD_NR
  ,CASE WHEN CONCAT( COALESCE(CLEAN_STRING(VOLTAGEACCESS(SNPSHT_PHONE.AREA_CD_NR,'phone_char')),'')
          ,COALESCE(CLEAN_STRING(VOLTAGEACCESS(SNPSHT_PHONE.PHONE_NUM,'phone_char')),''))='' THEN NULL ELSE 
          CONCAT( COALESCE(CLEAN_STRING(VOLTAGEACCESS(SNPSHT_PHONE.AREA_CD_NR,'phone_char')),'')
          ,COALESCE(CLEAN_STRING(VOLTAGEACCESS(SNPSHT_PHONE.PHONE_NUM,'phone_char')),'')) END AS PHONE_NR --changed here
  ,CLEAN_STRING(VOLTAGEACCESS(SNPSHT_PHONE.PHONE_EXT,'phone_char'))  AS PHONE_EXT
  ,CLEAN_STRING(VOLTAGEACCESS(SRC.ELEC_ADDR,'email'))                     AS ELEC_ADDR
  ,CLEAN_STRING(SRC.ROLE_TP)                                                                      AS SOURCE_PARTY_ROLE
  ,CLEAN_STRING(SRC.PREF_TP)                                                                      AS SOURCE_PREFERENCE_TYPE_CDE
  ,CLEAN_STRING(SRC.PREF_SUB_TP)                                                                  AS SOURCE_PREFERENCE_SUBTYPE_CDE
  ,CLEAN_STRING(SRC.CHOICE_CD)                                                                    AS SOURCE_CHOICE_CDE
  ,CLEAN_STRING(SRC.REASON_CD)                                                                    AS SOURCE_CHANGE_REASON_CDE
  ,COALESCE(CLEAN_STRING(SRC.SUB_ROLE_TP), 'Unk')                   											  AS SUB_ROLE_TP
  ,SRC.EFF_START_DT::DATE                                                                             AS BEGIN_DT
  ,SRC.EFF_START_DT::TIMESTAMP(6)                                                               AS BEGIN_DTM
  ,CURRENT_TIMESTAMP                                                                              AS ROW_PROCESS_DTM
  ,-1                                                                                             AS AUDIT_ID
  ,TRUE                                                                                           AS LOGICAL_DELETE_IND
  --,NULL                                              AS CHECK_SUM
  ,CASE WHEN SRC.EFF_END_DT::DATE='12/31/9999'::DATE THEN TRUE ELSE FALSE END                        AS CURRENT_ROW_IND
  ,SRC.EFF_END_DT::DATE                                                                             AS END_DT
  ,SRC.EFF_END_DT::TIMESTAMP(6)                                                               AS END_DTM

 -- ,TRUE                                              AS CURRENT_ROW_IND
-- ,'12/31/9999'::DATE                                AS END_DT
-- ,'12/31/9999'::TIMESTAMP(6)                        AS END_DTM
  ,'45'                                                                                           AS SOURCE_SYSTEM_ID
  ,FALSE                                                                                          AS RESTRICTED_ROW_IND
  ,-1                                                                                             AS UPDATE_AUDIT_ID
  ,(CASE WHEN SRC.HUB_STATE_IND < 0 THEN TRUE ELSE FALSE END )::BOOLEAN                           AS SOURCE_DELETE_IND
  , CASE WHEN SRC.EFF_END_DT::DATE='12/31/9999'::DATE THEN 'I' ELSE 'D' END                       AS OPERATOR_IND
FROM 
(
	SELECT 
	   MEMBER_ID,ROLE_TP,PREF_TP,CARR_ADMN_SYS_CD,HLDG_KEY_PFX,AGRMNT_NUM, 
	   HLDG_KEY_SFX,PREF_SUB_TP,PREF_SUB_SUB_TP,CHOICE_CD,CHOICE_DESC,CHOICE_DT,CHOICE_IND,
	   CHOICE_NUMBER,REFERRAL_SRC_CD,REASON_CD,ADDR_HASH_KEY,PHONE_KEY_STRING,ELEC_ADDR,EFF_START_DT,EFF_END_DT,HUB_STATE_IND,SUB_ROLE_TP,SRC_LST_MOD_TS,ADD_UPD_DEL_IND                                  
	   FROM
	   EDW_STAGING.ECDM_C_B_PARTY_PREFERENCE_OUT  
)SRC
  
       LEFT JOIN 
       (SELECT DISTINCT SRC_CDE, SRC_FLD_NM, SRC_FLD_VAL, CLEAN_STRING(TRNSLT_FLD_VAL) AS ROLE_TP   FROM EDW_REF.SRC_DATA_TRNSLT 
       WHERE UPPER(SRC_CDE) IN ('CDM','PARTY') AND
       UPPER(CLEAN_STRING(SRC_TBL_NM)) ='AGMT_REL' AND
       UPPER(CLEAN_STRING(SRC_FLD_NM)) = 'TYP_CDE' ) SDT_1
       ON  CLEAN_STRING(SRC.ROLE_TP)=CLEAN_STRING(SDT_1.SRC_FLD_VAL)

       
       LEFT JOIN 
       (SELECT DISTINCT SRC_CDE, SRC_FLD_NM, SRC_FLD_VAL, CLEAN_STRING(TRNSLT_FLD_VAL) AS PREFERENCE_TYPE_CDE   FROM EDW_REF.SRC_DATA_TRNSLT 
       WHERE UPPER(SRC_CDE) IN ('CDM','PARTY') AND
       UPPER(CLEAN_STRING(SRC_TBL_NM)) = 'C_B_PARTY_PREFERENCE' AND
       UPPER(CLEAN_STRING(SRC_FLD_NM)) = 'PREFERENCE_TP' )SDT_2
       ON CLEAN_STRING(SRC.PREF_TP)=CLEAN_STRING(SDT_2.SRC_FLD_VAL)

       LEFT JOIN 
       (SELECT DISTINCT SRC_CDE, SRC_FLD_NM, SRC_FLD_VAL, CLEAN_STRING(TRNSLT_FLD_VAL) AS PREFERENCE_SUBTYPE_CDE   FROM EDW_REF.SRC_DATA_TRNSLT 
       WHERE UPPER(SRC_CDE) IN ('CDM','PARTY') AND
       UPPER(CLEAN_STRING(SRC_TBL_NM)) = 'C_B_PARTY_PREFERENCE' AND
       UPPER(CLEAN_STRING(SRC_FLD_NM)) = 'PREFERENCE_SUB_TP' ) SDT_3
       ON  CLEAN_STRING(SRC.PREF_SUB_TP)=CLEAN_STRING(SDT_3.SRC_FLD_VAL)


       LEFT JOIN 
       (SELECT DISTINCT SRC_CDE, SRC_FLD_NM, SRC_FLD_VAL, CLEAN_STRING(TRNSLT_FLD_VAL) AS CHOICE_PREFERRED_CDE    FROM EDW_REF.SRC_DATA_TRNSLT 
       WHERE UPPER(SRC_CDE) IN ('CDM', 'PARTY') AND
       UPPER(CLEAN_STRING(SRC_TBL_NM)) = 'C_B_PARTY_PREFERENCE' AND
       UPPER(CLEAN_STRING(SRC_FLD_NM)) ='CHOICE_CD'  )SDT_4
       ON  CLEAN_STRING(SRC.CHOICE_CD)=CLEAN_STRING(SDT_4.SRC_FLD_VAL)
              
        LEFT JOIN 
        (SELECT DISTINCT SRC_CDE, SRC_FLD_NM, SRC_FLD_VAL, CLEAN_STRING(TRNSLT_FLD_VAL) AS CHOICE_CDE   FROM EDW_REF.SRC_DATA_TRNSLT 
        WHERE UPPER(SRC_CDE) IN ('CDM', 'PARTY') AND
        UPPER(CLEAN_STRING(SRC_TBL_NM)) = 'C_B_PARTY_PREFERENCE' AND
        UPPER(CLEAN_STRING(SRC_FLD_NM)) = 'CHOICE_IND'  ) SDT_5
        ON CLEAN_STRING(SRC.CHOICE_IND)=CLEAN_STRING(SDT_5.SRC_FLD_VAL)


        LEFT JOIN 
        (SELECT DISTINCT SRC_CDE, SRC_FLD_NM, SRC_FLD_VAL, CLEAN_STRING(TRNSLT_FLD_VAL) AS CHANGE_REASON_CDE   FROM EDW_REF.SRC_DATA_TRNSLT 
        WHERE UPPER(SRC_CDE) IN ('CDM', 'PARTY') AND
        UPPER(CLEAN_STRING(SRC_TBL_NM)) = 'C_B_PARTY_PREFERENCE' AND
        UPPER(CLEAN_STRING(SRC_FLD_NM)) = 'REASON_CD' ) SDT_6
        ON CLEAN_STRING(SRC.REASON_CD)=CLEAN_STRING(SDT_6.SRC_FLD_VAL)
              
              LEFT JOIN
        (
               SELECT DISTINCT SNP.PHONE_KEY_STRING,SNP.TEL_CTRY_CD_NR,SNP.AREA_CD_NR,SNP.PHONE_NUM,SNP.PHONE_EXT,SNP.ADD_UPD_DEL_IND
               FROM EDW_STAGING.ECDM_C_B_PHONE_OUT_SNAPSHOT SNP
               JOIN EDW_STAGING.ECDM_C_B_PARTY_PREFERENCE_OUT PPO
               ON  SNP.PHONE_KEY_STRING=PPO.PHONE_KEY_STRING
               Where SNP.ADD_UPD_DEL_IND !='D'
        )SNPSHT_PHONE
        ON 
        SNPSHT_PHONE.PHONE_KEY_STRING=SRC.PHONE_KEY_STRING
        --AND SNPSHT_PHONE.ADD_UPD_DEL_IND !='D'

       LEFT JOIN
       (
              SELECT DISTINCT  SNP.ADDR_HASH_KEY
                    ,VOLTAGEACCESS(SNP.ADDR_LINE_1,'address') AS ADDRESS_STREET_1_TXT
                    ,VOLTAGEACCESS(SNP.ADDR_LINE_2,'address') AS ADDRESS_STREET_2_TXT 
                    ,VOLTAGEACCESS(SNP.ADDR_LINE_3,'address') AS ADDRESS_STREET_3_TXT
                    ,VOLTAGEACCESS(SNP.ADDR_LINE_4,'address') AS ADDRESS_STREET_4_TXT
                    ,VOLTAGEACCESS(SNP.CITY,'city') AS CITY_NM
                    ,VOLTAGEACCESS(SNP.STATE,'state') AS STATE_CDE
                    ,VOLTAGEACCESS(SNP.POSTAL_CD,'zipcode') AS ZIP_CDE
                    ,VOLTAGEACCESS(SNP.POSTAL_EXT_CD,'zipcode') AS ZIP_6_9_CDE
                    ,VOLTAGEACCESS(SNP.ZIP_10_13_NR,'zipcode') AS ZIP_10_13_CDE
                   -- ,COUNTRY_CD AS COUNTRY_CDE
                          ,COALESCE(CLEAN_STRING(SDT.TRNSLT_FLD_VAL),CLEAN_STRING(SNP.COUNTRY_CD),CLEAN_STRING('UNK')) AS COUNTRY_CDE
                           ,SNP.ADD_UPD_DEL_IND
                    FROM      EDW_STAGING.ECDM_C_B_ADDR_OUT_SNAPSHOT  SNP
                    JOIN EDW_STAGING.ECDM_C_B_PARTY_PREFERENCE_OUT PPO ON SNP.ADDR_HASH_KEY=PPO.ADDR_HASH_KEY
	                LEFT JOIN
	                      ( 
	                             SELECT DISTINCT SRC_CDE, SRC_FLD_NM,UPPER(SRC_FLD_VAL) AS SRC_FLD_VAL , TRNSLT_FLD_VAL
	                             FROM EDW_REF.SRC_DATA_TRNSLT 
	                             WHERE UPPER(BTRIM(SRC_CDE ))= 'PARTY' 
	                             AND  UPPER(BTRIM(SRC_FLD_NM ))= 'CNTRY_NM'   
	                             AND  UPPER(BTRIM(TRNSLT_FLD_NM ))= 'COUNTRY NAME'
	                      ) SDT 
	                             ON CLEAN_STRING(SNP.COUNTRY_CD) =CLEAN_STRING(SDT.SRC_FLD_VAL)       
	                  Where SNP.ADD_UPD_DEL_IND !='D'                      
         ) SNPSHT_ADDR ON SNPSHT_ADDR.ADDR_HASH_KEY = SRC.ADDR_HASH_KEY ;

SELECT ANALYZE_STATISTICS('TEMP_REL_CONTACT_PREFERENCE_1');

------INSERT SCRIPT FOR PRE WORK TABLE - EXCLUDE DELETES -----------

  

INSERT /*+DIRECT*/ INTO EDW_STAGING.ECDM_REL_CONTACT_PREFERENCE_PRE_WORK
(   --  =! D
    DIM_PARTY_NATURAL_KEY_HASH_UUID  
   ,REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID  
   ,PREFERENCE_TYPE_CDE  
   ,PREFERENCE_SUBTYPE_CDE  
   ,PREFERENCE_SUB_SUBTYPE_CDE  
   ,DIM_AGREEMENT_NATURAL_KEY_HASH_UUID  
   ,CHOICE_PREFERRED_CDE  
   ,CHOICE_DESC  
   ,CHOICE_DT  
   ,CHOICE_CDE  
   ,CHOICE_NR  
   ,CHANGE_SOURCE_CDE  
   ,CHANGE_REASON_CDE   
   ,DIM_ADDRESS_NATURAL_KEY_HASH_UUID  
   ,DIM_PHONE_NATURAL_KEY_HASH_UUID  
   ,DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID  
   ,SOURCE_PARTY_ROLE  
   ,SOURCE_PREFERENCE_TYPE_CDE  
   ,SOURCE_PREFERENCE_SUBTYPE_CDE  
   ,SOURCE_CHOICE_CDE
   ,SOURCE_CHANGE_REASON_CDE  
   ,REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID
   ,BEGIN_DT  
   ,BEGIN_DTM  
   ,ROW_PROCESS_DTM  
   ,AUDIT_ID  
   ,LOGICAL_DELETE_IND  
   ,CHECK_SUM  
   ,CURRENT_ROW_IND  
   ,END_DT  
   ,END_DTM  
   ,SOURCE_SYSTEM_ID  
   ,RESTRICTED_ROW_IND  
   --,ROW_SID  
   ,UPDATE_AUDIT_ID  
   ,SOURCE_DELETE_IND
    ,OPERATOR_IND
	)

SELECT 
   DIM_PARTY_NATURAL_KEY_HASH_UUID,
   REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
   PREFERENCE_TYPE_CDE,
   PREFERENCE_SUBTYPE_CDE,
   PREFERENCE_SUB_SUBTYPE_CDE ,
   DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,   
   CHOICE_PREFERRED_CDE , 
   CHOICE_DESC , 
   CHOICE_DT,
   CHOICE_CDE,
   CHOICE_NR , 
   CHANGE_SOURCE_CDE,
   CHANGE_REASON_CDE ,
   DIM_ADDRESS_NATURAL_KEY_HASH_UUID,
   DIM_PHONE_NATURAL_KEY_HASH_UUID,
   DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID,
   SOURCE_PARTY_ROLE ,
   SOURCE_PREFERENCE_TYPE_CDE,
   SOURCE_PREFERENCE_SUBTYPE_CDE,
   SOURCE_CHOICE_CDE,
   SOURCE_CHANGE_REASON_CDE,
   REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
   BEGIN_DT,
   BEGIN_DTM,
   ROW_PROCESS_DTM,
   AUDIT_ID,
   LOGICAL_DELETE_IND,
   CHECK_SUM,
   CURRENT_ROW_IND,
   END_DT,
   END_DTM,
   SOURCE_SYSTEM_ID, 
   RESTRICTED_ROW_IND,
   --ROW_SID,
   UPDATE_AUDIT_ID,
   SOURCE_DELETE_IND,
   OPERATOR_IND
   
FROM
	(
	SELECT 
	   DIM_PARTY_NATURAL_KEY_HASH_UUID,
	   REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
	   PREFERENCE_TYPE_CDE,
	   PREFERENCE_SUBTYPE_CDE,
	   PREFERENCE_SUB_SUBTYPE_CDE ,
	   DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,   
	   CHOICE_PREFERRED_CDE , 
	   CHOICE_DESC , 
	   CHOICE_DT,
	   CHOICE_CDE,
	   CHOICE_NR , 
	   CHANGE_SOURCE_CDE,
	   CHANGE_REASON_CDE ,
	   DIM_ADDRESS_NATURAL_KEY_HASH_UUID,
	   DIM_PHONE_NATURAL_KEY_HASH_UUID,
	   DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID,
	   SOURCE_PARTY_ROLE ,
	   SOURCE_PREFERENCE_TYPE_CDE,
	   SOURCE_PREFERENCE_SUBTYPE_CDE,
	   SOURCE_CHOICE_CDE,
	   SOURCE_CHANGE_REASON_CDE,
	   REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
	   BEGIN_DT,
	   BEGIN_DTM,
	   ROW_PROCESS_DTM,
	   AUDIT_ID,
	   LOGICAL_DELETE_IND,
	   CHECK_SUM,
	   CURRENT_ROW_IND,
	   END_DT,
	   END_DTM,
	   SOURCE_SYSTEM_ID, 
	   RESTRICTED_ROW_IND,
	   --ROW_SID,
	   UPDATE_AUDIT_ID,
	   SOURCE_DELETE_IND,
	   OPERATOR_IND
	   ,ROW_NUMBER ()OVER(PARTITION BY DIM_PARTY_NATURAL_KEY_HASH_UUID,
		REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
		PREFERENCE_TYPE_CDE,
		PREFERENCE_SUBTYPE_CDE,
		PREFERENCE_SUB_SUBTYPE_CDE ,
		DIM_AGREEMENT_NATURAL_KEY_HASH_UUID ORDER BY BEGIN_DT ASC) AS RNK
	   FROM
			( 
			SELECT 
			   UUID_GEN(MEMBER_ID)::UUID                                     AS  DIM_PARTY_NATURAL_KEY_HASH_UUID
			   ,UUID_GEN(ROLE_TP)::UUID                                      AS  REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID
			   ,PREFERENCE_TYPE_CDE
			   ,PREFERENCE_SUBTYPE_CDE
			   ,PREFERENCE_SUB_SUBTYPE_CDE
			   
			   /* TERSUN-3027: Updated the UUID_GEN logic to populate UUID_GEN(NULL) when dimension record is not found */
			   --,UUID_GEN(CARR_ADMN_SYS_CD,AGREEMENT_TYPE_CDE ,HLDG_KEY_PFX,AGRMNT_NUM,HLDG_KEY_SFX)::UUID         AS  DIM_AGREEMENT_NATURAL_KEY_HASH_UUID

			   ,CASE WHEN (CARR_ADMN_SYS_CD, HLDG_KEY_PFX, AGRMNT_NUM, HLDG_KEY_SFX) IS NULL THEN UUID_GEN(NULL)::UUID
			    ELSE UUID_GEN(CARR_ADMN_SYS_CD,AGREEMENT_TYPE_CDE,HLDG_KEY_PFX,AGRMNT_NUM,HLDG_KEY_SFX)::UUID         
			    END AS  DIM_AGREEMENT_NATURAL_KEY_HASH_UUID

			   ,CHOICE_PREFERRED_CDE
			   ,CHOICE_DESC
			   ,CHOICE_DT
			   ,CHOICE_CDE
			   ,CHOICE_NR
			   ,CHANGE_SOURCE_CDE
			   ,CHANGE_REASON_CDE

			   /* TERSUN-3027: Updated UUID_GEN logic to populate UUID_GEN(NULL) when dimension record is not found */
			   ,CASE WHEN (
					 ADDRESS_STREET_1_TXT
					,ADDRESS_STREET_2_TXT 
					,ADDRESS_STREET_3_TXT
					,ADDRESS_STREET_4_TXT
					,CITY_NM
					,STATE_CDE
					,ZIP_CDE
					,ZIP_6_9_CDE
					,ZIP_10_13_CDE
					,COUNTRY_CDE) IS NULL THEN UUID_GEN(NULL)::UUID
			    ELSE UUID_GEN(
					 ADDRESS_STREET_1_TXT
					,ADDRESS_STREET_2_TXT 
					,ADDRESS_STREET_3_TXT
					,ADDRESS_STREET_4_TXT
					,CITY_NM
					,STATE_CDE
					,ZIP_CDE
					,ZIP_6_9_CDE
					,ZIP_10_13_CDE
					,COUNTRY_CDE)::UUID
			    END AS DIM_ADDRESS_NATURAL_KEY_HASH_UUID

			   /* ,UUID_GEN(
					 ADDRESS_STREET_1_TXT
					,ADDRESS_STREET_2_TXT 
					,ADDRESS_STREET_3_TXT
					,ADDRESS_STREET_4_TXT
					,CITY_NM
					,STATE_CDE
					,ZIP_CDE
					,ZIP_6_9_CDE
					,ZIP_10_13_CDE
					,COUNTRY_CDE)::UUID                                      AS DIM_ADDRESS_NATURAL_KEY_HASH_UUID */
			   

			   /* TERSUN-3027: Updated UUID_GEN logic to populate UUID_GEN(NULL) when dimension record is not found */
			   ,CASE WHEN (TEL_CTRY_CD_NR,PHONE_NR,PHONE_EXT) IS NULL THEN UUID_GEN(NULL)::UUID 
                           ELSE UUID_GEN(TEL_CTRY_CD_NR,PHONE_NR,PHONE_EXT)::UUID END AS DIM_PHONE_NATURAL_KEY_HASH_UUID
			   --,UUID_GEN(TEL_CTRY_CD_NR,PHONE_NR,PHONE_EXT)::UUID            AS DIM_PHONE_NATURAL_KEY_HASH_UUID

			   ,UUID_GEN(ELEC_ADDR)::UUID                                    AS  DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID
			   ,SOURCE_PARTY_ROLE
			   ,SOURCE_PREFERENCE_TYPE_CDE
			   ,SOURCE_PREFERENCE_SUBTYPE_CDE
			   ,SOURCE_CHOICE_CDE
			   ,SOURCE_CHANGE_REASON_CDE
			   ,UUID_GEN(SUB_ROLE_TP)::UUID									 AS	REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID
			   ,BEGIN_DT
			   ,BEGIN_DTM
			   ,ROW_PROCESS_DTM
			   ,:audit_id                                                    AS AUDIT_ID
			   ,FALSE AS LOGICAL_DELETE_IND
			   ---TOTAL 14 NON KEY COLUMNS
			   ,UUID_GEN(SOURCE_DELETE_IND,CHOICE_PREFERRED_CDE
									   ,CHOICE_DESC
									   ,CHOICE_DT
									   ,CHOICE_CDE
									   ,CHOICE_NR
									   ,CHANGE_SOURCE_CDE
									   ,CHANGE_REASON_CDE
									   ,SOURCE_PARTY_ROLE
									   ,SOURCE_PREFERENCE_TYPE_CDE
									   ,SOURCE_PREFERENCE_SUBTYPE_CDE
									   ,SOURCE_CHOICE_CDE
									   ,SOURCE_CHANGE_REASON_CDE
									   ,REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID::VARCHAR)::UUID      AS CHECK_SUM
			  ,TRUE                                                          AS CURRENT_ROW_IND
			  ,'12/31/9999'::DATE                                            AS END_DT
			  ,'12/31/9999'::TIMESTAMP(6)                                    AS END_DTM
			--   ,CURRENT_ROW_IND
			--   ,END_DT
			--   ,END_DTM
			   ,SOURCE_SYSTEM_ID
			   ,RESTRICTED_ROW_IND
			   --,ROW_SID
			   ,:audit_id                                                    AS UPDATE_AUDIT_ID
			   ,SOURCE_DELETE_IND
			   ,OPERATOR_IND 
			   FROM TEMP_REL_CONTACT_PREFERENCE_1 SRC
			WHERE SRC.OPERATOR_IND != 'D'
					  
			)T1
  )FUll_BLOCK                 
  WHERE RNK=1; 

 COMMIT;

SELECT ANALYZE_STATISTICS('EDW_STAGING.ECDM_REL_CONTACT_PREFERENCE_PRE_WORK');

------------ CREATING TEMP TABLE FOR GETTING COMMON RECORDS BETWEEN TEMP1 TABLE (ABOVE) AND SNAPSHOT TABLE -------------------

DROP TABLE IF EXISTS TEMP_REL_CONTACT_PREFERENCE_2;

CREATE LOCAL TEMPORARY TABLE TEMP_REL_CONTACT_PREFERENCE_2 ON COMMIT PRESERVE ROWS AS
/*+DIRECT*/
SELECT 
    BTRIM(VOLTAGEACCESS(SNAP.MEMBER_ID,'sorparty')) AS MEMBER_ID,
    COALESCE(CLEAN_STRING(SNAP.CARR_ADMN_SYS_CD),'')     AS CARR_ADMN_SYS_CD,
    COALESCE(CLEAN_STRING(SNAP.HLDG_KEY_PFX),'')         AS HLDG_KEY_PFX,
    COALESCE(CASE WHEN CLEAN_STRING(SNAP.CARR_ADMN_SYS_CD)= 'Sg' 
     and COALESCE(CLEAN_STRING(SNAP.HLDG_KEY_PFX),'NA') NOT IN  ('Mca', 'Psa') 
        THEN UUID_GEN(CLEAN_STRING(VOLTAGEACCESS(SNAP.AGRMNT_NUM,'ssn_char'))) 
      ELSE CLEAN_STRING(VOLTAGEACCESS(SNAP.AGRMNT_NUM,'ssn_char')) END,'')           AS AGRMNT_NUM,
    COALESCE(CLEAN_STRING(SNAP.HLDG_KEY_SFX),'')         AS HLDG_KEY_SFX,
    COALESCE(CLEAN_STRING(SNAP.ROLE_TP),'')              AS ROLE_TP,
    COALESCE(CLEAN_STRING(SNAP.PREF_TP),'')              AS PREF_TP,
    COALESCE(CLEAN_STRING(SNAP.PREF_SUB_TP),'')          AS PREF_SUB_TP,
    COALESCE(CLEAN_STRING(SNAP.PREF_SUB_SUB_TP),'')      AS PREF_SUB_SUB_TP 
FROM EDW_STAGING.ECDM_C_B_PARTY_PREFERENCE_OUT_SNAPSHOT SNAP  
JOIN TEMP_REL_CONTACT_PREFERENCE_1 TEMP1 ON 
										              TEMP1.MEMBER_ID                         =  BTRIM(VOLTAGEACCESS(SNAP.MEMBER_ID,'sorparty'))
										 AND COALESCE(TEMP1.CARR_ADMN_SYS_CD,'')              =  COALESCE(CLEAN_STRING(SNAP.CARR_ADMN_SYS_CD),'')
										 AND COALESCE(TEMP1.HLDG_KEY_PFX,'')                  =  COALESCE(CLEAN_STRING(SNAP.HLDG_KEY_PFX),'')
										 AND COALESCE(TEMP1.AGRMNT_NUM,'')                    =  CASE WHEN CLEAN_STRING(SNAP.CARR_ADMN_SYS_CD)= 'Sg' 
                                                                               and COALESCE(CLEAN_STRING(SNAP.HLDG_KEY_PFX),'NA') NOT IN  ('Mca', 'Psa') 
                                                                                  THEN UUID_GEN(CLEAN_STRING(VOLTAGEACCESS(SNAP.AGRMNT_NUM,'ssn_char'))) 
                                                                                ELSE CLEAN_STRING(VOLTAGEACCESS(SNAP.AGRMNT_NUM,'ssn_char')) END
										 AND COALESCE(TEMP1.HLDG_KEY_SFX,'')                  =  COALESCE(CLEAN_STRING(SNAP.HLDG_KEY_SFX),'')
										 AND COALESCE(TEMP1.SOURCE_PARTY_ROLE,'')             =  COALESCE(CLEAN_STRING(SNAP.ROLE_TP),'')
										 AND COALESCE(TEMP1.SOURCE_PREFERENCE_TYPE_CDE,'')    =  COALESCE(CLEAN_STRING(SNAP.PREF_TP),'')
										 AND COALESCE(TEMP1.SOURCE_PREFERENCE_SUBTYPE_CDE,'') =  COALESCE(CLEAN_STRING(SNAP.PREF_SUB_TP),'')
										 AND COALESCE(TEMP1.PREFERENCE_SUB_SUBTYPE_CDE,'')    =  COALESCE(CLEAN_STRING(SNAP.PREF_SUB_SUB_TP),'')
WHERE ADD_UPD_DEL_IND != 'D' ;

SELECT ANALYZE_STATISTICS('TEMP_REL_CONTACT_PREFERENCE_2');

------ INSERT SCRIPT FOR PRE WORK TABLE - FOR DELETES -----------


INSERT /*+DIRECT*/ INTO EDW_STAGING.ECDM_REL_CONTACT_PREFERENCE_PRE_WORK( --  = D
   DIM_PARTY_NATURAL_KEY_HASH_UUID  
   ,REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID  
   ,PREFERENCE_TYPE_CDE  
   ,PREFERENCE_SUBTYPE_CDE  
   ,PREFERENCE_SUB_SUBTYPE_CDE  
   ,DIM_AGREEMENT_NATURAL_KEY_HASH_UUID  
   ,CHOICE_PREFERRED_CDE  
   ,CHOICE_DESC  
   ,CHOICE_DT  
   ,CHOICE_CDE  
   ,CHOICE_NR  
   ,CHANGE_SOURCE_CDE  
   ,CHANGE_REASON_CDE  
   ,DIM_ADDRESS_NATURAL_KEY_HASH_UUID  
   ,DIM_PHONE_NATURAL_KEY_HASH_UUID  
   ,DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID  
   ,SOURCE_PARTY_ROLE  
   ,SOURCE_PREFERENCE_TYPE_CDE  
   ,SOURCE_PREFERENCE_SUBTYPE_CDE  
   ,SOURCE_CHOICE_CDE  
   ,SOURCE_CHANGE_REASON_CDE 
   ,REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID  
   ,BEGIN_DT  
   ,BEGIN_DTM  
   ,ROW_PROCESS_DTM  
   ,AUDIT_ID  
   ,LOGICAL_DELETE_IND  
   ,CHECK_SUM  
   ,CURRENT_ROW_IND  
   ,END_DT  
   ,END_DTM  
   ,SOURCE_SYSTEM_ID  
   ,RESTRICTED_ROW_IND  
   --,ROW_SID  
   ,UPDATE_AUDIT_ID  
   ,SOURCE_DELETE_IND
    ,OPERATOR_IND
	)
SELECT 
   DIM_PARTY_NATURAL_KEY_HASH_UUID,
   REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
   PREFERENCE_TYPE_CDE,
   PREFERENCE_SUBTYPE_CDE,
   PREFERENCE_SUB_SUBTYPE_CDE ,
   DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,   
   CHOICE_PREFERRED_CDE , 
   CHOICE_DESC , 
   CHOICE_DT,
   CHOICE_CDE,
   CHOICE_NR , 
   CHANGE_SOURCE_CDE,
   CHANGE_REASON_CDE ,
   DIM_ADDRESS_NATURAL_KEY_HASH_UUID,
   DIM_PHONE_NATURAL_KEY_HASH_UUID,
   DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID,
   SOURCE_PARTY_ROLE ,
   SOURCE_PREFERENCE_TYPE_CDE,
   SOURCE_PREFERENCE_SUBTYPE_CDE,
   SOURCE_CHOICE_CDE,
   SOURCE_CHANGE_REASON_CDE,
   REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
   BEGIN_DT,
   BEGIN_DTM,
   ROW_PROCESS_DTM,
   AUDIT_ID,
   LOGICAL_DELETE_IND,
   CHECK_SUM,
   CURRENT_ROW_IND,
   END_DT,
   END_DTM,
   SOURCE_SYSTEM_ID, 
   RESTRICTED_ROW_IND,
   --ROW_SID,
   UPDATE_AUDIT_ID,
   SOURCE_DELETE_IND,
   OPERATOR_IND
   
FROM
(
SELECT 
   DIM_PARTY_NATURAL_KEY_HASH_UUID,
   REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
   PREFERENCE_TYPE_CDE,
   PREFERENCE_SUBTYPE_CDE,
   PREFERENCE_SUB_SUBTYPE_CDE ,
   DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,   
   CHOICE_PREFERRED_CDE , 
   CHOICE_DESC , 
   CHOICE_DT,
   CHOICE_CDE,
   CHOICE_NR , 
   CHANGE_SOURCE_CDE,
   CHANGE_REASON_CDE ,
   DIM_ADDRESS_NATURAL_KEY_HASH_UUID,
   DIM_PHONE_NATURAL_KEY_HASH_UUID,
   DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID,
   SOURCE_PARTY_ROLE ,
   SOURCE_PREFERENCE_TYPE_CDE,
   SOURCE_PREFERENCE_SUBTYPE_CDE,
   SOURCE_CHOICE_CDE,
   SOURCE_CHANGE_REASON_CDE,
   REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
   BEGIN_DT,
   BEGIN_DTM,
   ROW_PROCESS_DTM,
   AUDIT_ID,
   LOGICAL_DELETE_IND,
   CHECK_SUM,
   CURRENT_ROW_IND,
   END_DT,
   END_DTM,
   SOURCE_SYSTEM_ID, 
   RESTRICTED_ROW_IND,
   --ROW_SID,
   UPDATE_AUDIT_ID,
   SOURCE_DELETE_IND,
   OPERATOR_IND
   ,ROW_NUMBER ()OVER(PARTITION BY DIM_PARTY_NATURAL_KEY_HASH_UUID,
    REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
    PREFERENCE_TYPE_CDE,
    PREFERENCE_SUBTYPE_CDE,
    PREFERENCE_SUB_SUBTYPE_CDE ,
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID ORDER BY BEGIN_DT ASC) AS RNK
 
FROM ( 
SELECT 
   UUID_GEN(TEMP1.MEMBER_ID)::UUID                                 AS  DIM_PARTY_NATURAL_KEY_HASH_UUID
   ,UUID_GEN(TEMP1.ROLE_TP)::UUID                                  AS  REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID
   ,TEMP1.PREFERENCE_TYPE_CDE                                      
   ,TEMP1.PREFERENCE_SUBTYPE_CDE                                   
   ,TEMP1.PREFERENCE_SUB_SUBTYPE_CDE                               

   /* TERSUN-3027: Updated UUID_GEN logic to populate UUID_GEN(NULL) when dimension record is not found */
   --,UUID_GEN( TEMP1.CARR_ADMN_SYS_CD,TEMP1.AGREEMENT_TYPE_CDE ,TEMP1.HLDG_KEY_PFX,TEMP1.AGRMNT_NUM,TEMP1.HLDG_KEY_SFX)::UUID AS  DIM_AGREEMENT_NATURAL_KEY_HASH_UUID

   ,CASE WHEN (TEMP1.CARR_ADMN_SYS_CD, TEMP1.HLDG_KEY_PFX, TEMP1.AGRMNT_NUM, TEMP1.HLDG_KEY_SFX) IS NULL THEN UUID_GEN(NULL)::UUID
   ELSE UUID_GEN( TEMP1.CARR_ADMN_SYS_CD,TEMP1.AGREEMENT_TYPE_CDE ,TEMP1.HLDG_KEY_PFX,TEMP1.AGRMNT_NUM ,TEMP1.HLDG_KEY_SFX)::UUID         
   END AS  DIM_AGREEMENT_NATURAL_KEY_HASH_UUID
   

   ,CHOICE_PREFERRED_CDE
   ,CHOICE_DESC
   ,CHOICE_DT
   ,CHOICE_CDE
   ,CHOICE_NR
   ,CHANGE_SOURCE_CDE
   ,CHANGE_REASON_CDE

   /* TERSUN-3027: Updated UUID_GEN logic to populate UUID_GEN(NULL) when dimension record is not found */
   ,CASE WHEN (
                ADDRESS_STREET_1_TXT
		,ADDRESS_STREET_2_TXT 
		,ADDRESS_STREET_3_TXT
		,ADDRESS_STREET_4_TXT
		,CITY_NM
		,STATE_CDE
		,ZIP_CDE
		,ZIP_6_9_CDE
		,ZIP_10_13_CDE
		,COUNTRY_CDE) IS NULL THEN UUID_GEN(NULL)::UUID
	 ELSE UUID_GEN(
	        ADDRESS_STREET_1_TXT
		,ADDRESS_STREET_2_TXT 
		,ADDRESS_STREET_3_TXT
		,ADDRESS_STREET_4_TXT
		,CITY_NM
		,STATE_CDE
		,ZIP_CDE
		,ZIP_6_9_CDE
		,ZIP_10_13_CDE
		,COUNTRY_CDE)::UUID
	 END AS DIM_ADDRESS_NATURAL_KEY_HASH_UUID

   /*,UUID_GEN(
		 ADDRESS_STREET_1_TXT
		,ADDRESS_STREET_2_TXT 
		,ADDRESS_STREET_3_TXT
		,ADDRESS_STREET_4_TXT
		,CITY_NM
		,STATE_CDE
		,ZIP_CDE
		,ZIP_6_9_CDE
		,ZIP_10_13_CDE
		,COUNTRY_CDE)::UUID                                        AS DIM_ADDRESS_NATURAL_KEY_HASH_UUID */

   /* TERSUN-3027: Updated UUID_GEN logic to populate UUID_GEN(NULL) when dimension record is not found */
   --,UUID_GEN(TEL_CTRY_CD_NR,PHONE_NR,PHONE_EXT)::UUID              AS DIM_PHONE_NATURAL_KEY_HASH_UUID
   ,CASE WHEN (TEL_CTRY_CD_NR,PHONE_NR,PHONE_EXT) IS NULL THEN UUID_GEN(NULL)::UUID 
   ELSE UUID_GEN(TEL_CTRY_CD_NR,PHONE_NR,PHONE_EXT)::UUID END AS DIM_PHONE_NATURAL_KEY_HASH_UUID

   ,UUID_GEN(ELEC_ADDR)::UUID                                      AS  DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID
   ,SOURCE_PARTY_ROLE
   ,SOURCE_PREFERENCE_TYPE_CDE
   ,SOURCE_PREFERENCE_SUBTYPE_CDE
   ,SOURCE_CHOICE_CDE
   ,SOURCE_CHANGE_REASON_CDE 
   ,UUID_GEN(SUB_ROLE_TP)::UUID									 AS	REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID
   ,BEGIN_DT
   ,BEGIN_DTM
   ,ROW_PROCESS_DTM
   ,:audit_id                                                      AS AUDIT_ID
   ,LOGICAL_DELETE_IND
   ---TOTAL 14 NON KEY COLUMNS
   ,UUID_GEN(SOURCE_DELETE_IND,CHOICE_PREFERRED_CDE
                           ,CHOICE_DESC
                           ,CHOICE_DT
                           ,CHOICE_CDE
                           ,CHOICE_NR
                           ,CHANGE_SOURCE_CDE
                           ,CHANGE_REASON_CDE
                           ,SOURCE_PARTY_ROLE
                           ,SOURCE_PREFERENCE_TYPE_CDE
                           ,SOURCE_PREFERENCE_SUBTYPE_CDE
                           ,SOURCE_CHOICE_CDE
                           ,SOURCE_CHANGE_REASON_CDE
                           ,REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID::VARCHAR)::UUID        AS CHECK_SUM
   ,CURRENT_ROW_IND
   ,END_DT
   ,END_DTM
   ,SOURCE_SYSTEM_ID
   ,RESTRICTED_ROW_IND
   --,ROW_SID
   ,:audit_id                                                      AS UPDATE_AUDIT_ID
   ,SOURCE_DELETE_IND
   ,OPERATOR_IND
FROM TEMP_REL_CONTACT_PREFERENCE_1 TEMP1
LEFT JOIN TEMP_REL_CONTACT_PREFERENCE_2 SNAP ON 
                                                          TEMP1.MEMBER_ID                         =           SNAP.MEMBER_ID
											 AND COALESCE(TEMP1.CARR_ADMN_SYS_CD,'')              =  COALESCE(SNAP.CARR_ADMN_SYS_CD,'')
											 AND COALESCE(TEMP1.HLDG_KEY_PFX,'')                  =  COALESCE(SNAP.HLDG_KEY_PFX,'')
											 AND COALESCE(TEMP1.AGRMNT_NUM,'')                    =  COALESCE(SNAP.AGRMNT_NUM,'')
											 AND COALESCE(TEMP1.HLDG_KEY_SFX,'')                  =  COALESCE(SNAP.HLDG_KEY_SFX,'')
											 AND COALESCE(TEMP1.SOURCE_PARTY_ROLE,'')             =  COALESCE(SNAP.ROLE_TP,'')
											 AND COALESCE(TEMP1.SOURCE_PREFERENCE_TYPE_CDE,'')    =  COALESCE(SNAP.PREF_TP,'')
											 AND COALESCE(TEMP1.SOURCE_PREFERENCE_SUBTYPE_CDE,'') =  COALESCE(SNAP.PREF_SUB_TP,'')
											 AND COALESCE(TEMP1.PREFERENCE_SUB_SUBTYPE_CDE,'')    =  COALESCE(SNAP.PREF_SUB_SUB_TP,'')
WHERE TEMP1.OPERATOR_IND = 'D' AND SNAP.MEMBER_ID IS NULL 
)T2
)FULL_BLOCK 
    WHERE RNK=1  AND 
	(DIM_PARTY_NATURAL_KEY_HASH_UUID,
    REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
    PREFERENCE_TYPE_CDE,
    PREFERENCE_SUBTYPE_CDE,
	COALESCE(PREFERENCE_SUB_SUBTYPE_CDE::VARCHAR, ''),
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID) NOT IN (SELECT  DIM_PARTY_NATURAL_KEY_HASH_UUID,
    REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
    PREFERENCE_TYPE_CDE,
    PREFERENCE_SUBTYPE_CDE,
    COALESCE(PREFERENCE_SUB_SUBTYPE_CDE::VARCHAR, ''),
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID FROM EDW_STAGING.ECDM_REL_CONTACT_PREFERENCE_PRE_WORK ); 

   
 COMMIT;

     
 SELECT ANALYZE_STATISTICS('EDW_STAGING.ECDM_REL_CONTACT_PREFERENCE_PRE_WORK');


/* WORK TABLE - INSERTS 
 * 
 * this script is used to load the records that don't have a record in target
 * */
   
INSERT /*+DIRECT*/ INTO EDW_WORK.ECDM_REL_CONTACT_PREFERENCE (   -- 1W
   DIM_PARTY_NATURAL_KEY_HASH_UUID,
   REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
   PREFERENCE_TYPE_CDE,
   PREFERENCE_SUBTYPE_CDE,
   PREFERENCE_SUB_SUBTYPE_CDE ,
   DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,   
   CHOICE_PREFERRED_CDE , 
   CHOICE_DESC , 
   CHOICE_DT,
   CHOICE_CDE,
   CHOICE_NR , 
   CHANGE_SOURCE_CDE,
   CHANGE_REASON_CDE ,
   DIM_ADDRESS_NATURAL_KEY_HASH_UUID,
   DIM_PHONE_NATURAL_KEY_HASH_UUID,
   DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID,
   SOURCE_PARTY_ROLE ,
   SOURCE_PREFERENCE_TYPE_CDE,
   SOURCE_PREFERENCE_SUBTYPE_CDE,
   SOURCE_CHOICE_CDE,
   SOURCE_CHANGE_REASON_CDE,
   REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
   BEGIN_DT,
   BEGIN_DTM,
   ROW_PROCESS_DTM,
   AUDIT_ID,
   LOGICAL_DELETE_IND,
   CHECK_SUM,
   CURRENT_ROW_IND,
   END_DT,
   END_DTM,
   SOURCE_SYSTEM_ID, 
   RESTRICTED_ROW_IND,
   --ROW_SID,
   UPDATE_AUDIT_ID,
   SOURCE_DELETE_IND
    )
SELECT 
   SRC.DIM_PARTY_NATURAL_KEY_HASH_UUID,
   SRC.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
   SRC.PREFERENCE_TYPE_CDE,
   SRC.PREFERENCE_SUBTYPE_CDE,
   SRC.PREFERENCE_SUB_SUBTYPE_CDE ,
   SRC.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,   
   SRC.CHOICE_PREFERRED_CDE , 
   SRC.CHOICE_DESC , 
   SRC.CHOICE_DT,
   SRC.CHOICE_CDE,
   SRC.CHOICE_NR , 
   SRC.CHANGE_SOURCE_CDE,
   SRC.CHANGE_REASON_CDE ,
   SRC.DIM_ADDRESS_NATURAL_KEY_HASH_UUID,
   SRC.DIM_PHONE_NATURAL_KEY_HASH_UUID,
   SRC.DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID,
   SRC.SOURCE_PARTY_ROLE ,
   SRC.SOURCE_PREFERENCE_TYPE_CDE,
   SRC.SOURCE_PREFERENCE_SUBTYPE_CDE,
   SRC.SOURCE_CHOICE_CDE,
   SRC.SOURCE_CHANGE_REASON_CDE,
   SRC.REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
   SRC.BEGIN_DT,
   SRC.BEGIN_DTM,
   SRC.ROW_PROCESS_DTM,
   SRC.AUDIT_ID,
   SRC.LOGICAL_DELETE_IND,
   SRC.CHECK_SUM,
   SRC.CURRENT_ROW_IND,
   SRC.END_DT,
   SRC.END_DTM,
   SRC.SOURCE_SYSTEM_ID, 
   SRC.RESTRICTED_ROW_IND,
   --ROW_SID,
   SRC.UPDATE_AUDIT_ID,
   SRC.SOURCE_DELETE_IND
FROM EDW_STAGING.ECDM_REL_CONTACT_PREFERENCE_PRE_WORK SRC
LEFT JOIN EDW.REL_CONTACT_PREFERENCE TGT ON TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID=SRC.DIM_PARTY_NATURAL_KEY_HASH_UUID
                                                 AND TGT.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID=SRC.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID
                                                 AND TGT.PREFERENCE_TYPE_CDE=SRC.PREFERENCE_TYPE_CDE
                                                 AND TGT.PREFERENCE_SUBTYPE_CDE=SRC.PREFERENCE_SUBTYPE_CDE
                                                 AND COALESCE(TGT.PREFERENCE_SUB_SUBTYPE_CDE::VARCHAR, '')=COALESCE(SRC.PREFERENCE_SUB_SUBTYPE_CDE::VARCHAR, '')
                                                 AND TGT.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID=SRC.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID
 WHERE TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID IS NULL ;   

  COMMIT;  


 /* WORK TABLE - UPDATE TGT RECORD
 * 
 * This script finds records where the new record from the source has a different check_sum than the current target record. 
 * The current record in the target will be ended since the source record will be inserted in the next step.
 * Those records from target table will be inserted as in-active records into work table.
 * */   

INSERT /*+DIRECT*/ INTO EDW_WORK.ECDM_REL_CONTACT_PREFERENCE(   -- 2W
    DIM_PARTY_NATURAL_KEY_HASH_UUID,
   REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
   PREFERENCE_TYPE_CDE,
   PREFERENCE_SUBTYPE_CDE,
   PREFERENCE_SUB_SUBTYPE_CDE ,
   DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,   
   CHOICE_PREFERRED_CDE , 
   CHOICE_DESC , 
   CHOICE_DT,
   CHOICE_CDE,
   CHOICE_NR , 
   CHANGE_SOURCE_CDE,
   CHANGE_REASON_CDE ,
   DIM_ADDRESS_NATURAL_KEY_HASH_UUID,
   DIM_PHONE_NATURAL_KEY_HASH_UUID,
   DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID,
   SOURCE_PARTY_ROLE ,
   SOURCE_PREFERENCE_TYPE_CDE,
   SOURCE_PREFERENCE_SUBTYPE_CDE,
   SOURCE_CHOICE_CDE,
   SOURCE_CHANGE_REASON_CDE,
   REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
   BEGIN_DT,
   BEGIN_DTM,
   ROW_PROCESS_DTM,
   AUDIT_ID,
   LOGICAL_DELETE_IND,
   CHECK_SUM,
   CURRENT_ROW_IND,
   END_DT,
   END_DTM,
   SOURCE_SYSTEM_ID, 
   RESTRICTED_ROW_IND,
   --ROW_SID,
   UPDATE_AUDIT_ID,
   SOURCE_DELETE_IND

    )
SELECT 
    TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID
   ,TGT.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID
   ,TGT.PREFERENCE_TYPE_CDE
   ,TGT.PREFERENCE_SUBTYPE_CDE
   ,TGT.PREFERENCE_SUB_SUBTYPE_CDE 
   ,TGT.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID 
   ,TGT.CHOICE_PREFERRED_CDE 
   ,TGT.CHOICE_DESC 
   ,TGT.CHOICE_DT
   ,TGT.CHOICE_CDE
   ,TGT.CHOICE_NR  
   ,TGT.CHANGE_SOURCE_CDE
   ,TGT.CHANGE_REASON_CDE 
   ,TGT.DIM_ADDRESS_NATURAL_KEY_HASH_UUID
   ,TGT.DIM_PHONE_NATURAL_KEY_HASH_UUID
   ,TGT.DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID
   ,TGT.SOURCE_PARTY_ROLE 
   ,TGT.SOURCE_PREFERENCE_TYPE_CDE
   ,TGT.SOURCE_PREFERENCE_SUBTYPE_CDE
   ,TGT.SOURCE_CHOICE_CDE
   ,TGT.SOURCE_CHANGE_REASON_CDE
   ,TGT.REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID
   ,TGT.BEGIN_DT
   ,TGT.BEGIN_DTM
   ,CURRENT_TIMESTAMP AS ROW_PROCESS_DTM
   ,TGT.AUDIT_ID
   ,TGT.LOGICAL_DELETE_IND
   ,TGT.CHECK_SUM
   ,FALSE AS CURRENT_ROW_IND
   ,SRC.BEGIN_DT - INTERVAL '1' DAY   AS END_DT
   ,SRC.BEGIN_DTM   - INTERVAL '1' SECOND  AS END_DTM
   ,TGT.SOURCE_SYSTEM_ID
   ,TGT.RESTRICTED_ROW_IND
   --,TGT.ROW_SID
   ,SRC.UPDATE_AUDIT_ID
   ,TGT.SOURCE_DELETE_IND
FROM
    EDW.REL_CONTACT_PREFERENCE TGT
JOIN
    EDW_STAGING.ECDM_REL_CONTACT_PREFERENCE_PRE_WORK SRC
        ON TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID = SRC.DIM_PARTY_NATURAL_KEY_HASH_UUID
        AND TGT.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID = SRC.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID
        AND TGT.PREFERENCE_TYPE_CDE =  SRC.PREFERENCE_TYPE_CDE
        AND TGT.PREFERENCE_SUBTYPE_CDE = SRC.PREFERENCE_SUBTYPE_CDE
		AND COALESCE(TGT.PREFERENCE_SUB_SUBTYPE_CDE::VARCHAR, '') = COALESCE(SRC.PREFERENCE_SUB_SUBTYPE_CDE::VARCHAR, '')
        AND TGT.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID = SRC.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID
        AND TGT.CURRENT_ROW_IND = TRUE
WHERE 
   --CHANGE IN CHECK_SUM
   (TGT.CHECK_SUM <> SRC.CHECK_SUM) 
   --ENDING OF A RECORD (DELETE)
   OR (SRC.OPERATOR_IND = 'D' AND TGT.CHECK_SUM = SRC.CHECK_SUM); 

 COMMIT;
   
/* WORK TABLE - INSERT PRE_WORK RECORD
 * 
 * This script finds records where the new record from the source has a different check_sum than the current target record. 
 * Those records from pre_work table will be inserted as active records into work table.
 * */  

INSERT /*+DIRECT*/ INTO EDW_WORK.ECDM_REL_CONTACT_PREFERENCE(   -- 3W
    DIM_PARTY_NATURAL_KEY_HASH_UUID,
   REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
   PREFERENCE_TYPE_CDE,
   PREFERENCE_SUBTYPE_CDE,
   PREFERENCE_SUB_SUBTYPE_CDE ,
   DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,   
   CHOICE_PREFERRED_CDE , 
   CHOICE_DESC , 
   CHOICE_DT,
   CHOICE_CDE,
   CHOICE_NR , 
   CHANGE_SOURCE_CDE,
   CHANGE_REASON_CDE ,
   DIM_ADDRESS_NATURAL_KEY_HASH_UUID,
   DIM_PHONE_NATURAL_KEY_HASH_UUID,
   DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID,
   SOURCE_PARTY_ROLE ,
   SOURCE_PREFERENCE_TYPE_CDE,
   SOURCE_PREFERENCE_SUBTYPE_CDE,
   SOURCE_CHOICE_CDE,
   SOURCE_CHANGE_REASON_CDE,
   REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
   BEGIN_DT,
   BEGIN_DTM,
   ROW_PROCESS_DTM,
   AUDIT_ID,
   LOGICAL_DELETE_IND,
   CHECK_SUM,
   CURRENT_ROW_IND,
   END_DT,
   END_DTM,
   SOURCE_SYSTEM_ID, 
   RESTRICTED_ROW_IND,
   --ROW_SID,
   UPDATE_AUDIT_ID,
   SOURCE_DELETE_IND
    )
SELECT 
   SRC.DIM_PARTY_NATURAL_KEY_HASH_UUID,
   SRC.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
   SRC.PREFERENCE_TYPE_CDE,
   SRC.PREFERENCE_SUBTYPE_CDE,
   SRC.PREFERENCE_SUB_SUBTYPE_CDE ,
   SRC.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID,   
   SRC.CHOICE_PREFERRED_CDE , 
   SRC.CHOICE_DESC , 
   SRC.CHOICE_DT,
   SRC.CHOICE_CDE,
   SRC.CHOICE_NR , 
   SRC.CHANGE_SOURCE_CDE,
   SRC.CHANGE_REASON_CDE ,
   SRC.DIM_ADDRESS_NATURAL_KEY_HASH_UUID,
   SRC.DIM_PHONE_NATURAL_KEY_HASH_UUID,
   SRC.DIM_ELECTRONIC_ADDRESS_NATURAL_KEY_HASH_UUID,
   SRC.SOURCE_PARTY_ROLE ,
   SRC.SOURCE_PREFERENCE_TYPE_CDE,
   SRC.SOURCE_PREFERENCE_SUBTYPE_CDE,
   SRC.SOURCE_CHOICE_CDE,
   SRC.SOURCE_CHANGE_REASON_CDE,
   SRC.REF_PARTY_SUB_ROLE_NATURAL_KEY_HASH_UUID,
   SRC.BEGIN_DT,
   SRC.BEGIN_DTM,
   CURRENT_TIMESTAMP AS ROW_PROCESS_DTM,
   SRC.AUDIT_ID,
   SRC.LOGICAL_DELETE_IND,
   SRC.CHECK_SUM,
   SRC.CURRENT_ROW_IND,
   SRC.END_DT,
   SRC.END_DTM,
   SRC.SOURCE_SYSTEM_ID, 
   SRC.RESTRICTED_ROW_IND,
   --ROW_SID,
   SRC.UPDATE_AUDIT_ID,
   SRC.SOURCE_DELETE_IND
FROM EDW_STAGING.ECDM_REL_CONTACT_PREFERENCE_PRE_WORK SRC   
LEFT JOIN
   EDW.REL_CONTACT_PREFERENCE TGT
    ON SRC.DIM_PARTY_NATURAL_KEY_HASH_UUID = TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID
    AND SRC.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID = TGT.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID
    AND SRC.PREFERENCE_TYPE_CDE =  TGT.PREFERENCE_TYPE_CDE
    AND SRC.PREFERENCE_SUBTYPE_CDE = TGT.PREFERENCE_SUBTYPE_CDE
	AND COALESCE(SRC.PREFERENCE_SUB_SUBTYPE_CDE::VARCHAR, '')=COALESCE(TGT.PREFERENCE_SUB_SUBTYPE_CDE::VARCHAR, '')
    AND SRC.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID = TGT.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID
   AND TGT.CURRENT_ROW_IND = TRUE
  
WHERE  
   (TGT.ROW_SID IS NULL AND (SRC.DIM_PARTY_NATURAL_KEY_HASH_UUID ,
    SRC.REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID ,
    SRC.PREFERENCE_TYPE_CDE ,
    SRC.PREFERENCE_SUBTYPE_CDE, 
    COALESCE(SRC.PREFERENCE_SUB_SUBTYPE_CDE::VARCHAR, '') ,
    SRC.DIM_AGREEMENT_NATURAL_KEY_HASH_UUID)  IN (SELECT DISTINCT DIM_PARTY_NATURAL_KEY_HASH_UUID,
    REF_PARTY_ROLE_NATURAL_KEY_HASH_UUID,
    PREFERENCE_TYPE_CDE,
    PREFERENCE_SUBTYPE_CDE,
    COALESCE(PREFERENCE_SUB_SUBTYPE_CDE::VARCHAR, ''),
    DIM_AGREEMENT_NATURAL_KEY_HASH_UUID FROM EDW.REL_CONTACT_PREFERENCE) )
   OR 
      (TGT.ROW_SID IS NOT NULL 
         --CHECKSUM CHANGED
         AND (TGT.CHECK_SUM <> SRC.CHECK_SUM)
      );

 COMMIT;
     
 SELECT ANALYZE_STATISTICS('EDW_WORK.ECDM_REL_CONTACT_PREFERENCE');   