DROP TABLE IF EXISTS PRE_WORK1;

CREATE LOCAL TEMPORARY TABLE PRE_WORK1 ON COMMIT PRESERVE ROWS  AS 
SELECT * FROM EDW_WORK.PARTY_DIPMS_DIM_NON_MASTERED_PARTY WHERE 1<>1;

INSERT  /*DIRECT*/ INTO PRE_WORK1(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT::date,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,SOURCE_MARITAL_STATUS_CDE,SOURCE_LOGIN_ID,GOVERNMENT_ID,PARTY_TYPE_CDE)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE FROM (
SELECT 
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(FIRST_NM,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
VOLTAGEPROTECT(FULL_NM,'name') AS FULL_NM,
VOLTAGEPROTECT(BIRTH_DT,'dob_char') AS BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
NULL AS SOURCE_LOGIN_ID,
VOLTAGEPROTECT(GOVERNMENT_ID,'ssn_char') AS GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
:AUDIT_ID AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
END_DT,
END_DTM,
'77' AS  SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
:AUDIT_ID AS UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER(PARTITION BY PARTY_ID,FIRST_NM,LAST_NM,FULL_NM,BIRTH_DT,
GENDER_CDE,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,MARITAL_STATUS_CDE,SOURCE_MARITAL_STATUS_CDE,GOVERNMENT_ID,
SOURCE_DELETE_IND ORDER BY BEGIN_DTM,END_DTM DESC) AS RNK FROM (
SELECT
CLEAN_STRING(VOLTAGEACCESS(PARTY_ID,'sorparty')) AS PARTY_ID,
CLEAN_STRING(VOLTAGEACCESS(FIRSTNAME,'name')) AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(LAST_NAME,'name')) AS LAST_NM,
CLEAN_STRING(VOLTAGEACCESS(ENTITY_NAME,'name')) AS FULL_NM,
CLEAN_STRING(VOLTAGEACCESS(DATE_OF_BIRTH,'dob_char'))   AS BIRTH_DT,
COALESCE(CLEAN_STRING(GENDER), 'Unk') AS GENDER_CDE,
CASE WHEN SENSITIVE = 'Y' THEN TRUE ELSE FALSE END AS SENSITIVE_PARTY_IND,
CLEAN_STRING(GENDER) AS SOURCE_GENDER_CDE,
COALESCE(CLEAN_STRING(MARRIAGE_STATUS), 'Unk') AS MARITAL_STATUS_CDE,
CLEAN_STRING(MARRIAGE_STATUS) AS SOURCE_MARITAL_STATUS_CDE,
CLEAN_STRING(VOLTAGEACCESS(GOVERNMENT_ID,'ssn_char')) AS GOVERNMENT_ID,
LST_UPDT_DT::DATE AS BEGIN_DT,
LST_UPDT_DT::TIMESTAMP(6) AS BEGIN_DTM,
'9999-12-31'::DATE  AS END_DT,
'9999-12-31'::TIMESTAMP(6) AS END_DTM,
CASE WHEN CHANGE_MODE = 'DELETE' THEN TRUE ELSE FALSE END AS SOURCE_DELETE_IND
FROM 
EXT_EDAP_STAGING.DI_DIPMS_EDW_DIPMS_PARTYINSURED
)Q_1
)Q_2
WHERE RNK=1;

INSERT  /*DIRECT*/ INTO PRE_WORK1(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT::date,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,SOURCE_MARITAL_STATUS_CDE,SOURCE_LOGIN_ID,GOVERNMENT_ID,PARTY_TYPE_CDE)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE FROM (
SELECT 
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(FIRST_NM,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
VOLTAGEPROTECT(FULL_NM,'name') AS FULL_NM,
VOLTAGEPROTECT(BIRTH_DT,'dob_char') AS BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
NULL AS SOURCE_LOGIN_ID,
VOLTAGEPROTECT(GOVERNMENT_ID,'ssn_char') AS GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
:AUDIT_ID AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
END_DT,
END_DTM,
'77' AS  SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
:AUDIT_ID AS UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER(PARTITION BY PARTY_ID,FIRST_NM,LAST_NM,FULL_NM,BIRTH_DT,
GENDER_CDE,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,MARITAL_STATUS_CDE,SOURCE_MARITAL_STATUS_CDE,GOVERNMENT_ID,
SOURCE_DELETE_IND ORDER BY BEGIN_DTM,END_DTM DESC) AS RNK FROM (
SELECT
CLEAN_STRING(VOLTAGEACCESS(PARTY_ID,'sorparty')) AS PARTY_ID,
CLEAN_STRING(VOLTAGEACCESS(FIRSTNAME,'name')) AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(LAST_NAME,'name')) AS LAST_NM,
CLEAN_STRING(VOLTAGEACCESS(ENTITY_NAME,'name')) AS FULL_NM,
CLEAN_STRING(VOLTAGEACCESS(DATE_OF_BIRTH,'dob_char'))   AS BIRTH_DT,
COALESCE(CLEAN_STRING(GENDER), 'Unk') AS GENDER_CDE,
CASE WHEN SENSITIVE = 'Y' THEN TRUE ELSE FALSE END AS SENSITIVE_PARTY_IND,
CLEAN_STRING(GENDER) AS SOURCE_GENDER_CDE,
COALESCE(CLEAN_STRING(MARRIAGE_STATUS), 'Unk') AS MARITAL_STATUS_CDE,
CLEAN_STRING(MARRIAGE_STATUS) AS SOURCE_MARITAL_STATUS_CDE,
CLEAN_STRING(VOLTAGEACCESS(GOVERNMENT_ID,'ssn_char')) AS GOVERNMENT_ID,
LST_UPDT_DT::DATE AS BEGIN_DT,
LST_UPDT_DT::TIMESTAMP(6) AS BEGIN_DTM,
'9999-12-31'::DATE  AS END_DT,
'9999-12-31'::TIMESTAMP(6) AS END_DTM,
CASE WHEN CHANGE_MODE = 'DELETE' THEN TRUE ELSE FALSE END AS SOURCE_DELETE_IND
FROM 
EXT_EDAP_STAGING.DI_DIPMS_EDW_DIPMS_PARTYOWNER
)Q_1
)Q_2
WHERE RNK=1;


INSERT  /*DIRECT*/ INTO PRE_WORK1(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,SOURCE_MARITAL_STATUS_CDE,SOURCE_LOGIN_ID,GOVERNMENT_ID,PARTY_TYPE_CDE)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE FROM (
SELECT 
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(FIRST_NM,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
VOLTAGEPROTECT(FULL_NM,'name') AS FULL_NM,
NULL AS BIRTH_DT,
NULL AS GENDER_CDE,
NULL AS SENSITIVE_PARTY_IND,
NULL AS SOURCE_GENDER_CDE,
NULL AS MARITAL_STATUS_CDE,
NULL AS SOURCE_MARITAL_STATUS_CDE,
NULL AS SOURCE_LOGIN_ID,
NULL AS GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
:AUDIT_ID AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
END_DT,
END_DTM,
'77' AS  SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
:AUDIT_ID AS UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER(PARTITION BY PARTY_ID,FIRST_NM,LAST_NM,FULL_NM,
SENSITIVE_PARTY_IND,SOURCE_DELETE_IND ORDER BY BEGIN_DTM,END_DTM DESC) AS RNK FROM (
SELECT
CLEAN_STRING(VOLTAGEACCESS(PARTY_ID,'sorparty')) AS PARTY_ID,
CLEAN_STRING(VOLTAGEACCESS(FIRST_NAME,'name')) AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(LAST_NAME,'name')) AS LAST_NM,
CLEAN_STRING(VOLTAGEACCESS(ENTITY_NAME,'name')) AS FULL_NM,
LST_UPDT_DT::DATE AS BEGIN_DT,
LST_UPDT_DT::TIMESTAMP(6) AS BEGIN_DTM,
'9999-12-31'::DATE  AS END_DT,
'9999-12-31'::TIMESTAMP(6) AS END_DTM,
CASE WHEN CHANGE_MODE = 'DELETE' THEN TRUE ELSE FALSE END AS SOURCE_DELETE_IND
FROM 
EXT_EDAP_STAGING.DI_DIPMS_EDW_DIPMS_PARTYPAYOR
)Q_1
)Q_2
WHERE RNK=1;




INSERT  /*DIRECT*/ INTO PRE_WORK1(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT::date,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,SOURCE_MARITAL_STATUS_CDE,SOURCE_LOGIN_ID,GOVERNMENT_ID,PARTY_TYPE_CDE)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE FROM (
SELECT 
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(FIRST_NM,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
NULL AS FULL_NM,
NULL AS BIRTH_DT,
NULL AS GENDER_CDE,
NULL AS SENSITIVE_PARTY_IND,
NULL AS SOURCE_GENDER_CDE,
NULL AS MARITAL_STATUS_CDE,
NULL AS SOURCE_MARITAL_STATUS_CDE,
NULL AS SOURCE_LOGIN_ID,
NULL AS GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
:AUDIT_ID AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
END_DT,
END_DTM,
'77' AS  SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
:AUDIT_ID AS UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER(PARTITION BY PARTY_ID,FIRST_NM,LAST_NM,
SOURCE_DELETE_IND ORDER BY BEGIN_DTM,END_DTM DESC) AS RNK FROM (
SELECT
CLEAN_STRING(VOLTAGEACCESS(FIRST_NAME,'name')) AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(LAST_NAME,'name')) AS LAST_NM,
CLEAN_STRING(VOLTAGEACCESS(CASE_ID,'account_char')) AS CAS_ID,
LST_UPDT_DT::DATE AS BEGIN_DT,
LST_UPDT_DT::TIMESTAMP(6) AS BEGIN_DTM,
'9999-12-31'::DATE  AS END_DT,
'9999-12-31'::TIMESTAMP(6) AS END_DTM,
 FALSE  AS SOURCE_DELETE_IND,
CLEAN_STRING(POLICY_NUMBER)||CAS_ID||FIRST_NM||LAST_NM AS PARTY_ID
FROM 
EXT_EDAP_STAGING.DI_DIPMS_EDW_DIPMS_PARTYBENEFICIARY
)Q_1
)Q_2
WHERE RNK=1;


INSERT  /*DIRECT*/ INTO PRE_WORK1(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT::DATE,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,SOURCE_MARITAL_STATUS_CDE,SOURCE_LOGIN_ID,GOVERNMENT_ID,PARTY_TYPE_CDE)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE FROM (
SELECT 
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(FIRST_NM,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
NULL AS FULL_NM,
NULL AS BIRTH_DT,
NULL AS GENDER_CDE,
NULL AS SENSITIVE_PARTY_IND,
NULL AS SOURCE_GENDER_CDE,
NULL AS MARITAL_STATUS_CDE,
NULL AS SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
NULL AS GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
:AUDIT_ID AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
END_DT,
END_DTM,
'77' AS  SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
:AUDIT_ID AS UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER(PARTITION BY PARTY_ID,FIRST_NM,LAST_NM,SOURCE_LOGIN_ID,
SOURCE_DELETE_IND ORDER BY BEGIN_DTM,END_DTM DESC) AS RNK FROM (
SELECT
CLEAN_STRING(VOLTAGEACCESS(FIRST_NAME,'name')) AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(LAST_NAME,'name')) AS LAST_NM,
CLEAN_STRING(LOGINID) AS SOURCE_LOGIN_ID,
LST_UPDT_DT::DATE AS BEGIN_DT,
LST_UPDT_DT::TIMESTAMP(6) AS BEGIN_DTM,
'9999-12-31'::DATE  AS END_DT,
'9999-12-31'::TIMESTAMP(6) AS END_DTM,
FALSE AS SOURCE_DELETE_IND,
FIRST_NM||LAST_NM||SOURCE_LOGIN_ID AS PARTY_ID
FROM 
EXT_EDAP_STAGING.DI_DIPMS_EDW_DIPMS_PARTY_CASE_OWNER
)Q_1
)Q_2
WHERE RNK=1;

INSERT INTO PRE_WORK1(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE,
GROUP_NBR,
SUB_GROUP_NBR,
GROUP_IPN_ID,
GROUP_TYPE_CDE,
GROUP_TYPE_EFFECTIVE_DT,
DISCOUNT_PCT,
BILL_AT_ISSUE_IND,
PLAN_TYPE_CDE,
maximum_benefit_paid_ind,
BUY_SELL_GROUP_TYPE_CDE,
LONG_TERM_CARE_IND,
DEFAULT_DIVIDEND_PCT,
GUARANTEED_STANDARD_ISSUE_IND,
EMPLOYER_PAID_PCT,
EMPLOYER_PAID_DISCOUNT_PCT,
PREEXISTING_CONDITION_LIMITATION_ID,
DUE_DT_ALIGNMENT_IND,
SERVICING_AGENCY_ID,
SOURCE_MARKET_CDE,
market_cde,
MARKET_CDE_EFFECTIVE_DT,
SOURCE_SALES_CATEGORY_CDE,
sales_category_cde,
SALES_CATEGORY_EFFECTIVE_DT,
DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
UNDERWRITING_PROCESSOR_ID,
PARENT_GROUP_NR_ID,
ERISA_PLAN_CDE,
ERISA_PLAN_EFFECTIVE_DT,
EMPLOYER_PAID_EFFECTIVE_DT,
EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
SALARY_DEDUCTION_IND,
MGI_IND,
ENDR_IND,
ENDR_DT,
SERVICING_AGENT_ID,
SOURCE_BILLING_FREQUENCY_CDE,
BILLING_FREQUENCY_CDE,
source_bill_type_cde,
BILLING_TYPE_CDE,
LEVEL_PCT,
CROSSOVER_YEAR_TXT,
EMPLOYEE_RECEIVE_DIVIDEND_IND,
EMPLOYEE_RECEIVE_PREMIUM_IND,
SIC_CDE,
GROUP_CLASS_CDE,
BEGIN_BILLING_DT,
SECOND_DUE_DAY_TXT
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT::DATE,
GENDER_CDE,
SENSITIVE_PARTY_ID,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,
first_nm,
middle_nm,
last_nm,
full_nm,
birth_dt,
gender_cde,
sensitive_party_id,
source_gender_cde,
marital_status_cde,
source_login_id,
party_type_cde,
group_nbr,
sub_group_nbr,
group_ipn_id,
group_type_cde,
group_type_effective_dt,
discount_pct,
bill_at_issue_ind,
plan_type_cde,
maximum_benefit_paid_ind,
buy_sell_group_type_cde,
long_term_care_ind,
default_dividend_pct,
guaranteed_standard_issue_ind,
employer_paid_pct,
employer_paid_discount_pct,
preexisting_condition_limitation_id,
DUE_DT_ALIGNMENT_IND,
servicing_agency_id,
source_market_cde,
market_cde,
market_cde_effective_dt,
source_sales_category_cde,
sales_category_cde,
sales_category_effective_dt,
default_dividend_pct_effective_dt,
underwriting_processor_id,
parent_group_nr_id,
erisa_plan_cde,
erisa_plan_effective_dt,
employer_paid_effective_dt,
employer_paid_discount_effective_dt,
salary_deduction_ind,
mgi_ind,
endr_ind,
endr_dt,
servicing_agent_id,
source_billing_frequency_cde,
billing_frequency_cde,
source_bill_type_cde,
billing_type_cde,
level_pct,
crossover_year_txt,
employee_receive_dividend_ind,
employee_receive_premium_ind,
sic_cde,
group_class_cde,
begin_billing_dt,
second_due_day_txt
)::uuid AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE,
GROUP_NBR,
SUB_GROUP_NBR,
GROUP_IPN_ID,
GROUP_TYPE_CDE,
GROUP_TYPE_EFFECTIVE_DT,
DISCOUNT_PCT,
BILL_AT_ISSUE_IND,
PLAN_TYPE_CDE,
maximum_benefit_paid_ind,
BUY_SELL_GROUP_TYPE_CDE,
LONG_TERM_CARE_IND,
DEFAULT_DIVIDEND_PCT,
GUARANTEED_STANDARD_ISSUE_IND,
EMPLOYER_PAID_PCT,
EMPLOYER_PAID_DISCOUNT_PCT,
PREEXISTING_CONDITION_LIMITATION_ID,
DUE_DT_ALIGNMENT_IND,
SERVICING_AGENCY_ID,
SOURCE_MARKET_CDE,
market_cde,
MARKET_CDE_EFFECTIVE_DT,
SOURCE_SALES_CATEGORY_CDE,
sales_category_cde,
SALES_CATEGORY_EFFECTIVE_DT,
DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
UNDERWRITING_PROCESSOR_ID,
PARENT_GROUP_NR_ID,
ERISA_PLAN_CDE,
ERISA_PLAN_EFFECTIVE_DT,
EMPLOYER_PAID_EFFECTIVE_DT,
EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
SALARY_DEDUCTION_IND,
MGI_IND,
ENDR_IND,
ENDR_DT,
SERVICING_AGENT_ID,
SOURCE_BILLING_FREQUENCY_CDE,
BILLING_FREQUENCY_CDE,
source_bill_type_cde,
BILLING_TYPE_CDE,
LEVEL_PCT,
CROSSOVER_YEAR_TXT,
EMPLOYEE_RECEIVE_DIVIDEND_IND,
EMPLOYEE_RECEIVE_PREMIUM_IND,
SIC_CDE,
GROUP_CLASS_CDE,
BEGIN_BILLING_DT,
SECOND_DUE_DAY_TXT
FROM 
(
SELECT 
UUID_GEN(PARTY_ID)::uuid AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
NULL AS FIRST_NM,
NULL AS MIDDLE_NM,
NULL AS LAST_NM,
VOLTAGEPROTECT(FULL_NM,'name') AS FULL_NM,
NULL AS BIRTH_DT,
NULL AS GENDER_CDE,
NULL AS SENSITIVE_PARTY_ID,
NULL AS SOURCE_GENDER_CDE,
NULL AS MARITAL_STATUS_CDE,
NULL AS SOURCE_LOGIN_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS  ROW_PROCESS_DTM,
:audit_id AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
END_DT,
END_DTM,
'77' AS SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
:audit_id AS UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
'N' AS PARTY_TYPE_CDE,
VOLTAGEPROTECT(GROUP_NBR,'account_char') AS GROUP_NBR,
SUB_GROUP_NBR,
VOLTAGEPROTECT(GROUP_IPN_ID,'sorparty') AS GROUP_IPN_ID,
GROUP_TYPE_CDE,
GROUP_TYPE_EFFECTIVE_DT,
DISCOUNT_PCT,
BILL_AT_ISSUE_IND,
PLAN_TYPE_CDE,
maximum_benefit_paid_ind,
BUY_SELL_GROUP_TYPE_CDE,
LONG_TERM_CARE_IND,
DEFAULT_DIVIDEND_PCT,
GUARANTEED_STANDARD_ISSUE_IND,
EMPLOYER_PAID_PCT,
EMPLOYER_PAID_DISCOUNT_PCT,
VOLTAGEPROTECT(PREEXISTING_CONDITION_LIMITATION_ID,'account_char') AS PREEXISTING_CONDITION_LIMITATION_ID,
DUE_DT_ALIGNMENT_IND,
VOLTAGEPROTECT(SERVICING_AGENCY_ID,'sorparty') AS SERVICING_AGENCY_ID,
SOURCE_MARKET_CDE,
market_cde,
MARKET_CDE_EFFECTIVE_DT,
SOURCE_SALES_CATEGORY_CDE,
sales_category_cde,
SALES_CATEGORY_EFFECTIVE_DT,
DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
UNDERWRITING_PROCESSOR_ID,
PARENT_GROUP_NR_ID,
ERISA_PLAN_CDE,
ERISA_PLAN_EFFECTIVE_DT,
EMPLOYER_PAID_EFFECTIVE_DT,
EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
SALARY_DEDUCTION_IND,
MGI_IND,
ENDR_IND,
ENDR_DT,
VOLTAGEPROTECT(SERVICING_AGENT_ID,'sorparty') AS SERVICING_AGENT_ID,
SOURCE_BILLING_FREQUENCY_CDE,
BILLING_FREQUENCY_CDE,
source_bill_type_cde,
BILLING_TYPE_CDE,
LEVEL_PCT,
CROSSOVER_YEAR_TXT,
EMPLOYEE_RECEIVE_DIVIDEND_IND,
EMPLOYEE_RECEIVE_PREMIUM_IND,
SIC_CDE,
GROUP_CLASS_CDE,
BEGIN_BILLING_DT,
SECOND_DUE_DAY_TXT,
ROW_NUMBER() OVER (PARTITION BY SOURCE_DELETE_IND,
party_id,
full_nm,
party_type_cde,
group_nbr,
sub_group_nbr,
group_ipn_id,
GROUP_TYPE_CDE,
group_type_effective_dt,
discount_pct,
bill_at_issue_ind,
plan_type_cde,
maximum_benefit_paid_ind,
buy_sell_group_type_cde,
long_term_care_ind,
default_dividend_pct,
guaranteed_standard_issue_ind,
employer_paid_pct,
employer_paid_discount_pct,
preexisting_condition_limitation_id,
DUE_DT_ALIGNMENT_IND,
servicing_agency_id,
source_market_cde,
market_cde,
market_cde_effective_dt,
source_sales_category_cde,
sales_category_cde,
sales_category_effective_dt,
default_dividend_pct_effective_dt,
underwriting_processor_id,
parent_group_nr_id,
erisa_plan_cde,
erisa_plan_effective_dt,
employer_paid_effective_dt,
employer_paid_discount_effective_dt,
salary_deduction_ind,
mgi_ind,
endr_ind,
endr_dt,
servicing_agent_id,
source_billing_frequency_cde,
billing_frequency_cde,
source_bill_type_cde,
billing_type_cde,
level_pct,
crossover_year_txt,
employee_receive_dividend_ind,
employee_receive_premium_ind,
sic_cde,
group_class_cde,
begin_billing_dt,
second_due_day_txt
ORDER BY BEGIN_DTM,END_DTM DESC) AS RNK
FROM (
SELECT
CLEAN_STRING(VOLTAGEACCESS(GRP_NM,'name')) AS FULL_NM,
LST_UPDT_DT::DATE AS BEGIN_DT,
LST_UPDT_DT::TIMESTAMP(6) AS BEGIN_DTM,
'9999-12-31'::DATE  AS END_DT,
'9999-12-31'::TIMESTAMP(6) AS END_DTM,
CLEAN_STRING(VOLTAGEACCESS(GROUP_NUMBER,'account_char')) AS GROUP_NBR,
CLEAN_STRING(SUB_GRP_NR) AS SUB_GROUP_NBR,
CLEAN_STRING(VOLTAGEACCESS(GRP_IPN,'sorparty')) AS GROUP_IPN_ID,
CLEAN_STRING(GRP_TYP) AS GROUP_TYPE_CDE,
GRP_EFF_DT::DATE AS GROUP_TYPE_EFFECTIVE_DT,
GRP_DCNT_PCT::numeric(9,6) AS DISCOUNT_PCT,
CASE WHEN BILL_AT_ISSUE = 'Y' THEN TRUE ELSE FALSE END AS BILL_AT_ISSUE_IND,
CLEAN_STRING(TYP_OF_PLN) AS PLAN_TYPE_CDE,
CASE WHEN MAX_BEN_PD_END = 'Y' THEN TRUE WHEN MAX_BEN_PD_END = 'N' THEN FALSE END AS maximum_benefit_paid_ind,
CLEAN_STRING(BSELL_GRP_TYP) AS BUY_SELL_GROUP_TYPE_CDE,
CASE WHEN LNG_TERM_CARE_IND = 'Y' THEN TRUE WHEN LNG_TERM_CARE_IND = 'N' THEN FALSE END AS LONG_TERM_CARE_IND,
DFLT_DIVD_PCT::numeric(9,6) AS DEFAULT_DIVIDEND_PCT,
CASE WHEN GSI_IND = 'Y' THEN TRUE WHEN GSI_IND = 'N' THEN FALSE END AS GUARANTEED_STANDARD_ISSUE_IND,
EER_PD_PCT::numeric(9,6) AS EMPLOYER_PAID_PCT,
EER_PD_DCNT_PCT::numeric(9,6) AS EMPLOYER_PAID_DISCOUNT_PCT,
CLEAN_STRING(VOLTAGEACCESS(PECL_IDENT,'account_char')) AS PREEXISTING_CONDITION_LIMITATION_ID,
CASE WHEN DUE_DT_ALGN_IND = 'Y' THEN TRUE WHEN DUE_DT_ALGN_IND = 'N' THEN FALSE END AS DUE_DT_ALIGNMENT_IND,
CLEAN_STRING(VOLTAGEACCESS(SVCNG_AGY,'sorparty')) AS SERVICING_AGENCY_ID,
CLEAN_STRING(mkt_cde) AS SOURCE_MARKET_CDE,
COALESCE(clean_string(SDT1.TRNSLT_FLD_VAL), 'Unk') AS market_cde,--COALESCE(clean_string(TRNSLT_FLD_VAL), 'Unk')
mkt_cde_eff_dt::date AS MARKET_CDE_EFFECTIVE_DT,
CLEAN_STRING(sales_ctg_cde) AS SOURCE_SALES_CATEGORY_CDE,
COALESCE(clean_string(SDT2.TRNSLT_FLD_VAL), 'Unk') AS sales_category_cde,--COALESCE(clean_string(TRNSLT_FLD_VAL), 'Unk')
SALES_CTG_EFF_DT::date AS SALES_CATEGORY_EFFECTIVE_DT,
DFLT_DIVD_PCT_EFF_DT::date AS DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
CLEAN_STRING(UND_PRCR_ID) AS UNDERWRITING_PROCESSOR_ID,
CLEAN_STRING(PARNT_GRP_NR_IDENT) AS PARENT_GROUP_NR_ID,
CLEAN_STRING(ERISA_PLN_CDE) AS ERISA_PLAN_CDE, 
ERISA_PLN_EFF_DT::DATE AS ERISA_PLAN_EFFECTIVE_DT,
EER_PD_EFF_DT::DATE AS EMPLOYER_PAID_EFFECTIVE_DT,
EER_PD_DCNT_EFF_DT ::DATE AS EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
CASE WHEN SAL_DED_IND = 'Y' THEN TRUE WHEN SAL_DED_IND = 'N' THEN FALSE   END AS SALARY_DEDUCTION_IND,
CASE WHEN MGI_IND = 'Y' THEN TRUE WHEN MGI_IND = 'N' THEN FALSE  END AS MGI_IND,
CASE WHEN ENDR_IND = 'Y' THEN TRUE WHEN ENDR_IND = 'N' THEN FALSE END AS ENDR_IND,
ENDR_DT::DATE  AS ENDR_DT,
CLEAN_STRING(VOLTAGEACCESS(SVC_AGT,'sorparty')) AS SERVICING_AGENT_ID,
CLEAN_STRING(BILL_MODE_CDE) AS SOURCE_BILLING_FREQUENCY_CDE,
COALESCE(clean_string(SDT3.TRNSLT_FLD_VAL), 'Unk')  AS BILLING_FREQUENCY_CDE,--COALESCE(CLEAN_STRING(TRNSLT_FLD_VAL), 'Unk')
CLEAN_STRING(BILL_TYP_CDE) AS source_bill_type_cde,
COALESCE(clean_string(SDT4.TRNSLT_FLD_VAL), 'Unk') AS BILLING_TYPE_CDE,--COALESCE(CLEAN_STRING(TRNSLT_FLD_VAL), 'Unk')
LEVEL_PCT::numeric(9,6) AS LEVEL_PCT,
CLEAN_STRING(CROSSOVER_YR) AS CROSSOVER_YEAR_TXT,
CASE WHEN emp_receive_divd = 'Y' THEN TRUE WHEN emp_receive_divd = 'N' THEN FALSE END AS EMPLOYEE_RECEIVE_DIVIDEND_IND,
CASE WHEN emp_receive_prem_ref = 'Y' THEN TRUE WHEN emp_receive_prem_ref = 'N' THEN FALSE END AS EMPLOYEE_RECEIVE_PREMIUM_IND,
CLEAN_STRING(SIC_CDE) AS SIC_CDE,
CLEAN_STRING(GRP_CLSF) AS GROUP_CLASS_CDE,
BEG_BILL_DT::DATE AS BEGIN_BILLING_DT,
CLEAN_STRING(SCND_DUE_DY) AS SECOND_DUE_DAY_TXT,
FALSE AS SOURCE_DELETE_IND,
'Dipms_'||GROUP_NBR AS PARTY_ID
FROM EXT_EDAP_STAGING.DI_DIPMS_EDW_DIPMS_GROUP_INFO SRC
LEFT JOIN 
(SELECT DISTINCT UPPER(SRC_FLD_VAL) AS SRC_FLD_VAL,CLEAN_STRING(TRNSLT_FLD_VAL) AS TRNSLT_FLD_VAL
FROM EDW_REF.SRC_DATA_TRNSLT WHERE UPPER(BTRIM(SRC_CDE)) = 'DIPMS' AND
UPPER(BTRIM(SRC_FLD_NM)) = 'INTERNAL_VALUE' AND  UPPER(BTRIM(TRNSLT_FLD_NM)) = 'MARKETING CAMPAIGN CATEGORY')SDT1
ON CLEAN_STRING(SRC.MKT_CDE)=SDT1.TRNSLT_FLD_VAL
LEFT JOIN 
(SELECT DISTINCT UPPER(SRC_FLD_VAL) AS SRC_FLD_VAL,CLEAN_STRING(TRNSLT_FLD_VAL) AS TRNSLT_FLD_VAL
FROM EDW_REF.SRC_DATA_TRNSLT WHERE UPPER(BTRIM(SRC_CDE)) = 'DIPMS' AND UPPER(BTRIM(SRC_FLD_NM)) = 'SALES_CTG_CDE ' 
AND UPPER(BTRIM(TRNSLT_FLD_NM)) = 'MARKET CATEGORY')SDT2
ON CLEAN_STRING(SRC.SALES_CTG_CDE)=SDT2.TRNSLT_FLD_VAL
LEFT JOIN 
(SELECT DISTINCT UPPER(SRC_FLD_VAL) AS SRC_FLD_VAL,CLEAN_STRING(TRNSLT_FLD_VAL) AS TRNSLT_FLD_VAL
FROM EDW_REF.SRC_DATA_TRNSLT WHERE UPPER(BTRIM(SRC_CDE)) = 'DIPMS' AND UPPER(BTRIM(SRC_FLD_NM)) = 'VALID_CHOICE 'AND 
UPPER(BTRIM(TRNSLT_FLD_NM)) = 'BILLING FREQUENCY')SDT3
ON CLEAN_STRING(SRC.BILL_MODE_CDE)=SDT3.TRNSLT_FLD_VAL
LEFT JOIN 
(SELECT DISTINCT UPPER(SRC_FLD_VAL) AS SRC_FLD_VAL,CLEAN_STRING(TRNSLT_FLD_VAL) AS TRNSLT_FLD_VAL
FROM EDW_REF.SRC_DATA_TRNSLT WHERE UPPER(BTRIM(SRC_CDE)) = 'DIPMS'AND UPPER(BTRIM(SRC_FLD_NM)) = 'BILLING_METHOD ' AND  
UPPER(BTRIM(TRNSLT_FLD_NM)) = 'BILLING METHOD')SDT4
ON CLEAN_STRING(SRC.BILL_TYP_CDE)=SDT4.TRNSLT_FLD_VAL
)Q_1
)Q_2
WHERE RNK=1;


DROP TABLE IF EXISTS PRE_WORK2;

CREATE LOCAL TEMPORARY TABLE PRE_WORK2 ON COMMIT PRESERVE ROWS AS 
SELECT *,ROW_NUMBER() OVER(PARTITION BY DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID ORDER BY BEGIN_DTM,END_DTM) AS RW_NUM
FROM PRE_WORK1 ;

DROP TABLE PRE_WORK;

CREATE LOCAL TEMPORARY TABLE PRE_WORK ON COMMIT PRESERVE ROWS AS 
SELECT * FROM EDW_WORK.party_dipms_dim_non_mastered_party WHERE 1<>1;

INSERT /*DIRECT*/ INTO PRE_WORK(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE,
GROUP_NBR,
SUB_GROUP_NBR,
GROUP_IPN_ID,
GROUP_TYPE_CDE,
GROUP_TYPE_EFFECTIVE_DT,
DISCOUNT_PCT,
BILL_AT_ISSUE_IND,
PLAN_TYPE_CDE,
maximum_benefit_paid_ind,
BUY_SELL_GROUP_TYPE_CDE,
LONG_TERM_CARE_IND,
DEFAULT_DIVIDEND_PCT,
GUARANTEED_STANDARD_ISSUE_IND,
EMPLOYER_PAID_PCT,
EMPLOYER_PAID_DISCOUNT_PCT,
PREEXISTING_CONDITION_LIMITATION_ID,
DUE_DT_ALIGNMENT_IND,
SERVICING_AGENCY_ID,
SOURCE_MARKET_CDE,
market_cde,
MARKET_CDE_EFFECTIVE_DT,
SOURCE_SALES_CATEGORY_CDE,
sales_category_cde,
SALES_CATEGORY_EFFECTIVE_DT,
DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
UNDERWRITING_PROCESSOR_ID,
PARENT_GROUP_NR_ID,
ERISA_PLAN_CDE,
ERISA_PLAN_EFFECTIVE_DT,
EMPLOYER_PAID_EFFECTIVE_DT,
EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
SALARY_DEDUCTION_IND,
MGI_IND,
ENDR_IND,
ENDR_DT,
SERVICING_AGENT_ID,
SOURCE_BILLING_FREQUENCY_CDE,
BILLING_FREQUENCY_CDE,
source_bill_type_cde,
BILLING_TYPE_CDE,
LEVEL_PCT,
CROSSOVER_YEAR_TXT,
EMPLOYEE_RECEIVE_DIVIDEND_IND,
EMPLOYEE_RECEIVE_PREMIUM_IND,
SIC_CDE,
GROUP_CLASS_CDE,
BEGIN_BILLING_DT,
SECOND_DUE_DAY_TXT
)
SELECT 
A.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
A.PARTY_ID,
A.FIRST_NM,
A.MIDDLE_NM,
A.LAST_NM,
A.FULL_NM,
A.BIRTH_DT,
A.GENDER_CDE,
A.SENSITIVE_PARTY_IND,
A.SOURCE_GENDER_CDE,
A.MARITAL_STATUS_CDE,
A.SOURCE_LOGIN_ID,
A.BEGIN_DT,
A.BEGIN_DTM,
A.ROW_PROCESS_DTM,
A.AUDIT_ID,
A.LOGICAL_DELETE_IND,
A.CHECK_SUM,
CASE WHEN A.RW_NUM<B.RW_NUM AND A.RW_NUM=B.RW_NUM-1 THEN FALSE ELSE A.CURRENT_ROW_IND END AS CURRENT_ROW_IND,
CASE WHEN A.RW_NUM<B.RW_NUM AND A.RW_NUM=B.RW_NUM-1 AND A.END_DT>B.BEGIN_DT - INTERVAL '1' DAY THEN 
B.BEGIN_DT- INTERVAL '1' DAY ELSE A.END_DT END AS END_DT,
CASE WHEN A.RW_NUM<B.RW_NUM AND A.RW_NUM=B.RW_NUM-1 AND A.END_DTM>B.BEGIN_DTM- INTERVAL '1' SECOND THEN               
B.BEGIN_DTM-INTERVAL '1' SECOND ELSE A.END_DTM END AS END_DTM,
A.SOURCE_SYSTEM_ID,
A.RESTRICTED_ROW_IND,
A.UPDATE_AUDIT_ID,
A.SOURCE_DELETE_IND,
A.PARTY_TYPE_CDE,
A.GROUP_NBR,
A.SUB_GROUP_NBR,
A.GROUP_IPN_ID,
A.GROUP_TYPE_CDE,
A.GROUP_TYPE_EFFECTIVE_DT,
A.DISCOUNT_PCT,
A.BILL_AT_ISSUE_IND,
A.PLAN_TYPE_CDE,
A.maximum_benefit_paid_ind,
A.BUY_SELL_GROUP_TYPE_CDE,
A.LONG_TERM_CARE_IND,
A.DEFAULT_DIVIDEND_PCT,
A.GUARANTEED_STANDARD_ISSUE_IND,
A.EMPLOYER_PAID_PCT,
A.EMPLOYER_PAID_DISCOUNT_PCT,
A.PREEXISTING_CONDITION_LIMITATION_ID,
A.DUE_DT_ALIGNMENT_IND,
A.SERVICING_AGENCY_ID,
A.SOURCE_MARKET_CDE,
A.market_cde,
A.MARKET_CDE_EFFECTIVE_DT,
A.SOURCE_SALES_CATEGORY_CDE,
A.sales_category_cde,
A.SALES_CATEGORY_EFFECTIVE_DT,
A.DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
A.UNDERWRITING_PROCESSOR_ID,
A.PARENT_GROUP_NR_ID,
A.ERISA_PLAN_CDE,
A.ERISA_PLAN_EFFECTIVE_DT,
A.EMPLOYER_PAID_EFFECTIVE_DT,
A.EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
A.SALARY_DEDUCTION_IND,
A.MGI_IND,
A.ENDR_IND,
A.ENDR_DT,
A.SERVICING_AGENT_ID,
A.SOURCE_BILLING_FREQUENCY_CDE,
A.BILLING_FREQUENCY_CDE,
A.source_bill_type_cde,
A.BILLING_TYPE_CDE,
A.LEVEL_PCT,
A.CROSSOVER_YEAR_TXT,
A.EMPLOYEE_RECEIVE_DIVIDEND_IND,
A.EMPLOYEE_RECEIVE_PREMIUM_IND,
A.SIC_CDE,
A.GROUP_CLASS_CDE,
A.BEGIN_BILLING_DT,
A.SECOND_DUE_DAY_TXT
FROM PRE_WORK2 A 
LEFT JOIN  
PRE_WORK2 B
ON A.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID=B.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID
AND A.RW_NUM=B.RW_NUM-1;

SELECT * FROM PRE_WORK;

DROP TABLE IF EXISTS TARGET;

CREATE LOCAL TEMPORARY TABLE TARGET ON COMMIT PRESERVE ROWS AS 
SELECT * FROM EDW_WORK.PARTY_DIPMS_DIM_NON_MASTERED_PARTY WHERE 1<>1;

INSERT INTO TARGET (dim_non_mastered_party_natural_key_hash_uuid,party_id,first_nm,last_nm,full_nm,birth_dt,gender_cde,middle_nm,government_id,marital_status_cde,source_gender_cde,sensitive_party_ind,source_marital_status_cde,agency_region_desc,source_login_id,party_type_cde,begin_dt,begin_dtm,row_process_dtm,audit_id,logical_delete_ind,check_sum,current_row_ind,end_dt,end_dtm,source_system_id,restricted_row_ind,row_sid,update_audit_id,source_delete_ind,source_party_created_dtm,party_sub_type_cde,mm_employee_ind,death_dt,deceased_ind,group_nbr,sub_group_nbr,group_ipn_id,group_type_cde,group_type_effective_dt,discount_pct,bill_at_issue_ind,plan_type_cde,maximum_benefit_paid_ind,buy_sell_group_type_cde,long_term_care_ind,default_dividend_pct,guaranteed_standard_issue_ind,employer_paid_pct,employer_paid_discount_pct,preexisting_condition_limitation_id,due_dt_alignment_ind,servicing_agency_id,source_market_cde,market_cde,market_cde_effective_dt,source_sales_category_cde,sales_category_cde,sales_category_effective_dt,default_dividend_pct_effective_dt,underwriting_processor_id,parent_group_nr_id,erisa_plan_cde,erisa_plan_effective_dt,employer_paid_effective_dt,employer_paid_discount_effective_dt,salary_deduction_ind,mgi_ind,endr_ind,endr_dt,servicing_agent_id,source_billing_frequency_cde,billing_frequency_cde,source_bill_type_cde,billing_type_cde,level_pct,crossover_year_txt,employee_receive_dividend_ind,employee_receive_premium_ind,sic_cde,group_class_cde,begin_billing_dt,second_due_day_txt) VALUES ('000011db-4cd4-49bd-8e2a-13b3ccb61f14','BZTER5vNhGqs','ziRjl','yLyGZYi',NULL,'1931-06-30','M',NULL,NULL,'Unk','M',false,NULL,NULL,NULL,'I','2015-12-10','2015-12-10 12:04:06.740','2022-03-24 04:19:58.963',-1,false,'99b25a5a-3dd0-0f17-59e1-00647a7d1d0f',true,'9999-12-31','9999-12-31 00:00:00.000','342',false,NULL,-1,false,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);

INSERT INTO TARGET (dim_non_mastered_party_natural_key_hash_uuid,party_id,first_nm,last_nm,full_nm,birth_dt,gender_cde,middle_nm,government_id,marital_status_cde,source_gender_cde,sensitive_party_ind,source_marital_status_cde,agency_region_desc,source_login_id,party_type_cde,begin_dt,begin_dtm,row_process_dtm,audit_id,logical_delete_ind,check_sum,current_row_ind,end_dt,end_dtm,source_system_id,restricted_row_ind,row_sid,update_audit_id,source_delete_ind,source_party_created_dtm,party_sub_type_cde,mm_employee_ind,death_dt,deceased_ind,group_nbr,sub_group_nbr,group_ipn_id,group_type_cde,group_type_effective_dt,discount_pct,bill_at_issue_ind,plan_type_cde,maximum_benefit_paid_ind,buy_sell_group_type_cde,long_term_care_ind,default_dividend_pct,guaranteed_standard_issue_ind,employer_paid_pct,employer_paid_discount_pct,preexisting_condition_limitation_id,due_dt_alignment_ind,servicing_agency_id,source_market_cde,market_cde,market_cde_effective_dt,source_sales_category_cde,sales_category_cde,sales_category_effective_dt,default_dividend_pct_effective_dt,underwriting_processor_id,parent_group_nr_id,erisa_plan_cde,erisa_plan_effective_dt,employer_paid_effective_dt,employer_paid_discount_effective_dt,salary_deduction_ind,mgi_ind,endr_ind,endr_dt,servicing_agent_id,source_billing_frequency_cde,billing_frequency_cde,source_bill_type_cde,billing_type_cde,level_pct,crossover_year_txt,employee_receive_dividend_ind,employee_receive_premium_ind,sic_cde,group_class_cde,begin_billing_dt,second_due_day_txt) VALUES ('0001d714-5299-b076-5348-906ffcde0838','ifvwKsU3v80HjxiADTURs','ekt','WpC',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'I','2015-12-07','2015-12-07 00:09:34.446','2022-03-24 04:58:22.393',-1,false,'b034c335-080d-f84f-bef4-e85e5d348836',true,'9999-12-31','9999-12-31 00:00:00.000','342',false,NULL,-1,false,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);

/* WORK TABLE - INSERTS 
 * 
 * this script is used to load the records that don't have a record in target
 * */

TRUNCATE TABLE EDW_WORK.PARTY_DIPMS_DIM_NON_MASTERED_PARTY;

INSERT /*DIRECT*/ INTO edw_work.party_dipms_dim_non_mastered_party(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE,
GROUP_NBR,
SUB_GROUP_NBR,
GROUP_IPN_ID,
GROUP_TYPE_CDE,
GROUP_TYPE_EFFECTIVE_DT,
DISCOUNT_PCT,
BILL_AT_ISSUE_IND,
PLAN_TYPE_CDE,
maximum_benefit_paid_ind,
BUY_SELL_GROUP_TYPE_CDE,
LONG_TERM_CARE_IND,
DEFAULT_DIVIDEND_PCT,
GUARANTEED_STANDARD_ISSUE_IND,
EMPLOYER_PAID_PCT,
EMPLOYER_PAID_DISCOUNT_PCT,
PREEXISTING_CONDITION_LIMITATION_ID,
DUE_DT_ALIGNMENT_IND,
SERVICING_AGENCY_ID,
SOURCE_MARKET_CDE,
market_cde,
MARKET_CDE_EFFECTIVE_DT,
SOURCE_SALES_CATEGORY_CDE,
sales_category_cde,
SALES_CATEGORY_EFFECTIVE_DT,
DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
UNDERWRITING_PROCESSOR_ID,
PARENT_GROUP_NR_ID,
ERISA_PLAN_CDE,
ERISA_PLAN_EFFECTIVE_DT,
EMPLOYER_PAID_EFFECTIVE_DT,
EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
SALARY_DEDUCTION_IND,
MGI_IND,
ENDR_IND,
ENDR_DT,
SERVICING_AGENT_ID,
SOURCE_BILLING_FREQUENCY_CDE,
BILLING_FREQUENCY_CDE,
source_bill_type_cde,
BILLING_TYPE_CDE,
LEVEL_PCT,
CROSSOVER_YEAR_TXT,
EMPLOYEE_RECEIVE_DIVIDEND_IND,
EMPLOYEE_RECEIVE_PREMIUM_IND,
SIC_CDE,
GROUP_CLASS_CDE,
BEGIN_BILLING_DT,
SECOND_DUE_DAY_TXT
)
SELECT 
SRC.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
SRC.PARTY_ID,
SRC.FIRST_NM,
SRC.MIDDLE_NM,
SRC.LAST_NM,
SRC.FULL_NM,
SRC.BIRTH_DT,
SRC.GENDER_CDE,
SRC.SENSITIVE_PARTY_IND,
SRC.SOURCE_GENDER_CDE,
SRC.MARITAL_STATUS_CDE,
SRC.SOURCE_LOGIN_ID,
SRC.BEGIN_DT,
SRC.BEGIN_DTM,
SRC.ROW_PROCESS_DTM,
SRC.AUDIT_ID,
SRC.LOGICAL_DELETE_IND,
SRC.CHECK_SUM,
SRC.CURRENT_ROW_IND,
SRC.END_DT,
SRC.END_DTM,
SRC.SOURCE_SYSTEM_ID,
SRC.RESTRICTED_ROW_IND,
SRC.UPDATE_AUDIT_ID,
SRC.SOURCE_DELETE_IND,
SRC.PARTY_TYPE_CDE,
SRC.GROUP_NBR,
SRC.SUB_GROUP_NBR,
SRC.GROUP_IPN_ID,
SRC.GROUP_TYPE_CDE,
SRC.GROUP_TYPE_EFFECTIVE_DT,
SRC.DISCOUNT_PCT,
SRC.BILL_AT_ISSUE_IND,
SRC.PLAN_TYPE_CDE,
SRC.maximum_benefit_paid_ind,
SRC.BUY_SELL_GROUP_TYPE_CDE,
SRC.LONG_TERM_CARE_IND,
SRC.DEFAULT_DIVIDEND_PCT,
SRC.GUARANTEED_STANDARD_ISSUE_IND,
SRC.EMPLOYER_PAID_PCT,
SRC.EMPLOYER_PAID_DISCOUNT_PCT,
SRC.PREEXISTING_CONDITION_LIMITATION_ID,
SRC.DUE_DT_ALIGNMENT_IND,
SRC.SERVICING_AGENCY_ID,
SRC.SOURCE_MARKET_CDE,
SRC.market_cde,
SRC.MARKET_CDE_EFFECTIVE_DT,
SRC.SOURCE_SALES_CATEGORY_CDE,
SRC.sales_category_cde,
SRC.SALES_CATEGORY_EFFECTIVE_DT,
SRC.DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
SRC.UNDERWRITING_PROCESSOR_ID,
SRC.PARENT_GROUP_NR_ID,
SRC.ERISA_PLAN_CDE,
SRC.ERISA_PLAN_EFFECTIVE_DT,
SRC.EMPLOYER_PAID_EFFECTIVE_DT,
SRC.EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
SRC.SALARY_DEDUCTION_IND,
SRC.MGI_IND,
SRC.ENDR_IND,
SRC.ENDR_DT,
SRC.SERVICING_AGENT_ID,
SRC.SOURCE_BILLING_FREQUENCY_CDE,
SRC.BILLING_FREQUENCY_CDE,
SRC.source_bill_type_cde,
SRC.BILLING_TYPE_CDE,
SRC.LEVEL_PCT,
SRC.CROSSOVER_YEAR_TXT,
SRC.EMPLOYEE_RECEIVE_DIVIDEND_IND,
SRC.EMPLOYEE_RECEIVE_PREMIUM_IND,
SRC.SIC_CDE,
SRC.GROUP_CLASS_CDE,
SRC.BEGIN_BILLING_DT,
SRC.SECOND_DUE_DAY_TXT
FROM 
PRE_WORK SRC 
LEFT JOIN 
TARGET TGT ON
SRC.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID=TGT.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID
WHERE TGT.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID IS NULL;

/* WORK TABLE - UPDATE TGT RECORD
 * 
 * This script finds records where the new record from the source has a different check_sum than the current target record or the record is being ended/deleted. 
 * The current record in the target will be ended since the source record will be inserted in the next step.
 * */


INSERT /*DIRECT*/ INTO edw_work.party_dipms_dim_non_mastered_party(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE,
GROUP_NBR,
SUB_GROUP_NBR,
GROUP_IPN_ID,
GROUP_TYPE_CDE,
GROUP_TYPE_EFFECTIVE_DT,
DISCOUNT_PCT,
BILL_AT_ISSUE_IND,
PLAN_TYPE_CDE,
maximum_benefit_paid_ind,
BUY_SELL_GROUP_TYPE_CDE,
LONG_TERM_CARE_IND,
DEFAULT_DIVIDEND_PCT,
GUARANTEED_STANDARD_ISSUE_IND,
EMPLOYER_PAID_PCT,
EMPLOYER_PAID_DISCOUNT_PCT,
PREEXISTING_CONDITION_LIMITATION_ID,
DUE_DT_ALIGNMENT_IND,
SERVICING_AGENCY_ID,
SOURCE_MARKET_CDE,
market_cde,
MARKET_CDE_EFFECTIVE_DT,
SOURCE_SALES_CATEGORY_CDE,
sales_category_cde,
SALES_CATEGORY_EFFECTIVE_DT,
DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
UNDERWRITING_PROCESSOR_ID,
PARENT_GROUP_NR_ID,
ERISA_PLAN_CDE,
ERISA_PLAN_EFFECTIVE_DT,
EMPLOYER_PAID_EFFECTIVE_DT,
EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
SALARY_DEDUCTION_IND,
MGI_IND,
ENDR_IND,
ENDR_DT,
SERVICING_AGENT_ID,
SOURCE_BILLING_FREQUENCY_CDE,
BILLING_FREQUENCY_CDE,
source_bill_type_cde,
BILLING_TYPE_CDE,
LEVEL_PCT,
CROSSOVER_YEAR_TXT,
EMPLOYEE_RECEIVE_DIVIDEND_IND,
EMPLOYEE_RECEIVE_PREMIUM_IND,
SIC_CDE,
GROUP_CLASS_CDE,
BEGIN_BILLING_DT,
SECOND_DUE_DAY_TXT
)
SELECT 
TGT.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
TGT.PARTY_ID,
TGT.FIRST_NM,
TGT.MIDDLE_NM,
TGT.LAST_NM,
TGT.FULL_NM,
TGT.BIRTH_DT,
TGT.GENDER_CDE,
TGT.SENSITIVE_PARTY_IND,
TGT.SOURCE_GENDER_CDE,
TGT.MARITAL_STATUS_CDE,
TGT.SOURCE_LOGIN_ID,
TGT.BEGIN_DT,
TGT.BEGIN_DTM,
CURRENT_TIMESTAMP::TIMESTAMP(6)	AS ROW_PROCESS_DTM,
TGT.AUDIT_ID,
TGT.LOGICAL_DELETE_IND,
TGT.CHECK_SUM,
TGT.CURRENT_ROW_IND, --RECORD NOT ENDED
SRC.BEGIN_DT - INTERVAL '1' DAY AS END_DT,
SRC.BEGIN_DTM - INTERVAL '1' SECOND AS END_DTM,
TGT.SOURCE_SYSTEM_ID,
TGT.RESTRICTED_ROW_IND,
TGT.UPDATE_AUDIT_ID,
TGT.SOURCE_DELETE_IND,
TGT.PARTY_TYPE_CDE,
TGT.GROUP_NBR,
TGT.SUB_GROUP_NBR,
TGT.GROUP_IPN_ID,
TGT.GROUP_TYPE_CDE,
TGT.GROUP_TYPE_EFFECTIVE_DT,
TGT.DISCOUNT_PCT,
TGT.BILL_AT_ISSUE_IND,
TGT.PLAN_TYPE_CDE,
TGT.maximum_benefit_paid_ind,
TGT.BUY_SELL_GROUP_TYPE_CDE,
TGT.LONG_TERM_CARE_IND,
TGT.DEFAULT_DIVIDEND_PCT,
TGT.GUARANTEED_STANDARD_ISSUE_IND,
TGT.EMPLOYER_PAID_PCT,
TGT.EMPLOYER_PAID_DISCOUNT_PCT,
TGT.PREEXISTING_CONDITION_LIMITATION_ID,
TGT.DUE_DT_ALIGNMENT_IND,
TGT.SERVICING_AGENCY_ID,
TGT.SOURCE_MARKET_CDE,
TGT.market_cde,
TGT.MARKET_CDE_EFFECTIVE_DT,
TGT.SOURCE_SALES_CATEGORY_CDE,
TGT.sales_category_cde,
TGT.SALES_CATEGORY_EFFECTIVE_DT,
TGT.DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
TGT.UNDERWRITING_PROCESSOR_ID,
TGT.PARENT_GROUP_NR_ID,
TGT.ERISA_PLAN_CDE,
TGT.ERISA_PLAN_EFFECTIVE_DT,
TGT.EMPLOYER_PAID_EFFECTIVE_DT,
TGT.EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
TGT.SALARY_DEDUCTION_IND,
TGT.MGI_IND,
TGT.ENDR_IND,
TGT.ENDR_DT,
TGT.SERVICING_AGENT_ID,
TGT.SOURCE_BILLING_FREQUENCY_CDE,
TGT.BILLING_FREQUENCY_CDE,
TGT.source_bill_type_cde,
TGT.BILLING_TYPE_CDE,
TGT.LEVEL_PCT,
TGT.CROSSOVER_YEAR_TXT,
TGT.EMPLOYEE_RECEIVE_DIVIDEND_IND,
TGT.EMPLOYEE_RECEIVE_PREMIUM_IND,
TGT.SIC_CDE,
TGT.GROUP_CLASS_CDE,
TGT.BEGIN_BILLING_DT,
TGT.SECOND_DUE_DAY_TXT
FROM PRE_WORK SRC
LEFT JOIN 
TARGET TGT
ON SRC.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID=TGT.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID
AND TGT.CURRENT_ROW_IND = TRUE
WHERE (SRC.CHECK_SUM <> TGT.CHECK_SUM);


/* WORK TABLE - UPDATE WHERE RECORD ALREADY EXISTS IN TARGET 
 *  
 * */
INSERT /*DIRECT*/ INTO edw_work.party_dipms_dim_non_mastered_party(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE,
GROUP_NBR,
SUB_GROUP_NBR,
GROUP_IPN_ID,
GROUP_TYPE_CDE,
GROUP_TYPE_EFFECTIVE_DT,
DISCOUNT_PCT,
BILL_AT_ISSUE_IND,
PLAN_TYPE_CDE,
maximum_benefit_paid_ind,
BUY_SELL_GROUP_TYPE_CDE,
LONG_TERM_CARE_IND,
DEFAULT_DIVIDEND_PCT,
GUARANTEED_STANDARD_ISSUE_IND,
EMPLOYER_PAID_PCT,
EMPLOYER_PAID_DISCOUNT_PCT,
PREEXISTING_CONDITION_LIMITATION_ID,
DUE_DT_ALIGNMENT_IND,
SERVICING_AGENCY_ID,
SOURCE_MARKET_CDE,
market_cde,
MARKET_CDE_EFFECTIVE_DT,
SOURCE_SALES_CATEGORY_CDE,
sales_category_cde,
SALES_CATEGORY_EFFECTIVE_DT,
DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
UNDERWRITING_PROCESSOR_ID,
PARENT_GROUP_NR_ID,
ERISA_PLAN_CDE,
ERISA_PLAN_EFFECTIVE_DT,
EMPLOYER_PAID_EFFECTIVE_DT,
EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
SALARY_DEDUCTION_IND,
MGI_IND,
ENDR_IND,
ENDR_DT,
SERVICING_AGENT_ID,
SOURCE_BILLING_FREQUENCY_CDE,
BILLING_FREQUENCY_CDE,
source_bill_type_cde,
BILLING_TYPE_CDE,
LEVEL_PCT,
CROSSOVER_YEAR_TXT,
EMPLOYEE_RECEIVE_DIVIDEND_IND,
EMPLOYEE_RECEIVE_PREMIUM_IND,
SIC_CDE,
GROUP_CLASS_CDE,
BEGIN_BILLING_DT,
SECOND_DUE_DAY_TXT
)
SELECT 
SRC.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
SRC.PARTY_ID,
SRC.FIRST_NM,
SRC.MIDDLE_NM,
SRC.LAST_NM,
SRC.FULL_NM,
SRC.BIRTH_DT,
SRC.GENDER_CDE,
SRC.SENSITIVE_PARTY_IND,
SRC.SOURCE_GENDER_CDE,
SRC.MARITAL_STATUS_CDE,
SRC.SOURCE_LOGIN_ID,
SRC.BEGIN_DT,
SRC.BEGIN_DTM,
SRC.ROW_PROCESS_DTM,
SRC.AUDIT_ID,
SRC.LOGICAL_DELETE_IND,
SRC.CHECK_SUM,
SRC.CURRENT_ROW_IND,
SRC.END_DT,
SRC.END_DTM,
SRC.SOURCE_SYSTEM_ID,
SRC.RESTRICTED_ROW_IND,
SRC.UPDATE_AUDIT_ID,
SRC.SOURCE_DELETE_IND,
SRC.PARTY_TYPE_CDE,
SRC.GROUP_NBR,
SRC.SUB_GROUP_NBR,
SRC.GROUP_IPN_ID,
SRC.GROUP_TYPE_CDE,
SRC.GROUP_TYPE_EFFECTIVE_DT,
SRC.DISCOUNT_PCT,
SRC.BILL_AT_ISSUE_IND,
SRC.PLAN_TYPE_CDE,
SRC.maximum_benefit_paid_ind,
SRC.BUY_SELL_GROUP_TYPE_CDE,
SRC.LONG_TERM_CARE_IND,
SRC.DEFAULT_DIVIDEND_PCT,
SRC.GUARANTEED_STANDARD_ISSUE_IND,
SRC.EMPLOYER_PAID_PCT,
SRC.EMPLOYER_PAID_DISCOUNT_PCT,
SRC.PREEXISTING_CONDITION_LIMITATION_ID,
SRC.DUE_DT_ALIGNMENT_IND,
SRC.SERVICING_AGENCY_ID,
SRC.SOURCE_MARKET_CDE,
SRC.market_cde,
SRC.MARKET_CDE_EFFECTIVE_DT,
SRC.SOURCE_SALES_CATEGORY_CDE,
SRC.sales_category_cde,
SRC.SALES_CATEGORY_EFFECTIVE_DT,
SRC.DEFAULT_DIVIDEND_PCT_EFFECTIVE_DT,
SRC.UNDERWRITING_PROCESSOR_ID,
SRC.PARENT_GROUP_NR_ID,
SRC.ERISA_PLAN_CDE,
SRC.ERISA_PLAN_EFFECTIVE_DT,
SRC.EMPLOYER_PAID_EFFECTIVE_DT,
SRC.EMPLOYER_PAID_DISCOUNT_EFFECTIVE_DT,
SRC.SALARY_DEDUCTION_IND,
SRC.MGI_IND,
SRC.ENDR_IND,
SRC.ENDR_DT,
SRC.SERVICING_AGENT_ID,
SRC.SOURCE_BILLING_FREQUENCY_CDE,
SRC.BILLING_FREQUENCY_CDE,
SRC.source_bill_type_cde,
SRC.BILLING_TYPE_CDE,
SRC.LEVEL_PCT,
SRC.CROSSOVER_YEAR_TXT,
SRC.EMPLOYEE_RECEIVE_DIVIDEND_IND,
SRC.EMPLOYEE_RECEIVE_PREMIUM_IND,
SRC.SIC_CDE,
SRC.GROUP_CLASS_CDE,
SRC.BEGIN_BILLING_DT,
SRC.SECOND_DUE_DAY_TXT
FROM 
PRE_WORK SRC
LEFT JOIN 
TARGET TGT
ON SRC.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID=TGT.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID
AND TGT.CURRENT_ROW_IND = TRUE
WHERE (--handle when there is a current target record and either the check_sum has changed or record is being logically deleted.
TGT.ROW_SID IS NULL 
AND 
SRC.DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID IN (SELECT DISTINCT DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID FROM
TARGET TGT1)
)
OR 
(TGT.ROW_SID IS NOT NULL  AND SRC.CHECK_SUM<>TGT.CHECK_SUM);
