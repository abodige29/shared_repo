DROP TABLE IF EXISTS party_dipms_dim_non_mastered_party;

CREATE LOCAL TEMPORARY TABLE party_dipms_dim_non_mastered_party
(
dim_non_mastered_party_natural_key_hash_uuid uuid NOT NULL,
party_id varchar(200) NOT NULL,
first_nm varchar(100),
last_nm varchar(100),
full_nm varchar(300),
birth_dt varchar(50),
gender_cde varchar(50),
middle_nm varchar(100),
government_id varchar(50),
marital_status_cde varchar(50),
source_gender_cde varchar(50),
sensitive_party_ind boolean,
source_marital_status_cde varchar(50),
agency_region_desc varchar(200),
source_login_id varchar(50),
party_type_cde varchar(50),
begin_dt date NOT NULL DEFAULT '0001-01-01'::date,
begin_dtm timestamp(6) NOT NULL,
row_process_dtm timestamp(6) NOT NULL,
audit_id int NOT NULL DEFAULT 0,
logical_delete_ind boolean NOT NULL DEFAULT false,
check_sum uuid NOT NULL,
current_row_ind boolean NOT NULL DEFAULT true,
end_dt date NOT NULL DEFAULT '9999-12-31'::date,
end_dtm timestamp(6) NOT NULL,
source_system_id varchar(50) NOT NULL,
restricted_row_ind boolean NOT NULL DEFAULT false,
row_sid INT ,
update_audit_id int NOT NULL DEFAULT 0,
source_delete_ind boolean NOT NULL,
source_party_created_dtm timestamp(6),
party_sub_type_cde varchar(50),
mm_employee_ind boolean,
death_dt date,
deceased_ind boolean,
group_nbr varchar(50),
sub_group_nbr varchar(50),
group_ipn_id varchar(50),
group_type_cde varchar(50),
group_type_effective_dt date,
discount_pct numeric(9,6),
bill_at_issue_ind boolean,
plan_type_cde varchar(50),
maximum_benefit_paid_ind boolean,
buy_sell_group_type_cde varchar(50),
long_term_care_ind boolean,
default_dividend_pct numeric(9,6),
guaranteed_standard_issue_ind boolean,
employer_paid_pct numeric(9,6),
employer_paid_discount_pct numeric(9,6),
preexisting_condition_limitation_id varchar(50),
due_dt_alignment_ind boolean,
servicing_agency_id varchar(50),
source_market_cde varchar(50),
market_cde varchar(50),
market_cde_effective_dt date,
source_sales_category_cde varchar(50),
sales_category_cde varchar(50),
sales_category_effective_dt date,
default_dividend_pct_effective_dt date,
underwriting_processor_id varchar(50),
parent_group_nr_id varchar(50),
erisa_plan_cde varchar(50),
erisa_plan_effective_dt date,
employer_paid_effective_dt date,
employer_paid_discount_effective_dt date,
salary_deduction_ind boolean,
mgi_ind boolean,
endr_ind boolean,
endr_dt date,
servicing_agent_id varchar(50),
source_billing_frequency_cde varchar(50),
billing_frequency_cde varchar(50),
source_bill_type_cde varchar(50),
billing_type_cde varchar(50),
level_pct numeric(9,6),
crossover_year_txt varchar(25),
employee_receive_dividend_ind boolean,
employee_receive_premium_ind boolean,
sic_cde varchar(25),
group_class_cde varchar(50),
begin_billing_dt date,
second_due_day_txt varchar(25),
CONSTRAINT C_PRIMARY PRIMARY KEY (row_sid) DISABLED
);


DROP TABLE IF EXISTS PRE_WORK1;

CREATE LOCAL TEMPORARY TABLE PRE_WORK1 ON COMMIT PRESERVE ROWS  AS 
SELECT * FROM PARTY_DIPMS_DIM_NON_MASTERED_PARTY WHERE 1<>1;




INSERT  /*DIRECT*/ INTO PRE_WORK1(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,MARITAL_STATUS_CDE,SOURCE_LOGIN_ID,
GOVERNMENT_ID,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,SOURCE_MARITAL_STATUS_CDE)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE FROM (
SELECT 
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(FIRST_NM,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
VOLTAGEPROTECT(FULL_NM,'name') AS FULL_NM,
VOLTAGEPROTECT(BIRTH_DT,'dob_char') AS BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
NULL AS SOURCE_LOGIN_ID,
VOLTAGEPROTECT(GOVERNMENT_ID,'ssn_char') AS GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
:AUDIT_ID AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
END_DT,
END_DTM,
'77' AS  SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
:AUDIT_ID AS UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER(PARTITION BY PARTY_ID,FIRST_NM,LAST_NM,FULL_NM,BIRTH_DT,
GENDER_CDE,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,MARITAL_STATUS_CDE,SOURCE_MARITAL_STATUS_CDE,GOVERNMENT_ID,
SOURCE_DELETE_IND ORDER BY BEGIN_DTM,END_DTM DESC) AS RNK FROM (
SELECT
CLEAN_STRING(VOLTAGEACCESS(PARTY_ID,'sorparty')) AS PARTY_ID,
CLEAN_STRING(VOLTAGEACCESS(FIRSTNAME,'name')) AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(LAST_NAME,'name')) AS LAST_NM,
CLEAN_STRING(VOLTAGEACCESS(ENTITY_NAME,'name')) AS FULL_NM,
CLEAN_STRING(VOLTAGEACCESS(DATE_OF_BIRTH,'dob_char'))   AS BIRTH_DT,
COALESCE(CLEAN_STRING(GENDER), 'Unk') AS GENDER_CDE,
CASE WHEN SENSITIVE = 'Y' THEN TRUE ELSE FALSE END AS SENSITIVE_PARTY_IND,
CLEAN_STRING(GENDER) AS SOURCE_GENDER_CDE,
COALESCE(CLEAN_STRING(MARRIAGE_STATUS), 'Unk') AS MARITAL_STATUS_CDE,
CLEAN_STRING(MARRIAGE_STATUS) AS SOURCE_MARITAL_STATUS_CDE,
CLEAN_STRING(VOLTAGEACCESS(GOVERNMENT_ID,'ssn_char')) AS GOVERNMENT_ID,
LST_UPDT_DT::DATE AS BEGIN_DT,
LST_UPDT_DT::TIMESTAMP(6) AS BEGIN_DTM,
'9999-12-31'::DATE  AS END_DT,
'9999-12-31'::TIMESTAMP(6) AS END_DTM,
CASE WHEN CHANGE_MODE = 'DELETE' THEN TRUE ELSE FALSE END AS SOURCE_DELETE_IND
FROM 
EXT_EDAP_STAGING.DI_DIPMS_EDW_DIPMS_PARTYINSURED
)Q_1
)Q_2
WHERE RNK=1;



DROP TABLE IF EXISTS PRE_WORK2;

CREATE LOCAL TEMPORARY TABLE PRE_WORK2 ON COMMIT PRESERVE ROWS  AS 
SELECT * FROM PARTY_DIPMS_DIM_NON_MASTERED_PARTY WHERE 1<>1;


INSERT  /*DIRECT*/ INTO PRE_WORK2(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,MARITAL_STATUS_CDE,SOURCE_LOGIN_ID,
GOVERNMENT_ID,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,SOURCE_MARITAL_STATUS_CDE)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE FROM (
SELECT 
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(FIRST_NM,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
VOLTAGEPROTECT(FULL_NM,'name') AS FULL_NM,
VOLTAGEPROTECT(BIRTH_DT,'dob_char') AS BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
NULL AS SOURCE_LOGIN_ID,
VOLTAGEPROTECT(GOVERNMENT_ID,'ssn_char') AS GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
:AUDIT_ID AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
END_DT,
END_DTM,
'77' AS  SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
:AUDIT_ID AS UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER(PARTITION BY PARTY_ID,FIRST_NM,LAST_NM,FULL_NM,BIRTH_DT,
GENDER_CDE,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,MARITAL_STATUS_CDE,SOURCE_MARITAL_STATUS_CDE,GOVERNMENT_ID,
SOURCE_DELETE_IND ORDER BY BEGIN_DTM,END_DTM DESC) AS RNK FROM (
SELECT
CLEAN_STRING(VOLTAGEACCESS(PARTY_ID,'sorparty')) AS PARTY_ID,
CLEAN_STRING(VOLTAGEACCESS(FIRSTNAME,'name')) AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(LAST_NAME,'name')) AS LAST_NM,
CLEAN_STRING(VOLTAGEACCESS(ENTITY_NAME,'name')) AS FULL_NM,
CLEAN_STRING(VOLTAGEACCESS(DATE_OF_BIRTH,'dob_char'))   AS BIRTH_DT,
COALESCE(CLEAN_STRING(GENDER), 'Unk') AS GENDER_CDE,
CASE WHEN SENSITIVE = 'Y' THEN TRUE ELSE FALSE END AS SENSITIVE_PARTY_IND,
CLEAN_STRING(GENDER) AS SOURCE_GENDER_CDE,
COALESCE(CLEAN_STRING(MARRIAGE_STATUS), 'Unk') AS MARITAL_STATUS_CDE,
CLEAN_STRING(MARRIAGE_STATUS) AS SOURCE_MARITAL_STATUS_CDE,
CLEAN_STRING(VOLTAGEACCESS(GOVERNMENT_ID,'ssn_char')) AS GOVERNMENT_ID,
LST_UPDT_DT::DATE AS BEGIN_DT,
LST_UPDT_DT::TIMESTAMP(6) AS BEGIN_DTM,
'9999-12-31'::DATE  AS END_DT,
'9999-12-31'::TIMESTAMP(6) AS END_DTM,
CASE WHEN CHANGE_MODE = 'DELETE' THEN TRUE ELSE FALSE END AS SOURCE_DELETE_IND
FROM 
EXT_EDAP_STAGING.DI_DIPMS_EDW_DIPMS_PARTYOWNER
)Q_1
)Q_2
WHERE RNK=1;

DROP TABLE IF EXISTS PRE_WORK3;

CREATE LOCAL TEMPORARY TABLE PRE_WORK3 ON COMMIT PRESERVE ROWS  AS 
SELECT * FROM PARTY_DIPMS_DIM_NON_MASTERED_PARTY WHERE 1<>1;


INSERT  /*DIRECT*/ INTO PRE_WORK3(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,MARITAL_STATUS_CDE,SOURCE_LOGIN_ID,
GOVERNMENT_ID,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,SOURCE_MARITAL_STATUS_CDE)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE FROM (
SELECT 
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(FIRST_NM,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
VOLTAGEPROTECT(FULL_NM,'name') AS FULL_NM,
NULL AS BIRTH_DT,
NULL AS GENDER_CDE,
NULL AS SENSITIVE_PARTY_IND,
NULL AS SOURCE_GENDER_CDE,
NULL AS MARITAL_STATUS_CDE,
NULL AS SOURCE_MARITAL_STATUS_CDE,
NULL AS SOURCE_LOGIN_ID,
NULL AS GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
:AUDIT_ID AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
END_DT,
END_DTM,
'77' AS  SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
:AUDIT_ID AS UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER(PARTITION BY PARTY_ID,FIRST_NM,LAST_NM,FULL_NM,
SENSITIVE_PARTY_IND,SOURCE_DELETE_IND ORDER BY BEGIN_DTM,END_DTM DESC) AS RNK FROM (
SELECT
CLEAN_STRING(VOLTAGEACCESS(PARTY_ID,'sorparty')) AS PARTY_ID,
CLEAN_STRING(VOLTAGEACCESS(FIRST_NAME,'name')) AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(LAST_NAME,'name')) AS LAST_NM,
CLEAN_STRING(VOLTAGEACCESS(ENTITY_NAME,'name')) AS FULL_NM,
LST_UPDT_DT::DATE AS BEGIN_DT,
LST_UPDT_DT::TIMESTAMP(6) AS BEGIN_DTM,
'9999-12-31'::DATE  AS END_DT,
'9999-12-31'::TIMESTAMP(6) AS END_DTM,
CASE WHEN CHANGE_MODE = 'DELETE' THEN TRUE ELSE FALSE END AS SOURCE_DELETE_IND
FROM 
EXT_EDAP_STAGING.DI_DIPMS_EDW_DIPMS_PARTYPAYOR
)Q_1
)Q_2
WHERE RNK=1;


DROP TABLE IF EXISTS PRE_WORK4;

CREATE LOCAL TEMPORARY TABLE PRE_WORK4 ON COMMIT PRESERVE ROWS  AS 
SELECT * FROM PARTY_DIPMS_DIM_NON_MASTERED_PARTY WHERE 1<>1;


INSERT  /*DIRECT*/ INTO PRE_WORK4(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,MARITAL_STATUS_CDE,SOURCE_LOGIN_ID,
GOVERNMENT_ID,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,SOURCE_MARITAL_STATUS_CDE)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE FROM (
SELECT 
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(FIRST_NM,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
NULL AS FULL_NM,
NULL AS BIRTH_DT,
NULL AS GENDER_CDE,
NULL AS SENSITIVE_PARTY_IND,
NULL AS SOURCE_GENDER_CDE,
NULL AS MARITAL_STATUS_CDE,
NULL AS SOURCE_MARITAL_STATUS_CDE,
NULL AS SOURCE_LOGIN_ID,
NULL AS GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
:AUDIT_ID AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
END_DT,
END_DTM,
'77' AS  SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
:AUDIT_ID AS UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER(PARTITION BY PARTY_ID,FIRST_NM,LAST_NM,
SOURCE_DELETE_IND ORDER BY BEGIN_DTM,END_DTM DESC) AS RNK FROM (
SELECT
CLEAN_STRING(VOLTAGEACCESS(FIRST_NAME,'name')) AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(LAST_NAME,'name')) AS LAST_NM,
CLEAN_STRING(VOLTAGEACCESS(CASE_ID,'account_char')) AS CAS_ID,
LST_UPDT_DT::DATE AS BEGIN_DT,
LST_UPDT_DT::TIMESTAMP(6) AS BEGIN_DTM,
'9999-12-31'::DATE  AS END_DT,
'9999-12-31'::TIMESTAMP(6) AS END_DTM,
 FALSE  AS SOURCE_DELETE_IND,
CLEAN_STRING(POLICY_NUMBER)||CAS_ID||FIRST_NM||LAST_NM AS PARTY_ID
FROM 
EXT_EDAP_STAGING.DI_DIPMS_EDW_DIPMS_PARTYBENEFICIARY
)Q_1
)Q_2
WHERE RNK=1;


DROP TABLE IF EXISTS PRE_WORK5;

CREATE LOCAL TEMPORARY TABLE PRE_WORK5 ON COMMIT PRESERVE ROWS  AS 
SELECT * FROM PARTY_DIPMS_DIM_NON_MASTERED_PARTY WHERE 1<>1;


INSERT  /*DIRECT*/ INTO PRE_WORK5(
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE
)
SELECT 
DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
PARTY_ID,
FIRST_NM,
MIDDLE_NM,
LAST_NM,
FULL_NM,
BIRTH_DT,
GENDER_CDE,
SENSITIVE_PARTY_IND,
SOURCE_GENDER_CDE,
MARITAL_STATUS_CDE,
SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
ROW_PROCESS_DTM,
AUDIT_ID,
LOGICAL_DELETE_IND,
UUID_GEN(SOURCE_DELETE_IND,FIRST_NM,MIDDLE_NM,LAST_NM,FULL_NM,BIRTH_DT,GENDER_CDE,MARITAL_STATUS_CDE,SOURCE_LOGIN_ID,
GOVERNMENT_ID,SENSITIVE_PARTY_IND,SOURCE_GENDER_CDE,SOURCE_MARITAL_STATUS_CDE)::UUID AS CHECK_SUM,
CURRENT_ROW_IND,
END_DT,
END_DTM,
SOURCE_SYSTEM_ID,
RESTRICTED_ROW_IND,
UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
PARTY_TYPE_CDE FROM (
SELECT 
UUID_GEN(PARTY_ID)::UUID AS DIM_NON_MASTERED_PARTY_NATURAL_KEY_HASH_UUID,
VOLTAGEPROTECT(PARTY_ID,'sorparty') AS PARTY_ID,
VOLTAGEPROTECT(FIRST_NM,'name') AS FIRST_NM,
NULL AS MIDDLE_NM,
VOLTAGEPROTECT(LAST_NM,'name') AS LAST_NM,
NULL AS FULL_NM,
NULL AS BIRTH_DT,
NULL AS GENDER_CDE,
NULL AS SENSITIVE_PARTY_IND,
NULL AS SOURCE_GENDER_CDE,
NULL AS MARITAL_STATUS_CDE,
NULL AS SOURCE_MARITAL_STATUS_CDE,
SOURCE_LOGIN_ID,
NULL AS GOVERNMENT_ID,
BEGIN_DT,
BEGIN_DTM,
CURRENT_TIMESTAMP(6) AS ROW_PROCESS_DTM,
:AUDIT_ID AS AUDIT_ID,
FALSE AS LOGICAL_DELETE_IND,
TRUE AS CURRENT_ROW_IND,
END_DT,
END_DTM,
'77' AS  SOURCE_SYSTEM_ID,
FALSE AS RESTRICTED_ROW_IND,
:AUDIT_ID AS UPDATE_AUDIT_ID,
SOURCE_DELETE_IND,
'I' AS PARTY_TYPE_CDE,
ROW_NUMBER() OVER(PARTITION BY PARTY_ID,FIRST_NM,LAST_NM,SOURCE_LOGIN_ID,
SOURCE_DELETE_IND ORDER BY BEGIN_DTM,END_DTM DESC) AS RNK FROM (
SELECT
CLEAN_STRING(VOLTAGEACCESS(FIRST_NAME,'name')) AS FIRST_NM,
CLEAN_STRING(VOLTAGEACCESS(LAST_NAME,'name')) AS LAST_NM,
CLEAN_STRING(LOGINID) AS SOURCE_LOGIN_ID,
LST_UPDT_DT::DATE AS BEGIN_DT,
LST_UPDT_DT::TIMESTAMP(6) AS BEGIN_DTM,
'9999-12-31'::DATE  AS END_DT,
'9999-12-31'::TIMESTAMP(6) AS END_DTM,
FALSE AS SOURCE_DELETE_IND,
FIRST_NM||LAST_NM||SOURCE_LOGIN_ID AS PARTY_ID
FROM 
EXT_EDAP_STAGING.DI_DIPMS_EDW_DIPMS_PARTY_CASE_OWNER
)Q_1
)Q_2
WHERE RNK=1;





