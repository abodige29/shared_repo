/*
    FileName: party_idm_br_hier_ofc.sql
    Author: mm14295
    SUBJECT AREA : Party
    Table_Name :party_idm_br_hier_ofc
    SOURCE: IDM
    Teradata Source Code: 15                        
    Create Date:2022-02-01
        
    ===============================================================================================================
    Version/JIRA Story#     Created By     Last_Modified_Date   Description
    ---------------------------------------------------------------------------------------------------------------
    JIRA 3462               Party-Tier2         05/17           First Version Tier-2 
    ------------------------------------------------------------------------------------------------------------------
*/ 


------- load decrypted data into temp -----------

DROP TABLE IF EXISTS TEMP_IDM_BR_HIER_OFC;

CREATE LOCAL TEMPORARY TABLE TEMP_IDM_BR_HIER_OFC ON COMMIT PRESERVE ROWS AS
/* +DIRECT */
SELECT DISTINCT 
 VOLTAGEACCESS(OFC_ID,'sorparty')    AS OFC_ID --changed here
,VOLTAGEACCESS(OFC_NM,'name')                     AS OFC_NM
,VOLTAGEACCESS(AD_1,'address')                    AS AD_1
,VOLTAGEACCESS(AD_2,'address')                    AS AD_2
,VOLTAGEACCESS(CITY,'city')                       AS CITY
,VOLTAGEACCESS(ST,'state')                        AS ST
,VOLTAGEACCESS(ZIP,'zipcode')                     AS ZIP
,CTRY                                             
,VOLTAGEACCESS(TELNR,'phone_char')                AS TELNR
,WBST                                             
,VOLTAGEACCESS(EMAIL,'email')                     AS EMAIL
,VOLTAGEACCESS(RGN_NM,'name')                     AS RGN_NM
,DSTRB_CHANNEL
,DSTRB_DESC
,PROCESS_IND
FROM EDW_STAGING.IDM_BR_HIER_OFC_CDC;

SELECT ANALYZE_STATISTICS('TEMP_IDM_BR_HIER_OFC');

-------- pdcr dim_party_natural_key into temp table for lookup------------

DROP TABLE IF EXISTS TEMP_XREF_PDCR;

CREATE LOCAL TEMPORARY TABLE TEMP_XREF_PDCR ON COMMIT PRESERVE ROWS AS
/* +DIRECT */
SELECT DISTINCT 
 XREF.DIM_PARTY_NATURAL_KEY_HASH_UUID
,XREF.SOR_PARTY_ID
,VOLTAGEACCESS(XREF.SOR_PARTY_ID,'sorparty') AS SOR_PARTY_ID_DECRYP
FROM EDW_STAGING.IDM_BR_HIER_OFC_CDC SRC
JOIN EDW.PARTY_MASTER_OF_MASTERS_XREF XREF
ON VOLTAGEACCESS(OFC_ID,'sorparty')=VOLTAGEACCESS(XREF.SOR_PARTY_ID,'sorparty') --changed here
WHERE XREF.PARTY_ID_TYPE_CDE = 'Bp_id' AND XREF.CURRENT_ROW_IND AND XREF.LOGICAL_DELETE_IND = FALSE
ORDER BY SOR_PARTY_ID_DECRYP,DIM_PARTY_NATURAL_KEY_HASH_UUID;

SELECT ANALYZE_STATISTICS('TEMP_XREF_PDCR');

-------- agency dim_party_natural_key into temp table for lookup------------

DROP TABLE IF EXISTS TEMP_XREF_AGENCY;

CREATE LOCAL TEMPORARY TABLE TEMP_XREF_AGENCY ON COMMIT PRESERVE ROWS AS
/* +DIRECT */
SELECT DISTINCT 
 XREF.DIM_PARTY_NATURAL_KEY_HASH_UUID
,XREF.SOR_PARTY_ID
,VOLTAGEACCESS(XREF.SOR_PARTY_ID,'sorparty') AS SOR_PARTY_ID_DECRYP
FROM EDW_STAGING.IDM_BR_HIER_OFC_CDC SRC
JOIN EDW.PARTY_MASTER_OF_MASTERS_XREF XREF
ON VOLTAGEACCESS(OFC_ID,'sorparty')=VOLTAGEACCESS(XREF.SOR_PARTY_ID,'sorparty')--changed here
WHERE XREF.PARTY_ID_TYPE_CDE = 'Agency' AND XREF.CURRENT_ROW_IND AND XREF.LOGICAL_DELETE_IND = FALSE
ORDER BY SOR_PARTY_ID_DECRYP,DIM_PARTY_NATURAL_KEY_HASH_UUID;

SELECT ANALYZE_STATISTICS('TEMP_XREF_AGENCY');

------- load pre_work with encryption data -----------

TRUNCATE TABLE EDW_STAGING.PARTY_IDM_BR_HIER_OFC_PRE_WORK;

------ load <>'d' records into pre_work -----------

/*
create local temporary table pre_work on commit preserve rows as 
select * from EDW_STAGING.PARTY_IDM_BR_HIER_OFC_PRE_WORK where 1<>1;
*/

INSERT /* +DIRECT */ INTO EDW_STAGING.PARTY_IDM_BR_HIER_OFC_PRE_WORK
(
 OFC_ID
,OFC_NM
,AD_1
,AD_2
,CITY
,ST
,ZIP
,CTRY
,TELNR
,WBST
,EMAIL
,RGN_NM
,DSTRB_CHANNEL
,DSTRB_DESC
,DIM_PARTY_NATURAL_KEY_HASH_UUID
,BEGIN_DT
,BEGIN_DTM
,ROW_PROCESS_DTM
,AUDIT_ID
,LOGICAL_DELETE_IND
,CHECK_SUM
,CURRENT_ROW_IND
,END_DT
,END_DTM
,SOURCE_SYSTEM_ID 
,RESTRICTED_ROW_IND
,UPDATE_AUDIT_ID
,SOURCE_DELETE_IND
,PROCESS_IND
)
SELECT 
 OFC_ID
,OFC_NM
,AD_1
,AD_2
,CITY
,ST
,ZIP
,CTRY
,TELNR
,WBST
,EMAIL
,RGN_NM
,DSTRB_CHANNEL
,DSTRB_DESC
,DIM_PARTY_NATURAL_KEY_HASH_UUID
,BEGIN_DT
,BEGIN_DTM
,ROW_PROCESS_DTM
,AUDIT_ID
,LOGICAL_DELETE_IND
,UUID_GEN(SOURCE_DELETE_IND,OFC_NM,AD_1,AD_2,CITY,ST,ZIP,CTRY,TELNR,WBST,EMAIL,RGN_NM,DSTRB_CHANNEL,DSTRB_DESC,DIM_PARTY_NATURAL_KEY_HASH_UUID::VARCHAR)::UUID AS CHECK_SUM
,CURRENT_ROW_IND
,END_DT
,END_DTM
,SOURCE_SYSTEM_ID 
,RESTRICTED_ROW_IND
,UPDATE_AUDIT_ID
,SOURCE_DELETE_IND
,PROCESS_IND
FROM
(
	SELECT 
	 VOLTAGEPROTECT(CLEAN_STRING(OFC_ID),'sorparty')                 AS OFC_ID
	,VOLTAGEPROTECT(CLEAN_STRING(OFC_NM),'name')                     AS OFC_NM
	,VOLTAGEPROTECT(CLEAN_STRING(AD_1),'address')                    AS AD_1
	,VOLTAGEPROTECT(CLEAN_STRING(AD_2),'address')                    AS AD_2
	,VOLTAGEPROTECT(CLEAN_STRING(CITY),'city')                       AS CITY
	,VOLTAGEPROTECT(CLEAN_STRING(ST),'state')                        AS ST
	,VOLTAGEPROTECT(CLEAN_STRING(ZIP),'zipcode')                     AS ZIP
	,CLEAN_STRING(CTRY)                                              AS CTRY                                         
	,VOLTAGEPROTECT(CLEAN_STRING(TELNR),'phone_char')                AS TELNR
	,CLEAN_STRING(WBST)                                              AS WBST
	,VOLTAGEPROTECT(CLEAN_STRING(EMAIL),'email')                     AS EMAIL
	,VOLTAGEPROTECT(CLEAN_STRING(RGN_NM),'name')                     AS RGN_NM
	,CLEAN_STRING(DSTRB_CHANNEL)                                     AS DSTRB_CHANNEL
	,CLEAN_STRING(DSTRB_DESC)                                        AS DSTRB_DESC
	,COALESCE(PDCR.DIM_PARTY_NATURAL_KEY_HASH_UUID,AGENCY.DIM_PARTY_NATURAL_KEY_HASH_UUID,UUID_GEN(NULL)::UUID) AS DIM_PARTY_NATURAL_KEY_HASH_UUID
	,CURRENT_TIMESTAMP::DATE                           AS BEGIN_DT
	,CURRENT_TIMESTAMP::TIMESTAMP(6)                   AS BEGIN_DTM
	,CURRENT_TIMESTAMP(6)                              AS ROW_PROCESS_DTM
	,:audit_id                                         AS AUDIT_ID
	,FALSE                                             AS LOGICAL_DELETE_IND
	,TRUE                                              AS CURRENT_ROW_IND
	,'12-31-9999'::DATE                                AS END_DT
	,'12-31-9999'::TIMESTAMP(6)                        AS END_DTM
	,'15'                                              AS SOURCE_SYSTEM_ID 
	,FALSE                                             AS RESTRICTED_ROW_IND
	,:audit_id                                         AS UPDATE_AUDIT_ID
	,FALSE                                             AS SOURCE_DELETE_IND
	,PROCESS_IND                                       AS PROCESS_IND
	FROM
	TEMP_IDM_BR_HIER_OFC OFC
	LEFT JOIN TEMP_XREF_PDCR PDCR 
	ON OFC.OFC_ID = PDCR.SOR_PARTY_ID_DECRYP 
	LEFT JOIN TEMP_XREF_AGENCY AGENCY 
	ON OFC.OFC_ID = AGENCY.SOR_PARTY_ID_DECRYP
	WHERE PROCESS_IND<>'D'
)SRC;


COMMIT;

------ load 'd' records into pre_work -----------

INSERT /* +DIRECT */ INTO EDW_STAGING.PARTY_IDM_BR_HIER_OFC_PRE_WORK
(
 OFC_ID
,OFC_NM
,AD_1
,AD_2
,CITY
,ST
,ZIP
,CTRY
,TELNR
,WBST
,EMAIL
,RGN_NM
,DSTRB_CHANNEL
,DSTRB_DESC
,DIM_PARTY_NATURAL_KEY_HASH_UUID
,BEGIN_DT
,BEGIN_DTM
,ROW_PROCESS_DTM
,AUDIT_ID
,LOGICAL_DELETE_IND
,CHECK_SUM
,CURRENT_ROW_IND
,END_DT
,END_DTM
,SOURCE_SYSTEM_ID 
,RESTRICTED_ROW_IND
,UPDATE_AUDIT_ID
,SOURCE_DELETE_IND
,PROCESS_IND
)
SELECT 
 SRC.OFC_ID
,SRC.OFC_NM
,SRC.AD_1
,SRC.AD_2
,SRC.CITY
,SRC.ST
,SRC.ZIP
,SRC.CTRY
,SRC.TELNR
,SRC.WBST
,SRC.EMAIL
,SRC.RGN_NM
,SRC.DSTRB_CHANNEL
,SRC.DSTRB_DESC
,SRC.DIM_PARTY_NATURAL_KEY_HASH_UUID
,SRC.BEGIN_DT
,SRC.BEGIN_DTM
,SRC.ROW_PROCESS_DTM
,SRC.AUDIT_ID
,SRC.LOGICAL_DELETE_IND
,UUID_GEN(SRC.SOURCE_DELETE_IND,SRC.OFC_NM,SRC.AD_1,SRC.AD_2,SRC.CITY,SRC.ST,SRC.ZIP,SRC.CTRY,SRC.TELNR,SRC.WBST,SRC.EMAIL,SRC.RGN_NM,
          SRC.DSTRB_CHANNEL,SRC.DSTRB_DESC,SRC.DIM_PARTY_NATURAL_KEY_HASH_UUID::VARCHAR)::UUID AS CHECK_SUM
,SRC.CURRENT_ROW_IND
,SRC.END_DT
,SRC.END_DTM
,SRC.SOURCE_SYSTEM_ID 
,SRC.RESTRICTED_ROW_IND
,SRC.UPDATE_AUDIT_ID
,SRC.SOURCE_DELETE_IND
,SRC.PROCESS_IND
FROM
(
	SELECT 
	 VOLTAGEPROTECT(CLEAN_STRING(OFC_ID),'sorparty')                 AS OFC_ID
	,VOLTAGEPROTECT(CLEAN_STRING(OFC_NM),'name')                     AS OFC_NM
	,VOLTAGEPROTECT(CLEAN_STRING(AD_1),'address')                    AS AD_1
	,VOLTAGEPROTECT(CLEAN_STRING(AD_2),'address')                    AS AD_2
	,VOLTAGEPROTECT(CLEAN_STRING(CITY),'city')                       AS CITY
	,VOLTAGEPROTECT(CLEAN_STRING(ST),'state')                        AS ST
	,VOLTAGEPROTECT(CLEAN_STRING(ZIP),'zipcode')                     AS ZIP
	,CLEAN_STRING(CTRY)                                              AS CTRY                                         
	,VOLTAGEPROTECT(CLEAN_STRING(TELNR),'phone_char')                AS TELNR
	,CLEAN_STRING(WBST)                                              AS WBST
	,VOLTAGEPROTECT(CLEAN_STRING(EMAIL),'email')                     AS EMAIL
	,VOLTAGEPROTECT(CLEAN_STRING(RGN_NM),'name')                     AS RGN_NM
	,CLEAN_STRING(DSTRB_CHANNEL)                                     AS DSTRB_CHANNEL
	,CLEAN_STRING(DSTRB_DESC)                                        AS DSTRB_DESC
	,COALESCE(PDCR.DIM_PARTY_NATURAL_KEY_HASH_UUID,AGENCY.DIM_PARTY_NATURAL_KEY_HASH_UUID,UUID_GEN(NULL)::UUID) AS DIM_PARTY_NATURAL_KEY_HASH_UUID
	,CURRENT_TIMESTAMP::DATE                           AS BEGIN_DT
	,CURRENT_TIMESTAMP::TIMESTAMP(6)                   AS BEGIN_DTM
	,CURRENT_TIMESTAMP(6)                              AS ROW_PROCESS_DTM
	,:audit_id                                         AS AUDIT_ID
	,FALSE                                             AS LOGICAL_DELETE_IND
	,FALSE                                             AS CURRENT_ROW_IND
	,CURRENT_DATE                                      AS END_DT
	,CURRENT_TIMESTAMP(6)                              AS END_DTM
	,'15'                                              AS SOURCE_SYSTEM_ID 
	,FALSE                                             AS RESTRICTED_ROW_IND
	,:audit_id                                         AS UPDATE_AUDIT_ID
	,FALSE                                             AS SOURCE_DELETE_IND
	,PROCESS_IND                                       AS PROCESS_IND
	FROM
	TEMP_IDM_BR_HIER_OFC OFC
	LEFT JOIN TEMP_XREF_PDCR PDCR 
	ON OFC.OFC_ID = PDCR.SOR_PARTY_ID_DECRYP 
	LEFT JOIN TEMP_XREF_AGENCY AGENCY 
	ON OFC.OFC_ID = AGENCY.SOR_PARTY_ID_DECRYP WHERE PROCESS_IND='D'
)SRC
LEFT JOIN
EDW_STAGING.PARTY_IDM_BR_HIER_OFC_PRE_WORK TGT 
ON SRC.OFC_ID = TGT.OFC_ID
WHERE TGT.OFC_ID IS NULL ;

COMMIT;

SELECT ANALYZE_STATISTICS('EDW_STAGING.PARTY_IDM_BR_HIER_OFC_PRE_WORK');

  /* work inserts */

------- loads the records that are not there in the target ------

TRUNCATE TABLE EDW_WORK.PARTY_IDM_BR_HIER_OFC;
/*
CREATE local temporary table work1 on commit preserve rows AS 
select * from EDW_WORK.PARTY_IDM_BR_HIER_OFC where 1<>1;*/

INSERT /* +DIRECT */ INTO EDW_WORK.PARTY_IDM_BR_HIER_OFC
(
 OFC_ID
,OFC_NM
,AD_1
,AD_2
,CITY
,ST
,ZIP
,CTRY
,TELNR
,WBST
,EMAIL
,RGN_NM
,DSTRB_CHANNEL
,DSTRB_DESC
,DIM_PARTY_NATURAL_KEY_HASH_UUID
,BEGIN_DT
,BEGIN_DTM
,ROW_PROCESS_DTM
,AUDIT_ID
,LOGICAL_DELETE_IND
,CHECK_SUM
,CURRENT_ROW_IND
,END_DT
,END_DTM
,SOURCE_SYSTEM_ID 
,RESTRICTED_ROW_IND
,UPDATE_AUDIT_ID
,SOURCE_DELETE_IND
)
SELECT 
 SRC.OFC_ID
,SRC.OFC_NM
,SRC.AD_1
,SRC.AD_2
,SRC.CITY
,SRC.ST
,SRC.ZIP
,SRC.CTRY
,SRC.TELNR
,SRC.WBST
,SRC.EMAIL
,SRC.RGN_NM
,SRC.DSTRB_CHANNEL
,SRC.DSTRB_DESC
,SRC.DIM_PARTY_NATURAL_KEY_HASH_UUID
,SRC.BEGIN_DT
,SRC.BEGIN_DTM
,SRC.ROW_PROCESS_DTM
,SRC.AUDIT_ID
,SRC.LOGICAL_DELETE_IND
,SRC.CHECK_SUM
,SRC.CURRENT_ROW_IND
,SRC.END_DT
,SRC.END_DTM
,SRC.SOURCE_SYSTEM_ID 
,SRC.RESTRICTED_ROW_IND
,SRC.UPDATE_AUDIT_ID
,SRC.SOURCE_DELETE_IND
FROM 
EDW_STAGING.PARTY_IDM_BR_HIER_OFC_PRE_WORK SRC
LEFT JOIN
EDW_EXTERNAL_INPUT_DATA.IDM_BR_HIER_OFC TGT 
ON SRC.OFC_ID = TGT.OFC_ID
WHERE TGT.OFC_ID IS NULL ;

COMMIT;

--------- update tgt record, inactivates the records that have different check_sum than that of the current target record  ------

INSERT /* +DIRECT */ INTO EDW_WORK.PARTY_IDM_BR_HIER_OFC
(
 OFC_ID
,OFC_NM
,AD_1
,AD_2
,CITY
,ST
,ZIP
,CTRY
,TELNR
,WBST
,EMAIL
,RGN_NM
,DSTRB_CHANNEL
,DSTRB_DESC
,DIM_PARTY_NATURAL_KEY_HASH_UUID
,BEGIN_DT
,BEGIN_DTM
,ROW_PROCESS_DTM
,AUDIT_ID
,LOGICAL_DELETE_IND
,CHECK_SUM
,CURRENT_ROW_IND
,END_DT
,END_DTM
,SOURCE_SYSTEM_ID 
,RESTRICTED_ROW_IND
,UPDATE_AUDIT_ID
,SOURCE_DELETE_IND
)
SELECT 
 TGT.OFC_ID
,TGT.OFC_NM
,TGT.AD_1
,TGT.AD_2
,TGT.CITY
,TGT.ST
,TGT.ZIP
,TGT.CTRY
,TGT.TELNR
,TGT.WBST
,TGT.EMAIL
,TGT.RGN_NM
,TGT.DSTRB_CHANNEL
,TGT.DSTRB_DESC
,TGT.DIM_PARTY_NATURAL_KEY_HASH_UUID
,TGT.BEGIN_DT
,TGT.BEGIN_DTM
,CURRENT_TIMESTAMP::TIMESTAMP(6)	 AS ROW_PROCESS_DTM
,TGT.AUDIT_ID
,TGT.LOGICAL_DELETE_IND
,TGT.CHECK_SUM
,FALSE                               AS CURRENT_ROW_IND
,SRC.BEGIN_DT - INTERVAL '1' DAY     AS END_DT
,SRC.BEGIN_DTM - INTERVAL '1' SECOND AS END_DTM
,TGT.SOURCE_SYSTEM_ID 
,TGT.RESTRICTED_ROW_IND
,SRC.UPDATE_AUDIT_ID
,TGT.SOURCE_DELETE_IND
FROM
EDW_EXTERNAL_INPUT_DATA.IDM_BR_HIER_OFC TGT
JOIN
EDW_STAGING.PARTY_IDM_BR_HIER_OFC_PRE_WORK SRC
ON TGT.OFC_ID=SRC.OFC_ID AND TGT.CURRENT_ROW_IND=TRUE
WHERE (SRC.CHECK_SUM <> TGT.CHECK_SUM)
OR (SRC.PROCESS_IND='D' AND TGT.CHECK_SUM = SRC.CHECK_SUM);

COMMIT;

--------- inserts the source updated records into the target  ------

INSERT /* +DIRECT */ INTO EDW_WORK.PARTY_IDM_BR_HIER_OFC
(
 OFC_ID
,OFC_NM
,AD_1
,AD_2
,CITY
,ST
,ZIP
,CTRY
,TELNR
,WBST
,EMAIL
,RGN_NM
,DSTRB_CHANNEL
,DSTRB_DESC
,DIM_PARTY_NATURAL_KEY_HASH_UUID
,BEGIN_DT
,BEGIN_DTM
,ROW_PROCESS_DTM
,AUDIT_ID
,LOGICAL_DELETE_IND
,CHECK_SUM
,CURRENT_ROW_IND
,END_DT
,END_DTM
,SOURCE_SYSTEM_ID 
,RESTRICTED_ROW_IND
,UPDATE_AUDIT_ID
,SOURCE_DELETE_IND
)
SELECT 
 SRC.OFC_ID
,SRC.OFC_NM
,SRC.AD_1
,SRC.AD_2
,SRC.CITY
,SRC.ST
,SRC.ZIP
,SRC.CTRY
,SRC.TELNR
,SRC.WBST
,SRC.EMAIL
,SRC.RGN_NM
,SRC.DSTRB_CHANNEL
,SRC.DSTRB_DESC
,SRC.DIM_PARTY_NATURAL_KEY_HASH_UUID
,SRC.BEGIN_DT
,SRC.BEGIN_DTM
,CURRENT_TIMESTAMP(6)	AS ROW_PROCESS_DTM
,SRC.AUDIT_ID
,SRC.LOGICAL_DELETE_IND
,SRC.CHECK_SUM
,SRC.CURRENT_ROW_IND
,SRC.END_DT
,SRC.END_DTM
,SRC.SOURCE_SYSTEM_ID 
,SRC.RESTRICTED_ROW_IND
,SRC.UPDATE_AUDIT_ID
,SRC.SOURCE_DELETE_IND
FROM 
EDW_STAGING.PARTY_IDM_BR_HIER_OFC_PRE_WORK SRC
LEFT JOIN
EDW_EXTERNAL_INPUT_DATA.IDM_BR_HIER_OFC TGT ON SRC.OFC_ID = TGT.OFC_ID AND TGT.CURRENT_ROW_IND = TRUE
WHERE 
(TGT.ROW_SID IS NULL AND (SRC.OFC_ID) IN ( SELECT DISTINCT OFC_ID FROM EDW_EXTERNAL_INPUT_DATA.IDM_BR_HIER_OFC TGT1 )) 
												OR 
( TGT.ROW_SID IS NOT NULL AND TGT.CHECK_SUM <> SRC.CHECK_SUM );

COMMIT;

SELECT ANALYZE_STATISTICS('EDW_WORK.PARTY_IDM_BR_HIER_OFC');